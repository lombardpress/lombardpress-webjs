{"version":3,"sources":["components/config.js","components/Home.js","components/utils.js","components/Spinner.js","reducers/searchExpressionsListReducer.js","actions/searchExpressionsListActions.js","reducers/searchAuthorsListReducer.js","actions/searchAuthorsListActions.js","reducers/searchWorkGroupsListReducer.js","actions/searchWorkGroupsListActions.js","reducers/searchExpressionTypesListReducer.js","components/Search3Parameters.js","actions/searchExpressionTypesListActions.js","components/searchUtils.js","components/Search3.js","queries/questionTitleQuery.js","components/Print.js","components/Queries.js","components/TextOutline.js","components/TextOutlineWrapper.js","components/OSDInstance.js","components/Image.js","components/LineText.js","components/ImageTextWrapper.js","components/ImageLogo.js","components/Surface2.js","components/Surface3.js","components/Surface3Wrapper.js","components/XmlView.js","components/Window/WindowNavBar.js","components/NextPrevBar.js","components/TextCompareItem.js","components/TextCompare.js","components/NgramDisplay.js","queries/ngramRelatedQuery.js","components/TextCompareWrapper.js","components/PersonInfo.js","queries/personInfoQuery.js","components/Comment2Create.js","components/Comment2Item.js","components/Comments2ImportExport.js","components/Comments2.js","components/Citation.js","components/CitationExplanation.js","components/ManifestationList.js","components/CitationWrapper.js","components/CodexToc.js","components/TextPreviewWrapper.js","queries/TextPreviewWrapperQueries.js","components/SurfaceInfo.js","queries/SurfaceInfoQuery.js","components/WorkGroupInfo.js","components/Dictionary.js","components/Window/WindowUtil.js","components/Window/Window2.js","components/TextNavBar.js","components/Text.js","components/Item.js","components/AuthorCollection.js","components/VersionChain.js","components/Collection.js","components/Codex.js","components/ExpressionType.js","queries/expressionTypeQuery.js","components/TextWrapper.js","components/TextArticle.js","components/ResourceTypeList.js","queries/resourceTypeQuery.js","components/TextSwitch.js","components/About.js","components/NavBar.js","components/Footer.js","components/AppRouter.js","serviceWorker.js","i18n.js","index.js"],"names":["sparqlEndpoint","Home","props","t","useTranslation","className","Container","id","fluid","Jumbotron","Button","to","style","color","loadXMLDoc","url","Promise","resolve","req","XMLHttpRequest","open","XSLTProcessor","responseType","e","console","log","onload","this","responseXML","send","convertXMLDoc","xmlurl","xslurl","reject","all","then","data","xsltProcessor","importStylesheet","resultDocument","transformToFragment","document","reason","Error","copyToClipboard","string","dummy","createElement","body","appendChild","value","select","execCommand","removeChild","runQuery","query","Axios","get","params","scrollToParagraph","hash","highlight","element","$","addClass","removeClass","children","includes","setTimeout","length","stop","animate","scrollTop","offset","top","nodeFilterCheck","node","check","parentElement","NodeFilter","FILTER_REJECT","nodeValue","FILTER_ACCEPT","cleanText","selectedText","replace","getInstanceNumber","wordArray","wordPosition","number","i","getStringBeforeWord","text","word","instanceNumber","first","splitText","split","join","goToGitHubEdit","selectedElementTargetId","newRawUrl","d","findElement","newLineCount","afterText","regexp","RegExp","getLineNumber","editUrl","window","textReduce","wordRange","wordTokenStart","wordTokenEnd","filter","Boolean","slice","Spinner","animation","role","variant","searchExpressionsListReducer","state","action","type","expressions","fetchExpressionsList","searchParameters","dispatch","workGroupSparql","searchWorkGroup","expressionAuthorTypeSparql","expressionAuthorType","authorSparql","searchAuthor","res","searchWorks","results","bindings","map","result","expression","expressionShortId","expressionTitle","workGroup","workGroupTitle","author","authorTitle","searchAuthorsListReducer","authors","fetchAuthorsList","authorShortId","completeAuthorsFetch","searchWorkGroupsListReducer","workGroups","fetchWorkGroupsList","authorQuery","completeWorkGroupsListFetch","searchExpressionTypesListReducer","expressionTypes","Search3Parameters","useState","searchType","setSearchType","searchTerm","setSearchTerm","setSearchAuthor","searchEid","setSearchEid","searchEType","setSearchEType","setSearchWorkGroup","resultsFilter","setResultsFilter","useReducer","searchExpressionTypesList","searchExpressionTypesListDispatch","searchExpressionsList","searchExpressionsListDispatch","searchAuthorsList","searchAuthorsListDispatch","searchWorkGroupsList","searchWorkGroupsListDispatch","displayAllParameters","setDisplayAllParameters","useEffect","handleSetSearchParameters","searchExpressionsListActions","searchAuthorsListActions","searchWorkGroupsListActions","expressionType","expressionTypeTitle","completeExpressionTypesListFetch","searchExpressionTypesListActions","InputGroup","size","Prepend","Text","Form","Control","as","placeholder","onChange","target","content","key","showAdvancedParameters","onClick","retrieveExpressionResults","displayTextResults","textResults","r","textString","previous","hit","next","range","start","end","pid","dangerouslySetInnerHTML","__html","displayQuestionResults","displayResults","resource","longTitle","qtitle","toLowerCase","toUpperCase","Search3","setSearchParameters","setResults","questionResults","setQuestionResults","filterQuestionResults","filterResults","handleRunSearch","preventDefault","retrieveAuthorResults","retrieveWorkGroupResults","workGroupQuery","expressionTypeQuery","eidQuery","questionTitleQuery","newResults","forEach","push","combinedString","hidden","onSubmit","parameters","showLabels","showSubmit","marginRight","defaultProps","Print","getPdf","bind","status","pdf","hashWithExtension","setState","Status","prevProps","newUrl","width","height","href","React","Component","basicInfoQuery","itemExpressionUri","partsInfoQuery","resourceurl","getSurfaceInfo","surfaceid","getCodexInfo","codexid","getCodexInfoFromManifest","manifestid","getCodexInfoFromSurface","getCodexInfoFromCanvas","canvasid","TextOutline","handleToggleChildren","mounted","parts","showChildren","isPartOf","prevState","resourceid","getChildParts","newData","part","title","level","structureType","questionTitle","isPartOfId","isPartOfTitle","retrieveParts","membersOf","indent","bold","showParentLink","showAuthor","mtFocus","collectionLink","rel","alt","src","p","focusResourceid","TextOutlineWrapper","getMembersOf","memberOf","retrieveMembersOf","OSDInstance","instance","setInstance","w","h","viewerWidthHeight","setViewerWidthHeight","uuidv4","viewerId","coords","computeViewerWidthHeight","imageurl","addTiledImage","tileSource","sc","getScalarCoordinates","rect","OpenSeadragon","Rect","x","y","setBounds","setOverlay","lineFocusCoords","lsc","linerect","setGoHome","viewport","fitBounds","prefixUrl","preserveViewport","visibilityRatio","minZoomLevel","defaultZoomLevel","tileSources","controlsFadeDelay","controlsFadeLength","addHandler","elt","addOverlay","location","goHome","inputCoords","imageH","imageW","ar","parseInt","displayWidth","Image","imageUrl","LineText","label","ImageTextWrapper","searchText","targetLabel","canvas","canvasShort","ImageLogo","logoUrl","setLogoUrl","logo","catch","error","margin","Surface2","mount","handleNext","handlePrevious","handleLineFocusNext","handleLineFocusPrev","isLineNumberLast","isLineNumberFirst","handleToggleTextLines","handleToggleAllLines","currentSurfaceId","manifest","region","annotationsDisplay","showAllLines","handleSurfaceFocusChange","b","alUrl","d2","surfaceTitle","next_surface","previous_surface","annotations","resources","currentLineNumber","lineFocusId","newLineArray","pop","toString","handleLineFocusChange","previousLineArray","total","retrieveSurfaceInfo","displayImage","chars","on","surfaceButton","imageTextWrappers","imageResult","displayImages","Surface3","surfaces","manifestationid","d1","z","surface","firstLine","lastLine","last","order","newSurface","fl","flcanvas","flcanvasShort","flcoords","ll","llcoords","lly","llh","llbottom","sort","a","Surface3Wrapper","handleChangeManifestation","handleToggleTextLinesView","handleSetCustomExpressionId","handleGetCustomManifestations","handleChangeCustomManifestation","focusedManifestation","userAddedExpressionId","userAddedManifestations","focusedCustomManifestation","manifestations","manifestation","manifestationTitle","transcription","manifestationCTranscription","cmanifestation","view","hideSelectionList","m","hideDisplayChoice","isDependentSurface3","marginTop","padding","fontSize","inline","FormControl","XmlView","retrieveXML","xmlstring","tresourceid","language","docco","showLineNumbers","WindowNavBar","Nav","availableTabs","idx","show","Item","name","Link","active","windowLoad","description","handleTabChange","windowId","icon","openWidthHeight","handleMinimize","handleMiddlize","handleMaximize","handleClose","altWindowState","handleDuplicateWindow","windowType","NextPrevBar","handleUpArrow","selectionRange","handleBlockFocusChange","info","parent","topLevel","TextCompareItem","handleToggleShow","handleToggleCompare","showCompare","compareText","rawText","levenshteinDistance","undefined","usedBase","usedCompareTranscription","base","reducedText","isMainText","targetRange","relationLabel","isRelatedToRange","dmp","Diff","diff_match_patch","diff","text1","text2","diff_wordsToChars_","lineText1","chars1","lineText2","chars2","lineArray","diffs","diff_main","diff_charsToLines_","diff_wordMode","textClean","diff_cleanupSemantic","diff_levenshtein","ds","diff_prettyHtml","compareTranscription","createCompare","newManifestations","showImage","surfaceWidth","isBase","levenNum","heatColor","borderLeft","paddingLeft","handleChangeBase","ref","displayComparison","TextCompare","handleToggleShowAll","baseText","inbox","cdoc","cxml","topLevelExpression","ctranscription","arrangeTextInfo","getTextInfo","expressionid","relatedExpressions","referringResource","NgramDisplay","setRelatedExpressions","scoreMinimumInput","setScoreMinimumInput","scoreMinimumUse","setScoreMinimumUse","ngramRelated","runNgramQuery","cosineScoreLimit","ngramRelatedQuery","other","displayExpressions","index","TextCompareWrapper","handleCustomUpdateRelatedExpressions","getText","page","intendedPage","pagesize","nextPage","previousPage","rangeStart","rangeEnd","customExpressionId","customExpressionObject","expressionObject","newExpressions","_this","rangeFilter","activeSource","inverseSource","getRelatedExpressions","bindings2","isRelatedTo","isRelatedToRangeStart","isRelatedToRangeEnd","startPage","newExpression","displayPagination","Object","keys","display","PersonInfo","setAuthorTitle","authorImageUrl","setAuthorImageUrl","authorDescription","setAuthorDescription","birthDate","setAuthorBirthDate","deathDate","setAuthorDeathDate","mentionedByFrequency","setMentionedByFrequency","mentionsFrequency","setMentionsFrequency","personid","pd","personTitle","wikidataid","getWikiDataInfo","fd","count","sortFrequencyResults","item","getPersonMentionsFrequency","nameA","nameB","wikidataShortId","wd","imageslug","entities","claims","P18","mainsnak","datavalue","descriptions","P569","time","P570","d3","pages","imageinfo","justifyContent","marginLeft","Comment2Create","comment","setComment","motivation","setMotivation","editedTextDefault","textEdited","editedText","setEditedText","noTarget","setNoTarget","orderNumber","setOrderNumber","commentType","submitComment","rows","border","checked","block","Comment2Item","editable","setEditable","source","selectedFragment","selectedFragmentRange","selector","exact","editedValue","update","updateComment","link","match","strings","l","linkComponent","linkCopy","prunedString","addSCTALinksToValue","created","removeComment","ImportExport","newListName","setNewListName","newListUrl","setNewListUrl","showImport","setShowImport","reader","FileReader","readAsText","files","fileName","list","handleImportList","JSON","parse","stringify","currentList","encodeURI","packageData","download","currentListName","Date","toISOString","Comments2","localStorage","getItem","lists","setLists","comments","setComments","showFocusComments","setShowFocusComments","commentFilter","setCommentFilter","mentionedBy","setMentionedBy","showFilters","setShowFilters","newLists","c","targetComment","old_index","indexOf","k","splice","getMentionedBy","setItem","annoId","dateObject","annotation","textEdit","focused","handleOnClickComment","Comments2ImportExport","listname","parsedList","Citation","eurl","etitle","murl","mtitle","turl","fetching","transcriptionid","allBindings","eLongTitle","editorTitle","editor","datasource","codexTitle","retrieveCitation","fullCitationString","CitationExplanation","toggleCitationExplanation","showCitationExplanation","ManifestationList","toggleAlternativeManifestations","showAlternativeManifestations","optionalDisplay","displayManifestations","propTypes","PropTypes","isRequired","array","bool","handleFocusChange","func","CitationWrapper","CodexToc","items","setItems","codexResourceType","unique","v","expressionList","item_expression_title","surface_title","item_expression_question_title","displayItems","TextPreviewWrapper","handleToggleShowTokenPosition","showTokenPosition","textPreviewResourceId","getTranscriptionId","textPreviewStart","textPreviewEnd","referringRange","referringSelectionRange","handleTextPreviewFocusChange","context","SurfaceInfo","handleToggleRelatedDiscussion","handleSurface3Manifestations","handleToggleShowQuery","handleToggleShowImages","surfaceMap","showTextRegion","showQuery","eid","codexSlug","surface3FocusedManifestation","surface3Manifestations","find","showComments","showRelatedSurfaces","showImages","hasManifestation","isOnSurface","handleToggleRelatedSurfaces","WorkGroupInfo","Dictionary","dictionary","getAvailableComponents","resourceType","showComponents","Window2","mountStatus","textCompare","surface3","xml","search","textOutline","citation","manifestationSlug","newMountStatus","tempNewMount","focus","handleSwitchWindow","focusSet","displayComponents","desc","getAvailableTabs","defaultManifestationSlug","itemFocus","textPreviewObjects","displayChild","withTranslation","Navbar","bg","expand","fixed","Toggle","aria-controls","Collapse","pdfView","handleTogglePdfView","retrieveText","handleShowToolTip","handleHideToolTip","handleHideFootnoteToolTip","handleShowFootnoteToolTip","handleOnToolTipClick","selectionCoords","doc","scrollTo","docFragment","topLevelFragment","getElementById","innerHTML","setEvents","mark","sel","getSelection","rangeCount","rng","getRangeAt","pAncestor","nodeType","tagName","getContainingP","commonAncestorContainer","cnt","cloneContents","remove","textContent","clone","startOffset","startContainer","selectionText","precedingTextLength","n","getRangeWordCount","root","endContainer","endOffset","ownerDocument","createRange","setStart","setEnd","oRect","getBoundingClientRect","click","attr","setFocus","openWindow","markWithElement","paragraphid","closest","ln","html","footnoteOffset","footnoteText","targetText","targetParagraph","splitTargetId","splitTargetRange","targetObjects","addEventListener","markElementRemove","container","startWordOffset","endWordOffset","nodeIter","createNodeIterator","SHOW_TEXT","breaks","wordLength","nextNode","previousSibling","getAttribute","nodeTextArray","newWordLength","toRange","extractContents","backgroundColor","insertNode","handleUpdateSelectionRange","contents","unwrap","s","ReactTooltip","hide","fooRef","foonoteRef","scrollToNew","displayText","position","left","data-tip","data-for","clickable","place","AuthorCollection","retrieveAuthorCollectionInfo","handleItemFilter","itemFilter","createRef","authorArticles","textArticles","itemsPromise","Array","isArray","authorArticle","textArticle","hasTopLevelExpression","err","authorCollectionInfo","arrangeItems","refs","Table","striped","bordered","hover","VersionChain","getVersionHistory","handleToggleShowVersions","versions","currentVersion","showVersions","transcriptionUri","reviewUrl","reviewObject","img_url","reviewid","ipfsHash","html_link","rubric_link","summary","newVersion","versionTranscription","version","versionLabel","version_label","versionOrderNumber","order_number","versionReview","review","versionDoc","versionReviewInfo","Alert","currentlyViewing","gitHubEdit","gitHubIssues","displayAlert","Collection","retrieveCollectionInfo","makeRequests","handleFilter","partsPromise","partsObject","pId","partTitle","partType","partQuestionTitle","partLevel","itemsObject","itemId","itemTitle","itemType","itemQuestionTitle","itemAuthor","itemAuthorTitle","cm","cmTitle","ct","expressionsInfo","partsInfo","arrangeParts","collectionInfo","newResourceId","retrieveWorkGroupInfo","Row","Col","xs","Codex","retrieveCodexInfo","handleToggleShowContents","focusedSurface","relatedCodices","showContents","handleSetFocus","surfaceFocus","ExpressionType","setExpressions","expressionTypeId","TextWrapper","setFocus2","windows","window1","window2","blockFocus","altWindowId","fullid","handleUpdateUrlResource","newid","arrangeFocusInfo","arrangeItemFocusInfo","itemFocusInfo","retrieveFocusInfo","mFocus","tFocus","itemTranscriptionId","setItemFocus","tokenRange","textClassNames","resourceTitle","TextArticle","articleType","toggleClass","noteDisplay","ResourceTypeList","setResources","setFilter","resourceTypeId","TextSwitch","displayType","blockDivFocus","history","itemParent","getArticleTranscriptionDoc","articleDoc","getItemTranscriptionFromBlockDiv","blockDivExpression","Qs","ignoreQueryPrefix","getInfo","Helmet","About","NavBar","Footer","AppRouter","fallback","forceRefresh","path","component","hostname","i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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oB,6CAC1B,IACA,aACA,IAAMA,EAAoB,qDAC1B,IACA,aACA,IAAMA,EAAoB,kDAC1B,IACA,IAAMA,EAAoB,+CAC1B,IACA,mBAAmB9K,KAAK,IA6DjB,SAAS+K,GAAeC,GAoB3B,MAnBY,CACZ,gGACA,WACA,IAAMA,EAAc,qDACpB,IAAMA,EAAc,iEACpB,IAAMA,EAAc,+CACpB,6DACA,uEACA,aACA,uEACA,IACA,aACA,uDACA,IACA,aACA,yEACA,IACA,IACA,8BAA8BhL,KAAK,IAqIlC,SAASiL,GAAeC,GAkC3B,MAjCY,CACZ,yHACE,IACF,IAAMA,EAAY,4DAClB,IAAMA,EAAY,wDAClB,aACC,IAAMA,EAAY,qDACnB,IACA,aACC,IAAMA,EAAY,6DACf,IACJ,aACC,qEACA,iEACA,iEACD,IACA,4DACA,YACC,2EACD,IACA,YACA,iEACI,IACD,iEACA,6CACD,YACA,8DACD,IACA,YACC,sEACD,IACC,KAAKlL,KAAK,IA2ON,SAASmL,GAAaC,GAwB7B,MAvBe,CACZ,gMACA,IACE,SAAWA,EAAU,kBACrB,gEACA,aACA,6DACA,iEACA,+DACA,8DACA,oEACA,oEACA,uGACA,+EACA,6EACA,+EACA,2DACA,aACG,0FACF,IACF,IACD,IACA,2BAA2BpL,KAAK,IAG9B,SAASqL,GAAyBC,GAyBtC,MAxBY,CACZ,gMACA,IACE,4DAA8DA,EAAa,MAC3E,4DACA,gEACA,aACA,6DACA,iEACA,+DACA,8DACA,oEACA,oEACA,uGACA,+EACA,6EACA,+EACA,2DACA,aACG,0FACF,IACF,IACD,IACA,2BAA2BtL,KAAK,IAI1B,SAASuL,GAAwBL,GAwBxC,MAvBe,CACZ,gMACA,IACE,kDAAoDA,EAAY,MAChE,gEACA,aACA,6DACA,iEACA,+DACA,8DACA,oEACA,oEACA,uGACA,+EACA,6EACA,+EACA,2DACA,aACG,0FACF,IACF,IACD,IACA,2BAA2BlL,KAAK,IAI9B,SAASwL,GAAuBC,GA0BpC,MAzBY,CACZ,8MACA,IACE,yDAA2DA,EAAW,MACtE,yEACA,gEACA,gEACA,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","file":"static/js/main.547af6c3.chunk.js","sourcesContent":["//export const sparqlEndpoint = \"http://localhost:3030/ds/query\"\nexport const sparqlEndpoint = \"https://sparql-docker.scta.info/ds/query\"\n//export const sparqlEndpoint = \"https://sparql-staging.scta.info/ds/query\"\n\nexport const resourceEndpoint = \"http://scta.info/resource/scta\"\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\nimport {Link} from 'react-router-dom';\nimport {resourceEndpoint} from './config';\nimport {useTranslation} from 'react-i18next'\n\n\n\nfunction Home(props) {\n  const {t} = useTranslation();\n  //const resourceid = props.location ? Qs.parse(props.location.search, { ignoreQueryPrefix: true }).resourceid : null;\n  const displayBody = () => {\n    // if (resourceid){\n    //   return <Text resourceid={props.location.search.resourceid}/>\n    // }\n    // else\n    return (\n      <div className=\"Home\">\n        <Container id=\"lbp-home\" fluid>\n            <Container>\n              <Jumbotron id=\"lbp-jumbo\">\n              \t<h1>{t(\"Title\")}</h1>\n                <p>{t(\"Subtitle\")}</p>\n                <Button><Link className=\"nav-link\" to={\"/text?resourceid=\" + resourceEndpoint} style={{color: \"black\"}}>{t(\"Enter\")}</Link></Button>\n              </Jumbotron>\n            </Container>\n          </Container>\n          </div>\n    )\n  }\n  return (\n    displayBody()\n  )\n}\n\nexport default Home;\n","import Axios from 'axios'\nimport {sparqlEndpoint} from './config';\nimport $ from 'jquery';\n\n\nexport function loadXMLDoc(url){\n  //See https://github.com/martin-honnen/martin-honnen.github.io/blob/master/xslt/arcor-archive/2016/test2016081501.html\n  return new Promise(function(resolve) {\n    var req = new XMLHttpRequest();\n    req.open(\"GET\", url);\n    if (typeof XSLTProcessor === 'undefined') {\n     try {\n       req.responseType = 'msxml-document';\n     }\n     catch (e) {\n       console.log('error', e)\n     }\n    }\n    req.onload = function() {\n     resolve(this.responseXML)\n    }\n    req.send();\n  });\n}\n\nexport function convertXMLDoc(xmlurl, xslurl){\n  //See https://github.com/martin-honnen/martin-honnen.github.io/blob/master/xslt/arcor-archive/2016/test2016081501.html\n  return new Promise(function(resolve, reject){\n    Promise.all([loadXMLDoc(xmlurl), loadXMLDoc(xslurl)]).then(function(data) {\n      const xsltProcessor = new XSLTProcessor();\n      xsltProcessor.importStylesheet(data[1]);\n      if (data[0]){\n        const resultDocument = xsltProcessor.transformToFragment(data[0], document);\n        resolve(resultDocument)\n      }\n      else{\n        const reason = new Error('xml document could not be retrieved');\n        reject(reason); // reject\n      }\n    })\n  })\n}\n\nexport function loadHtmlResultDocFromExist(url){\n  return Axios.get(\"https://exist.scta.info/exist/apps/scta-app/xslt-conversion.xq?xmlurl=\" + url)\n}\n\nexport function nsResolver(prefix) {\n    if(prefix === \"tei\") {\n      return 'http://www.tei-c.org/ns/1.0'\n    }\n}\n\nexport function copyToClipboard(string){\n  var dummy = document.createElement(\"textarea\");\n  document.body.appendChild(dummy);\n  dummy.value = string;\n  dummy.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(dummy);\n}\n\nexport function runQuery(query){\n  //const sparqlEndpoint = \"https://sparql-docker.scta.info/ds/query\"\n  //const sparqlEndpoint = sparqlEndpoint\n  const queryPromise = Axios.get(sparqlEndpoint, { params: { \"query\": query, \"output\": \"json\" } })\n  return queryPromise\n}\n\n//handles scroll to paragraph procedure\nexport function scrollToParagraph(hash, highlight){\n    const element = $(\"#\" + hash);\n\n    // TODO: refactor. this could be a lot simpler\n    if (highlight){\n      element.addClass(\"highlightNone\");\n      $(\".paragraphnumber\").removeClass(\"highlight2\")\n      $(\".plaoulparagraph\").removeClass(\"highlightNone\")\n      $(\".lbp-quote\").removeClass(\"highlightNone\")\n      $(\".lbp-quote\").removeClass(\"highlight\")\n      $(\".lbp-ref\").removeClass(\"highlightNone\")\n      $(\".lbp-ref\").removeClass(\"highlight\")\n      $(\".plaoulparagraph\").removeClass(\"highlight\")\n      element.children(\".paragraphnumber\").addClass(\"highlight2\")\n      element.addClass( \"highlight\");\n      \n      // TODO: Refactor\n      // conditional to ensure fire of next conditional ONLY IF element[0] is found\n      // prevents error with include method below when element does not exist\n      if (element[0]){\n        // condition set to prevent fade if element is quote or ref \n        if (!element[0].className.includes('lbp-quote') && !element[0].className.includes('lbp-ref')){\n          setTimeout(function(){\n            $(\".lbp-ref\").removeClass(\"highlight\")\n            $(\".lbp-quote\").removeClass(\"highlight\")\n            $(\".plaoulparagraph\").removeClass(\"highlight\")\n            element.addClass(\"highlightNone\");\n          }, 2000);\n        }\n      }\n\n    }\n  \tif (element.length > 0) {\n  \t    $('html, body')\n              .stop()\n              .animate({\n                  scrollTop: element.offset().top - 100\n              }, 1000);\n     }\n\n  }\n\n  // adopted from https://github.com/hypothesis/client/blob/master/src/annotator/anchoring/text-position.js\n  /**\n * Convert `start` and `end` character offset positions within the `textContent`\n * of a `root` element into a `Range`.\n *\n * Throws if the `start` or `end` offsets are outside of the range `[0,\n * root.textContent.length]`.\n *\n * @param {HTMLElement} root\n * @param {number} start - Character offset within `root.textContent`\n * @param {number} end - Character offset within `root.textContent`\n * @return {Range} Range spanning text from `start` to `end`\n */\n\nfunction nodeFilterCheck(node){\n  \n  const check = node.parentElement.className\n  // skip text nodes if their parent has the following classes\n  if (check.includes(\"paragraphnumber\") \n  || check.includes(\"lbp-line-number\")\n  || check.includes(\"appnote\") \n  || check.includes(\"paragraphnumber\")\n  || check.includes(\"footnote\")\n  || check.includes(\"lbp-reg\")\n  || check.includes(\"lbp-folionumber\")\n  || check.includes(\"js-show-folio-image\") // removes folio number\n  ){\n    return NodeFilter.FILTER_REJECT\n  }\n  else if (!node.nodeValue){\n    return NodeFilter.FILTER_REJECT\n  }\n  else{\n    return NodeFilter.FILTER_ACCEPT;\n  }\n  \n}\n\nexport function toRange(root, start, end) {\n  // The `filter` and `expandEntityReferences` arguments are mandatory in IE\n  // although optional according to the spec.\n  //console.log(\"root\", root)\n  const nodeIter = root.ownerDocument.createNodeIterator(\n    root,\n    NodeFilter.SHOW_TEXT,\n    nodeFilterCheck, // filter\n    true // expandEntityReferences\n  );\n\n  let startContainer;\n  let startOffset;\n  let startWordOffset\n  let endContainer;\n  let endOffset;\n  let endWordOffset;\n  let breaks = 0;\n\n // let textLength = 0;\n  let wordLength = 0;\n  let node;\n\n  \n  while ((node = nodeIter.nextNode()) && (!startContainer || !endContainer)) {\n    // keep running total of break words and then use this to adjust word count \n    // in comparison to word count with broken words; then adjust;\n    // NOTE: requires xslt to add data-break='no' to line break span\n    if (node.previousSibling){\n      if (node.previousSibling.getAttribute){\n        if (node.previousSibling && node.previousSibling.getAttribute(\"data-break\") === \"no\"){\n          breaks += 1\n        }\n      }\n    }\n    const nodeText = node.nodeValue;\n    // get array of words in node\n    const nodeTextArray = cleanText(nodeText).split(\" \").filter(n=>n)\n    // use clean text to remove punctuation and unwanted white space, then filter to get rid of blank array items, then count\n    const newWordLength = nodeTextArray.length\n    \n    // if start word is greater than length of word count in preceding nodes, but less than or equal \n    // to word count of of preceding plus this node, then selection starts somewhere within this node\n    // select node, then find precise word and character position start\n    if (\n      !startContainer &&\n      start + breaks >= wordLength &&\n      start + breaks <= wordLength + newWordLength\n    ) {\n      startContainer = node;\n      startWordOffset = (start + breaks) - wordLength;\n      \n      // get the occurrence instance within the node (needed in case there are two more instances of the same word in the node)\n      const instanceNumber = getInstanceNumber(nodeTextArray, startWordOffset - 1)\n      // calculate character offset of word within containing node\n      startOffset = getStringBeforeWord(node.nodeValue, nodeTextArray[startWordOffset - 1], instanceNumber, true)\n    }\n    // similar to above only for final position\n    if (\n      !endContainer &&\n      end + breaks >= wordLength &&\n      end + breaks <= wordLength + newWordLength\n    ) {\n      endContainer = node;\n      endWordOffset = (end + breaks) - wordLength;\n      // get the occurrence instance within the node (needed in case there are two more instances of the same word in the node)\n      const instanceNumber = getInstanceNumber(nodeTextArray, endWordOffset - 1)\n      // calculate character offset of word within containing node\n      endOffset = getStringBeforeWord(node.nodeValue, nodeTextArray[endWordOffset - 1], instanceNumber, false)\n    }\n\n    //textLength += nodeText.length;\n    wordLength += newWordLength\n    \n    \n  }\n\n  const range = root.ownerDocument.createRange();\n  //conditional here to if container exists before calling it.\n  //usual reason a end container doesn't exist is the end number in the request does not exist in the paragraph \n  // for example, asking for end word 40 when there are only 39 words in the paragraph\n  startContainer ? range.setStart(startContainer, startOffset) : console.log(\"no container or invalid end offset\")\n  endContainer ? range.setEnd(endContainer, endOffset) : console.log(\"no container invalid end offset\")\n\n  return range;\n}\n\n// function to remove spaces from selected html text\nexport function cleanText(selectedText){\n  selectedText = selectedText.replace(/^[ ]+|[ ]+$/g,''); // remove leading and trailing white space\n    // remove all punctuation with escape slashes; escape slashes don't seem needed as the line below with slashes seems to work.\n    // this line with extra slashes produces lint errors\n    // selectedText = selectedText.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()\"]/g,\"\") //remove all punctuation\n  selectedText = selectedText.replace(/[.,/#!$%^&*;:{}=\\-_`~()\"]/g,\"\") //remove all punctuation\n  \n  selectedText = selectedText.replace(/\\s+/gi, ' ' ) // condences 1 or more space to single space\n  return selectedText\n}\n\n/**\n * @description returns identical instance number of a certain item in array,\n * e.g. if we have array [1, 2, 3, 4, 5, 1, 2, 3] \n * and we ask for the instanceNumber of index position 5, \n * the function will return 2, as this is the second instance of the number 1 in this array\n * @param {array} wordArray \n * @param {number} wordPosition \n */\nfunction getInstanceNumber(wordArray, wordPosition){\n  let number = 0\n  // using <= to include self in count\n  for (let i=0; i <= wordPosition; i++){\n    if (wordArray[i] === wordArray[wordPosition]){\n      number++\n    }\n  }\n  return number\n}\n/**\n * @description get strings before nth instance of a word\n * @param {string} text - string to be search\n * @param {string} word - word to be matched\n * @param {number} instanceNumber - number instance of word to be matched\n * modified from https://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string\n */\nfunction getStringBeforeWord(text, word, instanceNumber, first) {\n  const splitText = text.split(word, instanceNumber).join(word);  \n  if (first){\n    const characterOffset = splitText.length\n    return characterOffset\n  }\n  else{\n    const characterOffset = splitText.length + word.length\n    return characterOffset\n\n  }\n}\n/**\n * @description creates a range\n * @param {*} root \n * @param {*} startContainer \n * @param {number} startOffset start character relative to containing node\n * @param {*} endContainer \n * @param {number} endOffset - end character length relative to containing node\n */\n\nexport function createRange(root, startContainer, startOffset, endContainer, endOffset){\n  const range = root.ownerDocument.createRange();\n  range.setStart(startContainer, startOffset);\n  range.setEnd(endContainer, endOffset);\n  return range;\n}\n/**\n * @description takes a range object and computes the Word Count after filtering elements nodes not to be counted\n * @param {Range} rng - must take a Range object\n */\nexport function getRangeWordCount(rng){\n  var cnt = rng.cloneContents();\n  $(cnt).find(\".lbp-line-number, .paragraphnumber, br, .lbp-folionumber, .appnote, .footnote, .lbp-reg\").remove();\n  const selectionText = cleanText(cnt.textContent)\n  const length = selectionText.split(\" \").filter(n=>n).length\n  return length;\n}\n\n \n/**\n * @description gets the containing paragraph node for a node somewhere within the paragraph node\n * @param {node} node \n */\nexport function getContainingP(node) {\n  while (node) {\n    if (node.nodeType === 1 && node.tagName.toLowerCase() === \"p\") {\n        return node;\n    }\n    node = node.parentElement;\n  }\n}\n\n/**\n * @description retrieves plain text and counts line breaks based on input\n */\nexport function getLineNumber(url, selectedText, selectedElementTargetId){\n  //https://github.com/scta-texts/plaoulcommentary/edit/master/lectio1/lectio1.xml#L117\n  //https://raw.githubusercontent.com/scta-texts/plaoulcommentary/master/lectio1/lectio1.xml\n  //https://raw.githubusercontent.com/scta-texts/plaoulcommentarymaster/lectio1/lectio1.xml\n  const newRawUrl = url.replace(\"https://github.com\", \"https://raw.githubusercontent.com\").replace(\"/raw/\", '/')\n  const file = Axios.get(newRawUrl)\n  const data = file.then((d) => {\n    const findElement = \"xml:id=\\\"\" + selectedElementTargetId + \"\\\"\"\n    const splitText = d.data.split(findElement);\n    const beforeText = splitText[0]\n    const splitBeforeText = beforeText.split('\\n');\n    const newLineCount = splitBeforeText.length\n    \n    const afterText = splitText[1]\n    const regexp = new RegExp(`\\\\W${selectedText}\\\\W`, 'gi')\n    const elementBeforeText = afterText.split(regexp)[0] // this is flawed, first instance of the same text will be used\n    const splitElementBeforeText = elementBeforeText.split('\\n');\n    const newElementLineCount = splitElementBeforeText.length\n    return newLineCount + newElementLineCount - 1\n  })\n  return data\n}\n\nexport function goToGitHubEdit(url, selectedText, selectedElementTargetId){\n  console.log(url, selectedText, selectedElementTargetId)\n  const data = getLineNumber(url, selectedText, selectedElementTargetId)\n  //https://github.com/scta-texts/plaoulcommentary/raw/master/lectio1/lectio1.xml\n  data.then((d) => {\n    const editUrl = url.replace(\"raw\", \"edit\") + \"#L\" + d\n    window.open(editUrl,\"gitHubEditWindow\",'height=750,width=750');\n    //window.open(editUrl, \"_blank\"); \n\n  })\n  \n  //window.location = \n  \n}\n\nexport function textReduce(text, wordRange){\n  const wordTokenStart = wordRange.split(\"-\")[0]\n  const wordTokenEnd = wordRange.split(\"-\")[1]\n  const wordTokens = text.split(\" \")\n  // NOTE: I'm not sure what this .filter(Boolean) is doing??\n  const wordTokensClean = wordTokens.filter(Boolean)\n  //const wordTokensBefore = wordTokensClean.slice(0, wordTokenStart - 1);\n  //const wordTokensAfter = wordTokensClean.slice(wordTokenEnd)\n  const wordTokensFocus = wordTokensClean.slice(wordTokenStart - 1, wordTokenEnd)\n  const reducedText = wordTokensFocus.join(\" \")\n  return reducedText\n  // let textElement = \"\"\n  //     if (context){\n  //       textElement = \"<p class='text'><span>\" + wordTokensBefore.join(\" \") + \"</span> <span style='font-weight: bold'>\" + wordTokensFocus.join(\" \") + \"</span> <span>\" + wordTokensAfter.join(\" \") +\"</span></p>\"\n  //     }\n  //     else{\n  //       textElement = \"<p class='text'>\" + wordTokensFocus.join(\" \") + \"</p>\"\n  //     }\n  //   return textElement\n}","import React from 'react';\nimport BSpinner from 'react-bootstrap/Spinner';\n\nfunction Spinner() {\n  return (\n    <div className=\"spinner\" style={{\"padding\": \"20px 5px\"}}>\n      <BSpinner animation=\"grow\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </BSpinner>\n      <BSpinner animation=\"grow\" variant=\"primary\" />\n      <BSpinner animation=\"grow\" variant=\"secondary\" />\n      <BSpinner animation=\"grow\" variant=\"success\" />\n      <BSpinner animation=\"grow\" variant=\"danger\" />\n      <BSpinner animation=\"grow\" variant=\"warning\" />\n      <BSpinner animation=\"grow\" variant=\"info\" />\n    </div>\n  );\n}\n\nexport default Spinner;\n","const searchExpressionsListReducer = (state, action) => {\n  if (action){\n    switch (action.type){\n      case 'START_EXPRESSIONS_FETCH':\n          return {\n\n          }\n      case 'COMPLETE_EXPRESSIONS_FETCH':\n        return [...action.expressions]\n      default:\n        return state\n    }\n  }\n}\n\nexport {searchExpressionsListReducer as default}\n","import Axios from 'axios'\nimport {sparqlEndpoint} from '../components/config';\n\nexport var startExpressionsFetch = () => {\n  return{\n    type: \"START_EXPRESSIONS_FETCH\"\n  };\n};\nexport var completeExpressionsFetch = (expressions) => {\n  return{\n    type: \"COMPLETE_EXPRESSIONS_FETCH\",\n    expressions\n  };\n};\nexport var fetchExpressionsList = (searchParameters, dispatch) =>{\n    let workGroupSparql = \"\"\n    if (searchParameters.searchWorkGroup){\n      workGroupSparql = [\n      \"<\" + searchParameters.searchWorkGroup + \"> <http://scta.info/property/hasExpression> ?expression .\"\n      ].join(' ');\n    }\n    let expressionAuthorTypeSparql = \"\"\n    if (searchParameters.expressionAuthorType){\n      expressionAuthorTypeSparql = [\n      \"?expression <http://www.loc.gov/loc.terms/relators/AUT> ?expressionAuthor . \",\n      \"?expressionAuthor <http://scta.info/property/personType> <http://scta.info/resource/\" + searchParameters.expressionAuthorType + \"> .\"\n      ].join('');\n    }\n\n    let authorSparql = \"\"\n    if (searchParameters.searchAuthor){\n      authorSparql = [\n      \"?expression <http://www.loc.gov/loc.terms/relators/AUT> <\" + searchParameters.searchAuthor + \"> .\"\n      ].join('');\n    }\n    var query = [\n        \"SELECT ?type ?expression ?expressionShortId ?expressionTitle ?author ?authorTitle ?workGroup ?workGroupTitle\",\n        \"WHERE { \",\n          \"?expression a <http://scta.info/resource/expression> .\",\n          \"?expression a ?type .\",\n          \"?expression <http://scta.info/property/level> '1' . \",\n          expressionAuthorTypeSparql,\n          workGroupSparql,\n          authorSparql,\n          \"?expression <http://scta.info/property/shortId> ?expressionShortId .\",\n          \"?expression <http://scta.info/property/shortId> ?expressionShortId .\",\n          \"?expression <http://purl.org/dc/elements/1.1/title> ?expressionTitle .\",\n          \"?expression <http://www.loc.gov/loc.terms/relators/AUT> ?author . \",\n          \"?author <http://purl.org/dc/elements/1.1/title> ?authorTitle .\",\n          \"?expression <http://purl.org/dc/terms/isPartOf> ?workGroup .\",\n          \"?workGroup <http://purl.org/dc/elements/1.1/title> ?workGroupTitle .\",\n          \"}\",\n        \"ORDER BY ?expressionTitle\"].join('');\n\n  dispatch(startExpressionsFetch());\n  Axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n    var results = res.data.results.bindings;\n    var searchWorks = results.map((result) => {\n      var workInfo = {\n          expression: result.expression.value,\n          expressionShortId: result.expressionShortId ? result.expressionShortId.value : \"\",\n          expressionTitle: result.expressionTitle.value,\n          workGroup: result.workGroup ? result.workGroup.value : \"\",\n          workGroupTitle: result.workGroupTitle ? result.workGroupTitle.value : \"\",\n          author: result.author ? result.author.value : \"\",\n          authorTitle: result.author ? result.authorTitle.value : \"\",\n          type: result.type.value\n\n        }\n        return workInfo\n\n      });\n      dispatch(completeExpressionsFetch(searchWorks));\n    });\n\n};\n","const searchAuthorsListReducer = (state, action) => {\n  if (action){\n    switch (action.type){\n      case 'START_AUTHORS_FETCH':\n          return {\n\n          }\n      case 'COMPLETE_AUTHORS_FETCH':\n        return [...action.authors]\n      default:\n        return state\n    }\n  }\n}\n\nexport {searchAuthorsListReducer as default}\n","import Axios from 'axios'\nimport {sparqlEndpoint} from '../components/config';\n\nexport var startAuthorsFetch = () => {\n  return{\n    type: \"START_AUTHORS_FETCH\"\n  };\n};\nexport var completeAuthorsFetch = (authors) => {\n  return{\n    type: \"COMPLETE_AUTHORS_FETCH\",\n    authors\n  };\n};\nexport var fetchAuthorsList = (searchParameters, dispatch) =>{\n    let workGroupSparql = \"\";\n      if (searchParameters.searchWorkGroup){\n        workGroupSparql = \"<\" + searchParameters.searchWorkGroup + \"> <http://scta.info/property/hasExpression> ?resource .\"\n      }\n    const query = [\n        \"SELECT DISTINCT ?author ?authorTitle ?authorShortId \",\n        \"WHERE { \",\n        \"?author a <http://scta.info/resource/person> .\",\n        \"?resource a <http://scta.info/resource/expression> .\",\n        \"?resource <http://scta.info/property/level> '1' .\",\n        workGroupSparql,\n        \"?resource <http://www.loc.gov/loc.terms/relators/AUT> ?author .\",\n        \"?author <http://scta.info/property/shortId> ?authorShortId .\",\n        \"?author <http://purl.org/dc/elements/1.1/title> ?authorTitle .\",\n        \"}\",\n        \"ORDER BY ?authorTitle\"].join('');\n  dispatch(startAuthorsFetch());\n  Axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n    var results = res.data.results.bindings;\n    var authors = results.map((result) => {\n        var authorInfo = {\n          author: result.author.value,\n          authorShortId: result.authorShortId.value,\n          authorTitle: result.authorTitle.value,\n        }\n        return authorInfo\n\n      });\n      dispatch(completeAuthorsFetch(authors));\n    });\n  };\n","const searchWorkGroupsListReducer = (state, action) => {\n  if (action){\n    switch (action.type){\n      case 'START_WORK_GROUPS_LIST_FETCH':\n          return {\n\n          }\n      case 'COMPLETE_WORK_GROUPS_LIST_FETCH':\n        return [...action.workGroups]\n      default:\n        return state\n    }\n  }\n}\n\nexport {searchWorkGroupsListReducer as default}\n","import Axios from 'axios'\nimport {sparqlEndpoint} from '../components/config';\n\nexport var startWorkGroupsListFetch = () => {\n  return{\n    type: \"START_WORK_GROUPS_LIST_FETCH\"\n  };\n};\nexport var completeWorkGroupsListFetch = (workGroups) => {\n  return{\n    type: \"COMPLETE_WORK_GROUPS_LIST_FETCH\",\n    workGroups\n  };\n};\nexport var fetchWorkGroupsList = (searchParameters, dispatch) =>{\n  let authorQuery = \"\";\n    if (searchParameters.searchAuthor){\n      authorQuery = [\n      \"?workGroup <http://scta.info/property/hasExpression> ?expression .\",\n      \"?expression <http://www.loc.gov/loc.terms/relators/AUT> <\" + searchParameters.searchAuthor + \"> .\"\n      ].join('');\n    }\n  //   // Begin Author date sparql filters\n  //   let quotationAuthorDateSparql = \"\";\n  //   if (searchParameters.quotationAuthorDateAfter || searchParameters.quotationAuthorDateBefore){\n  //     quotationAuthorDateSparql = \"?author <http://scta.info/property/dateOfBirth> ?dateOfBirth .\"\n  //   }\n  //   let quotationAuthorDateAfterSparqlFilter = \"\";\n  //   if (searchParameters.quotationAuthorDateAfter){\n  //     quotationAuthorDateAfterSparqlFilter = \"FILTER (?dateOfBirth >= '\" + searchParameters.quotationAuthorDateAfter + \"').\"\n  //   }\n  //   let quotationAuthorDateBeforeSparqlFilter = \"\";\n  //   if (searchParameters.quotationAuthorDateBefore){\n  //     quotationAuthorDateBeforeSparqlFilter = \"FILTER (?dateOfBirth <= '\" + searchParameters.quotationAuthorDateBefore + \"').\"\n  //   }\n    // END author date sparql filter\n    var query = [\n        \"SELECT DISTINCT ?workGroup ?workGroupTitle \",\n        \"WHERE { \",\n        \"?workGroup a <http://scta.info/resource/workGroup> .\",\n        \"?workGroup <http://purl.org/dc/elements/1.1/title> ?workGroupTitle .\",\n        authorQuery,\n        \"}\",\n        \"ORDER BY ?workGroupTitle\"].join(' ');\n  dispatch(startWorkGroupsListFetch());\n  Axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n    var results = res.data.results.bindings;\n    var workGroups = results.map((result) => {\n        var workGroupInfo = {\n          workGroup: result.workGroup.value,\n          workGroupTitle: result.workGroupTitle.value,\n        }\n        return workGroupInfo\n\n      });\n      dispatch(completeWorkGroupsListFetch(workGroups));\n    });\n  };\n","const searchExpressionTypesListReducer = (state, action) => {\n  if (action){\n    switch (action.type){\n      case 'START_EXPRESSION_TYPES_LIST_FETCH':\n          return {\n\n          }\n      case 'COMPLETE_EXPRESSION_TYPES_LIST_FETCH':\n        return [...action.expressionTypes]\n      default:\n        return state\n    }\n  }\n}\n\nexport {searchExpressionTypesListReducer as default}\n","import React, {useState, useEffect, useReducer} from 'react';\nimport searchExpressionsListReducer from '../reducers/searchExpressionsListReducer'\nimport * as searchExpressionsListActions from '../actions/searchExpressionsListActions'\nimport searchAuthorsListReducer from '../reducers/searchAuthorsListReducer'\nimport * as searchAuthorsListActions from '../actions/searchAuthorsListActions'\nimport searchWorkGroupsListReducer from '../reducers/searchWorkGroupsListReducer'\nimport * as searchWorkGroupsListActions from '../actions/searchWorkGroupsListActions'\nimport searchExpressionTypesListReducer from '../reducers/searchExpressionTypesListReducer'\nimport * as searchExpressionTypesListActions from '../actions/searchExpressionTypesListActions'\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\n\nconst Search3Parameters = (props) => {\n  const [searchType, setSearchType] = useState(props.searchType ? props.searchType : \"text\")\n  const [searchTerm, setSearchTerm] = useState(props.searchTerm)\n  const [searchAuthor, setSearchAuthor] = useState(props.searchAuthor)\n  const [searchEid, setSearchEid] = useState(props.searchEid)\n  const [searchEType, setSearchEType] = useState(props.searchEType)\n  const [searchWorkGroup, setSearchWorkGroup] = useState(props.searchWorkGroup)\n\n  const [resultsFilter, setResultsFilter] = useState(\"\")\n\n  const [searchExpressionTypesList, searchExpressionTypesListDispatch] = useReducer(searchExpressionTypesListReducer, [])\n  const [searchExpressionsList, searchExpressionsListDispatch] = useReducer(searchExpressionsListReducer, [])\n  const [searchAuthorsList, searchAuthorsListDispatch] = useReducer(searchAuthorsListReducer, [])\n  const [searchWorkGroupsList, searchWorkGroupsListDispatch] = useReducer(searchWorkGroupsListReducer, [])\n  const searchParameters = {searchTerm, searchAuthor, searchEid, searchWorkGroup, searchType, searchEType, resultsFilter}\n\n  const [displayAllParameters, setDisplayAllParameters] = useState(false)\n\n  const handleSetSearchParameters = () => {\n    props.handleSetSearchParameters(searchParameters)\n  }\n  const handleSetResultsFilter = (content) => {\n    setResultsFilter(content)\n  }\n\n  //begin effects to update hooks when props change\n  // perhaps this could be combined into a single custom hood\n  useEffect(() => {\n    setSearchType(props.searchType ? props.searchType : \"text\")\n  }, [props.searchType])\n  useEffect(() => {\n    setSearchAuthor(props.searchAuthor)\n  }, [props.searchAuthor])\n  useEffect(() => {\n    setSearchEid(props.searchEid)\n  }, [props.searchEid])\n  useEffect(() => {\n    setSearchWorkGroup(props.searchWorkGroup)\n  }, [props.searchWorkGroup])\n  useEffect(() => {\n    setSearchTerm(props.searchTerm)\n  }, [props.searchTerm])\n  //end effects to update hooks when props change\n  //begin other effects\n  useEffect(handleSetSearchParameters, [searchTerm, searchAuthor, searchEid, searchWorkGroup, searchType, searchEType, resultsFilter])\n  useEffect(() => {\n    searchExpressionsListDispatch(searchExpressionsListActions.fetchExpressionsList(searchParameters, searchExpressionsListDispatch))\n    searchAuthorsListDispatch(searchAuthorsListActions.fetchAuthorsList(searchParameters, searchAuthorsListDispatch))\n    searchWorkGroupsListDispatch(searchWorkGroupsListActions.fetchWorkGroupsList(searchParameters, searchWorkGroupsListDispatch))\n    searchExpressionTypesListDispatch(searchExpressionTypesListActions.fetchExpressionTypesList(searchParameters, searchExpressionTypesListDispatch))\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n  useEffect(() => {\n    searchExpressionsListDispatch(searchExpressionsListActions.fetchExpressionsList(searchParameters, searchExpressionsListDispatch))\n    searchWorkGroupsListDispatch(searchWorkGroupsListActions.fetchWorkGroupsList(searchParameters, searchWorkGroupsListDispatch))\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchAuthor])\n  useEffect(() => {\n    searchExpressionsListDispatch(searchExpressionsListActions.fetchExpressionsList(searchParameters, searchExpressionsListDispatch))\n    searchAuthorsListDispatch(searchAuthorsListActions.fetchAuthorsList(searchParameters, searchAuthorsListDispatch))\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchWorkGroup])\n\n\n  return(\n    <div>\n      <InputGroup size=\"sm\" className=\"mb-2\">\n        <InputGroup.Prepend>\n            <InputGroup.Text>Search Term</InputGroup.Text>\n        </InputGroup.Prepend>\n        <Form.Control as=\"input\" type=\"text\" placeholder=\"search term\" onChange={(e) => setSearchTerm(e.target.value)} value={searchParameters.searchTerm}/>\n      </InputGroup>\n      {/* {NOTE filter results parameter is useful only when results are of manageable size;\n        when results are big, javascript locks up while filtering\n        if paging is used, then this could prevent performance slow down \n        but paging makes the tool less than useful, because it will only filter what is on the page\n        TODO: reconsider if you want to keep this; or this is not worth the trouble\n        NOTE: if this parameters is removed, then filterResults() and filterQuestionResults() functions \n        in Search3 should be removed\n        } */}\n      <InputGroup size=\"sm\" className=\"mb-2\">\n          <InputGroup.Prepend>\n            <InputGroup.Text>Filter Results</InputGroup.Text>\n          </InputGroup.Prepend>\n        <Form.Control as=\"input\" type=\"secondary results filter\" placeholder=\"secondary results filter\" onChange={(e) => handleSetResultsFilter(e.target.value)} value={resultsFilter}/>\n      </InputGroup>\n      {displayAllParameters &&\n        <div>\n          <InputGroup size=\"sm\" className=\"mb-2\">\n            <InputGroup.Prepend>\n              <InputGroup.Text>Search Type</InputGroup.Text>\n            </InputGroup.Prepend>\n            <Form.Control as=\"select\" onChange={(e) => {setSearchType(e.target.value)}} value={searchParameters.searchType}>\n              <option value=\"questionTitles\">Questions Titles</option>\n              <option value=\"text\">Text</option>\n            </Form.Control>\n          </InputGroup>\n          <InputGroup size=\"sm\" className=\"mb-2\">\n            <InputGroup.Prepend>\n              <InputGroup.Text>Work Group</InputGroup.Text>\n            </InputGroup.Prepend>\n            <Form.Control as=\"select\" onChange={(e) => {setSearchWorkGroup(e.target.value)}} value={searchParameters.searchWorkGroup}>\n                <option value=\"\">All</option>\n                {searchWorkGroupsList && searchWorkGroupsList.map((e, i) => {\n                    return (<option key={e.workGroup + \"-\" + i} value={e.workGroup}>{e.workGroupTitle}</option>)\n                  })\n                }\n              </Form.Control>\n          </InputGroup>\n          <InputGroup size=\"sm\" className=\"mb-2\">\n            <InputGroup.Prepend>\n              <InputGroup.Text>Expression Type</InputGroup.Text>\n            </InputGroup.Prepend>\n            <Form.Control as=\"select\" onChange={(e) => {setSearchEType(e.target.value)}} value={searchParameters.searchEType}>\n                <option value=\"\">All</option>\n                {searchExpressionTypesList && searchExpressionTypesList.map((e, i) => {\n                    return (<option key={e.expressionType + \"-\" + i} value={e.expressionType}>{e.expressionTypeTitle}</option>)\n                  })\n                }\n            </Form.Control>\n          </InputGroup>\n          <InputGroup size=\"sm\" className=\"mb-2\">\n            <InputGroup.Prepend>\n              <InputGroup.Text>Author</InputGroup.Text>\n            </InputGroup.Prepend>\n            <Form.Control as=\"select\" onChange={(e) => {setSearchAuthor(e.target.value)}} value={searchParameters.searchAuthor}>\n              <option value=\"\">All</option>\n              {searchAuthorsList && searchAuthorsList.map((e, i) => {\n                  return (<option key={e.author + \"-\" + i} value={e.author}>{e.authorTitle}</option>)\n                })\n              }\n            </Form.Control>\n          </InputGroup>\n          <InputGroup size=\"sm\" className=\"mb-2\">\n            <InputGroup.Prepend>\n              <InputGroup.Text>Text</InputGroup.Text>\n            </InputGroup.Prepend>\n            <Form.Control as=\"select\" onChange={(e) => {setSearchEid(e.target.value)}} value={searchParameters.searchEid}>\n              <option value=\"\">All</option>\n              {searchExpressionsList && searchExpressionsList.map((e, i) => {\n                  return (<option key={e.expression + \"-\" + i} value={e.expression}>{e.authorTitle}: {e.expressionTitle}</option>)\n                })\n              }\n            </Form.Control>\n          </InputGroup>\n        </div>\n      }\n      <InputGroup.Prepend size=\"sm\" className=\"mb-2\">\n        {props.children}\n        {props.showAdvancedParameters && <Button className=\"btn-sm\" onClick={() => {setDisplayAllParameters(!displayAllParameters)}}>{displayAllParameters ? \"Hide\" : \"Show\"} More Filter Options</Button>}        \n      </InputGroup.Prepend>\n      \n      \n    </div>\n  )\n}\n\nexport {Search3Parameters as default}\n","import Axios from 'axios'\nimport {sparqlEndpoint} from '../components/config';\n\nexport var startExpressionTypesListFetch = () => {\n  return{\n    type: \"START_EXPRESSION_TYPES_LIST_FETCH\"\n  };\n};\nexport var completeExpressionTypesListFetch = (expressionTypes) => {\n  return{\n    type: \"COMPLETE_EXPRESSION_TYPES_LIST_FETCH\",\n    expressionTypes\n  };\n};\nexport var fetchExpressionTypesList = (searchParameters, dispatch) =>{\n  //TODO: delete this or uncomment if authorQuery should be included in expressionTypeList Fetch\n  // let authorQuery = \"\";\n  //   if (searchParameters.searchAuthor){\n  //     authorQuery = [\n  //     \"?workGroup <http://scta.info/property/hasExpression> ?expression .\",\n  //     \"?expression <http://www.loc.gov/loc.terms/relators/AUT> <\" + searchParameters.searchAuthor + \"> .\"\n  //     ].join('');\n  //   }\n\n    var query = [\n        \"SELECT DISTINCT ?expressionType ?expressionTypeTitle \",\n        \"WHERE { \",\n        \"?expressionType a <http://scta.info/resource/expressionType> .\",\n        \"?expressionType <http://purl.org/dc/elements/1.1/title> ?expressionTypeTitle .\",\n        \"}\",\n        \"ORDER BY ?expressionTypeTitle\"].join(' ');\n  dispatch(startExpressionTypesListFetch());\n  Axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n    const results = res.data.results.bindings;\n    const expressionTypes = results.map((result) => {\n        return {\n          expressionType: result.expressionType.value,\n          expressionTypeTitle: result.expressionTypeTitle.value,\n        }\n      });\n      dispatch(completeExpressionTypesListFetch(expressionTypes));\n    });\n  };\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport Axios from 'axios'\n\n//TODO: these retrieves need to be refactored into; \n// if exist db api is improved then a single request should be easier\nexport function retrieveExpressionResults(searchTerm, searchEid){\n  const expressionShortId = searchEid === \"all\" ? searchEid : searchEid.split(\"/resource/\")[1]\n  const url = \"https://exist.scta.info/exist/apps/scta-app/jsonsearch/json-search-text-by-expressionid.xq?query=\" + searchTerm + \"&expressionid=\" + expressionShortId\n  const queryPromise = Axios.get(url)\n  return queryPromise\n}\nexport function retrieveAuthorResults(searchTerm, searchAuthor){\n  const authorShortId = searchAuthor.split(\"/resource/\")[1]\n  const url = \"https://exist.scta.info/exist/apps/scta-app/jsonsearch/json-search-text-by-authorid.xq?query=\" + searchTerm + \"&authorid=\" + authorShortId\n  const queryPromise = Axios.get(url)\n  return queryPromise\n\n}\nexport function retrieveWorkGroupResults(searchTerm, searchWorkGroup){\n  const workGroupShortId = searchWorkGroup.split(\"/resource/\")[1]\n  const url = \"https://exist.scta.info/exist/apps/scta-app/jsonsearch/json-search-text-by-workGroupId.xq?query=\" + searchTerm + \"&workGroupId=\" + workGroupShortId\n  const queryPromise = Axios.get(url)\n  return queryPromise\n\n}\n\nexport function displayTextResults(results){\n  if (!results || results.length === 0){\n    return (<div>\n      <p>No results found</p>\n    </div>)\n  }\n  else if (results.length > 0){\n    const textResults = results.map((r, i) => {\n      const textString = r.previous + \" <span class='highlight'>\" + r.hit + \"</span> \" + r.next\n      const range = r.start + \"-\" + r.end\n      return (\n        <div key={i}>\n        <p><Link to={\"/text?resourceid=http://scta.info/resource/\" + r.pid + \"@\" + range}>{r.pid + \"@\" + range}</Link></p>\n        <p dangerouslySetInnerHTML={{ __html: textString}}/>\n        </div>\n      )\n\n    })\n    return (\n      <div>\n          <p>{results.length + \" results\"}</p>\n          {textResults}\n      </div>\n    )\n  }\n  else if (results){\n    const r = results\n    const textString = r.previous + \" <span class='highlight'>\" + r.hit + \"</span> \" + r.next\n    const range = r.start + \"-\" + r.end\n    return (\n      <div>\n        <p>{1 + \" results\"}</p>\n      <div key={results.pid}>\n      <p><Link to={\"/text?resourceid=http://scta.info/resource/\" + r.pid + \"@\" + range}>{r.pid + \"@\" + range}</Link></p>\n      <p dangerouslySetInnerHTML={{ __html: textString}}/>\n      </div>\n      </div>\n    )\n  }\n  else{\n    return (\n      <div><p>No results</p></div>\n    )\n  }\n}\n\nexport function displayQuestionResults(results, searchParameters){\n  if (results.length > 0){\n    const displayResults = results.map((r, i) => {\n      return (\n      <div key={r.resource.value + \"-\" + i}>\n        <p><Link to={\"/text?resourceid=\" + r.author.value}>{r.authorTitle.value}</Link>: <Link to={\"/text?resourceid=\" + r.resource.value}>{r.longTitle.value}</Link></p>\n        <p>{r.qtitle.value.toLowerCase().replace(searchParameters.searchTerm.toLowerCase(), searchParameters.searchTerm.toUpperCase())}</p>\n      </div>\n      )\n    })\n    return (\n      <div>\n        <p>{displayResults.length + \" results\"}</p>\n        {displayResults}\n      </div>\n    )\n  }\n  else{\n    return (\n      <div>\n        <p>No results</p>\n      </div>\n    )\n\n  }\n}\n","import React, {useEffect, useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport {runQuery} from './utils'\nimport {questionTitleQuery} from '../queries/questionTitleQuery'\nimport Spinner from './Spinner';\nimport Container from 'react-bootstrap/Container';\nimport Search3Parameters from './Search3Parameters';\nimport {retrieveAuthorResults, retrieveExpressionResults, retrieveWorkGroupResults, displayTextResults, displayQuestionResults} from './searchUtils'\n\nconst Search3 = (props) => {\n  const [searchParameters, setSearchParameters] = useState({})\n  const [results, setResults] = useState([])\n  const [questionResults, setQuestionResults] = useState([])\n  \n  useEffect(() => {\n    if (searchParameters.searchType === \"questionTitles\"){\n      displayQuestionResults(filterQuestionResults(questionResults, searchParameters.resultsFilter), searchParameters)\n    }\n    else if (searchParameters.searchType === \"text\"){\n      displayTextResults(filterResults(results, searchParameters.resultsFilter))\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchParameters.resultsFilter])\n  \n  \n  const handleSetSearchParameters = (parameters) => {\n    setSearchParameters(parameters)\n  }\n\n  const handleRunSearch = (e) => {\n    e.preventDefault()\n    if (!searchParameters.searchTerm){\n      setResults([])\n    }\n    else{\n      if (searchParameters.searchType === \"text\"){\n        setResults(\"fetching\")\n        setQuestionResults([])\n        if (searchParameters.searchEid){\n          const textResults = retrieveExpressionResults(searchParameters.searchTerm, searchParameters.searchEid)\n          textResults.then((d) => {\n            setResults(d.data.results)\n          })\n        }\n        else if (searchParameters.searchAuthor){\n          const textResults = retrieveAuthorResults(searchParameters.searchTerm, searchParameters.searchAuthor)\n          textResults.then((d) => {\n            setResults(d.data.results)\n          })\n        }\n        else if (searchParameters.searchWorkGroup){\n          const textResults = retrieveWorkGroupResults(searchParameters.searchTerm, searchParameters.searchWorkGroup)\n          textResults.then((d) => {\n            setResults(d.data.results)\n          })\n        }\n        else{\n          const textResults = retrieveExpressionResults(searchParameters.searchTerm, \"all\")\n          textResults.then((d) => {\n            setResults(d.data.results)\n          })\n        }\n\n\n      }\n      else{\n        const questionResults = runQuery(questionTitleQuery(searchParameters))\n        setQuestionResults(\"fetching\")\n        setResults([])\n        questionResults.then((d) => {\n          setQuestionResults(d.data.results.bindings)\n        })\n      }\n    }\n  }\n  const displayResults = (results) => {\n    if (results === \"fetching\" || questionResults === \"fetching\"){ \n      return <Spinner/>\n    }\n    else if (searchParameters.searchType === \"questionTitles\"){\n      return displayQuestionResults(filterQuestionResults(questionResults, searchParameters.resultsFilter), searchParameters)\n    }\n    else if (searchParameters.searchType === \"text\"){\n      \n      return displayTextResults(filterResults(results, searchParameters.resultsFilter))\n    }\n  }\n  const filterResults = (results, resultsFilter) => {\n    let newResults = [] \n    if (!results || results.length === 0){\n      newResults = [] \n    }\n    else if (results.length > 1){\n      results.forEach((r) => {\n        const combinedString = [r.previous.toLowerCase(), r.hit.toLowerCase(), r.next.toLowerCase()].join(\" \")\n        if (combinedString.includes(resultsFilter.toLowerCase())){\n          newResults.push(r)\n        }\n      })\n    }\n    else if (results){\n      const r = results;\n      const combinedString = [r.previous.toLowerCase(), r.hit.toLowerCase(), r.next.toLowerCase()].join(\" \")\n      newResults = combinedString.includes(resultsFilter.toLowerCase()) ? results : \"\";\n    }\n    return newResults\n  }\n  // similar filter to above; but modified to handle question title data structure\n  const filterQuestionResults = (results, resultsFilter) => {\n    let newResults = [] \n    if (!results || results.length === 0){\n      newResults = [] \n    }\n    else if (results.length > 0){\n      results.forEach((r) => {\n        if (r.qtitle && r.qtitle.value.toLowerCase().includes(resultsFilter.toLowerCase())){\n          newResults.push(r)\n        }\n      })\n    }\n    return newResults\n  }\n\n  return(\n    <Container className={props.hidden ? \"hidden\" : \"showing\"}>\n      <Form onSubmit={handleRunSearch}>\n        <Search3Parameters\n          handleSetSearchParameters={handleSetSearchParameters}\n          searchAuthor={props.searchAuthor}\n          searchEid={props.searchEid}\n          searchEType={props.searchEType}\n          searchWorkGroup={props.searchWorkGroup}\n          showAdvancedParameters={props.showAdvancedParameters}\n          showLabels={props.showLabels}\n          searchType={props.searchType}\n          searchTerm={props.searchTerm}\n          >\n            {props.showSubmit && <Button onClick={handleRunSearch} className=\"btn-sm\" style={{marginRight: \"5px\"}}>Submit</Button>}\n            </Search3Parameters>\n          \n      \n    </Form>\n    {displayResults(results)}\n    </Container>\n\n  )\n}\n\nSearch3.defaultProps = {\n  showLabels: true,\n  showAdvancedParameters: true,\n  searchAuthor: \"\",\n  searchEid: \"\",\n  showSubmit: true\n};\n\nexport {Search3 as default}\n","export function questionTitleQuery(searchParameters){\n  const searchTerm = searchParameters.searchTerm\n  let workGroupQuery = \"\";\n    if (searchParameters.searchWorkGroup){\n      workGroupQuery = [\n        \"BIND(<\" + searchParameters.searchWorkGroup + \"> AS ?workGroup) .\",\n        \"?workGroup <http://scta.info/property/hasExpression> ?topLevel .\"\n      ].join(' ')\n    }\n  let expressionTypeQuery = \"\";\n    if (searchParameters.searchEType){\n      expressionTypeQuery = [\n        \"BIND(<\" + searchParameters.searchEType + \"> AS ?expressionType) .\",\n        \"{\",\n          \"?resource <http://scta.info/property/expressionType> ?expressionType .\",\n        \"}\",\n        \"UNION\",\n        \"{\",\n          \"?resource <http://scta.info/property/isMemberOf> ?ancestor .\",\n          \"?ancestor <http://scta.info/property/expressionType> ?expressionType .\",\n        \"}\"].join(' ')\n    }\n  let authorQuery = \"\";\n    if (searchParameters.searchAuthor){\n      authorQuery = \"BIND(<\" + searchParameters.searchAuthor + \"> AS ?author).\"\n    }\n  let eidQuery = \"\";\n    if (searchParameters.searchEid){\n      eidQuery = \"BIND(<\" + searchParameters.searchEid + \"> AS ?topLevel).\"\n    }\n   const query = [\n     \"SELECT ?resource ?qtitle ?resourceTitle ?structureType ?longTitle ?author ?authorTitle\",\n     \"WHERE\",\n     \"{\",\n\n       \"?resource <http://scta.info/property/questionTitle> ?qtitle  .\",\n       \"?resource <http://purl.org/dc/elements/1.1/title> ?resourceTitle .\",\n       \"?resource <http://scta.info/property/structureType> ?structureType .\",\n       \"?resource <http://scta.info/property/longTitle> ?longTitle .\",\n       expressionTypeQuery,\n       eidQuery,\n       \"?resource <http://scta.info/property/isPartOfTopLevelExpression> ?topLevel .\",\n       authorQuery,\n       \"?topLevel <http://www.loc.gov/loc.terms/relators/AUT> ?author .\",\n       \"?author <http://purl.org/dc/elements/1.1/title> ?authorTitle .\",\n       workGroupQuery,\n       \"FILTER (REGEX(STR(?qtitle), '\" + searchTerm + \"', 'i')) .\",\n     \"}\"\n   ].join(' ');\n   return query\n }\n","//Vendor Imports\nimport React from 'react';\nimport Axios from 'axios'\nimport PropTypes from 'prop-types';\n\nclass Print extends React.Component {\n  constructor(props){\n    super(props)\n    this.getPdf = this.getPdf.bind(this)\n    this.state = {\n      status: \"\",\n      pdf: \"\",\n    }\n  }\n  getPdf(url){\n    Axios.get(\"https://print.lombardpress.org/api/v1/resource?url=\" + url)\n      .then((data) => {\n        console.log(data)\n        if (data.data.url){\n          console.log(\"first condition passed\", data.data.url)\n          const hashWithExtension = data.data.url\n          //window.location = \"http://print.lombardpress.org/api/v1/cache/\" + hashWithExtension\n          this.setState({pdf: \"https://print.lombardpress.org/api/v1/cache/\" + hashWithExtension})\n        }\n        else{\n          this.setState({status: data.data.Status + \"Please check back in a few minutes\", pdf: \"\"})\n        }\n      })\n\n  }\n  componentDidMount(){\n    const url = this.props.url\n    this.getPdf(url)\n  }\n  \n  componentDidUpdate(prevProps){\n    const newUrl = this.props.url\n    const oldUrl = prevProps.url\n    if (newUrl !== oldUrl){\n      this.getPdf(newUrl)\n    }\n  }\n  render(){\n\n    return (\n      <div style={{\"width\": \"100%\", \"height\": \"77vh\", \"margin\": \"auto\"}}>\n      {this.state.pdf ?\n        <object data={this.state.pdf} type=\"application/pdf\" width=\"100%\" height=\"100%\">\n            alt : <a href={this.state.pdf}>{this.state.pdf}</a>\n        </object>\n        :\n        <p>{this.state.status}</p>\n        }\n    </div>\n    );\n  }\n}\n\nPrint.propTypes = {\n  /**\n  * url to raw xml source file\n  */\n url: PropTypes.string.isRequired,\n}\n\nexport default Print;\n","//note; each query here represents an attempt an efficient single request for related information\n//each query therefore could be tranformed into a restful api\n\n//NOTE: this query does not work as expected when using Fuseking version 3 it only works as expected using version 2.0\n// with version 3, it seems to get all quotes from the entire corpus, suggested something may not be working with the \"bind\" method\n export function getRelatedExpressions(itemExpressionUri, offset, pagesize, rangeStart, rangeEnd){\n\n   let rangeFilter;\n   if (rangeStart && rangeEnd){\n    rangeFilter = [\"FILTER (?isRelatedToRangeEnd <=\" + rangeEnd + \")\",\n                  \"FILTER (?isRelatedToRangeStart >=\" + rangeStart + \")\"].join(\" \")\n   }\n   let activeSource; \n   if (!rangeStart && !rangeEnd){\n    activeSource = [ \n      \"{\",\n        \"?element <http://scta.info/property/source> ?isRelatedTo .\",\n        \"FILTER (!isBlank(?isRelatedTo)) .\",\n      \"}\",\n      \"UNION\",\n      \"{\",\n      \"?element <http://scta.info/property/source> ?bn .\",\n      \"?bn <http://scta.info/property/source> ?isRelatedTo .\",\n      \"?bn <http://scta.info/property/canonicalRangeStart> ?isRelatedToRangeStart .\",\n      \"?bn <http://scta.info/property/canonicalRangeEnd> ?isRelatedToRangeEnd .\",\n      \"}\"].join(\" \")\n    }\n    else{\n      activeSource = [\"?element <http://scta.info/property/source> ?bn .\",\n      \"?bn <http://scta.info/property/source> ?isRelatedTo .\",\n      \"?bn <http://scta.info/property/canonicalRangeStart> ?isRelatedToRangeStart .\",\n      \"?bn <http://scta.info/property/canonicalRangeEnd> ?isRelatedToRangeEnd .\",\n      rangeFilter].join(\" \")\n    }\n   \n    let inverseSource;\n   if (!rangeStart && !rangeEnd){\n    inverseSource = [\"{\",\n            \"?isRelatedTo <http://scta.info/property/source> ?element .\",\n          \"}\",\n            \"UNION\",\n          \"{\",\n            \"?isRelatedTo <http://scta.info/property/source> ?bn .\",\n            \"?bn <http://scta.info/property/source> ?element .\",\n            \"?bn <http://scta.info/property/canonicalRangeStart> ?isRelatedToRangeStart .\",\n            \"?bn <http://scta.info/property/canonicalRangeEnd> ?isRelatedToRangeEnd .\",\n          \"}\"].join(\" \")\n   }\n   else{\n    inverseSource = [\"?isRelatedTo <http://scta.info/property/source> ?bn .\",\n    \"?bn <http://scta.info/property/source> ?element .\",\n    \"?bn <http://scta.info/property/canonicalRangeStart> ?isRelatedToRangeStart .\",\n    \"?bn <http://scta.info/property/canonicalRangeEnd> ?isRelatedToRangeEnd .\",\n    rangeFilter].join(\" \")\n   }\n   \n   const query = [\n    \"SELECT DISTINCT ?isRelatedTo ?label ?element ?longTitle ?author ?authorTitle ?isRelatedToRangeStart ?isRelatedToRangeEnd \",\n    \"WHERE\",\n    \"{ \",\n    \"BIND (<\" + itemExpressionUri + \"> as ?resource)\",\n      \"{\",\n        \"?resource ?o ?isRelatedTo .\",\n        \"?o a <http://scta.info/resource/textRelation> .\",\n        \"FILTER (?o != <http://scta.info/property/quotes>)\",\n        \"FILTER (?o != <http://scta.info/property/quotedBy>)\", \n        \"FILTER (?o != <http://scta.info/property/references>)\", \n        \"FILTER (?o != <http://scta.info/property/referencedBy>)\", \n        \"?o <http://www.w3.org/1999/02/22-rdf-syntax-ns#label> ?label . \",\n        \"?isRelatedTo a <http://scta.info/resource/expression> .\",\n      \"}\",\n      \"UNION\",\n      \"{\",\n        \"{\",\n          \"?resource <http://scta.info/property/structureType> <http://scta.info/resource/structureElement> .\",\n          \"BIND (?resource as ?element)\",\n        \"}\",\n        \"UNION\",\n        \"{\",\n          \"?element <http://scta.info/property/isMemberOf> ?resource .\",\n        \"}\",\n        \"{\",\n            activeSource,\n            \"?element <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementQuote> .\",\n            \"BIND ('quotes' as ?label) .\",\n          \"}\",\n        \"UNION\",\n        \"{\",\n          activeSource,\n          \"?element <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementRef> .\",\n          \"BIND ('refs' as ?label) .\",\n        \"}\",\n      \"}\",\n      \"UNION\", \n      \"{\",\n        \"{\",\n          \"BIND (?resource as ?element)\",\n        \"}\",\n        \"UNION\",\n        \"{\",\n          \"?element <http://scta.info/property/isMemberOf> ?resource .\",\n        \"}\",\n        \"{\",\n          inverseSource,\n          \"?isRelatedTo <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementQuote> .\",\n          \"BIND ('isQuotedBy' as ?label) .\",\n        \"}\",\n        \"UNION\",\n        \"{\",\n          inverseSource,\n          //\"?isRelatedTo <http://scta.info/property/source> ?element.\",\n          \"?isRelatedTo <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementRef> .\",\n          \"BIND ('isReferencedBy' as ?label) .\",\n        \"}\",\n      \"}\",\n      \"?isRelatedTo <http://scta.info/property/longTitle> ?longTitle .\",\n      \"?isRelatedTo <http://scta.info/property/isMemberOf> ?mem .\",\n      \"?mem <http://scta.info/property/level> '1' .\",\n      \"OPTIONAL\",\n      \"{\",\n        \"?mem <http://www.loc.gov/loc.terms/relators/AUT> ?author .\",\n        \"?author <http://purl.org/dc/elements/1.1/title> ?authorTitle\",\n      \"}\",\n    \"}\",\n    \"ORDER BY ?authorTitle\",\n    \"LIMIT \" + pagesize,\n    \"OFFSET \" + offset\n   ].join(' ');\n     return query\n }\n//get Related Expressions\n// export function getRelatedExpressions(itemExpressionUri){\n//   const query = [\n//     \"SELECT DISTINCT ?isRelatedTo \",\n//     \"WHERE { \",\n//     \"{\",\n//     \"<\" + itemExpressionUri + \"> <http://scta.info/property/isRelatedTo> ?isRelatedTo .\",\n//     \"}\",\n//     \"UNION\",\n//     \"{\",\n//     \"<\" + itemExpressionUri + \"> <http://scta.info/property/quotes> ?quote .\",\n//     \"?quote a <http://scta.info/resource/quotation> .\",\n//     \"?quote <http://scta.info/property/source> ?isRelatedTo .\",\n//     \"}\",\n//     \"UNION\",\n//     \"{\",\n//     \"<\" + itemExpressionUri + \"> <http://scta.info/property/quotes> ?quote .\",\n//     \"?quote a <http://scta.info/resource/expression> .\",\n//     \"<\" + itemExpressionUri + \"> <http://scta.info/property/quotes> ?isRelatedTo .\",\n//     \"}\",\n//     \"UNION\",\n//     \"{\",\n//     \"<\" + itemExpressionUri + \"> <http://scta.info/property/quotedBy> ?isRelatedTo .\",\n//     \"}\",\n//     \"UNION\",\n//     \"{\",\n//     \"<\" + itemExpressionUri + \"> <http://scta.info/property/abbreviates> ?isRelatedTo .\",\n//     \"}\",\n//     \"UNION\",\n//     \"{\",\n//     \"<\" + itemExpressionUri + \"> <http://scta.info/property/abbreviatedBy> ?isRelatedTo .\",\n//     \"}\",\n//     \"UNION\",\n//     \"{\",\n//     \"<\" + itemExpressionUri + \"> <http://scta.info/property/references> ?isRelatedTo .\",\n//     \"}\",\n//     \"UNION\",\n//     \"{\",\n//     \"<\" + itemExpressionUri + \"> <http://scta.info/property/referencedBy> ?isRelatedTo .\",\n//     \"}\",\n//     \"UNION\",\n//     \"{\",\n//     \"<\" + itemExpressionUri + \"> <http://scta.info/property/copies> ?isRelatedTo .\",\n//     \"}\",\n//     \"UNION\",\n//     \"{\",\n//     \"<\" + itemExpressionUri + \"> <http://scta.info/property/isCopiedBy> ?isRelatedTo .\",\n//     \"}\",\n//     \"}\"\n//   ].join('');\n//\n//     return query\n// }\n\n// query info block, division, or item (possible also collection)\nexport function basicInfoQuery(itemExpressionUri){\n  const query = [\n    \"SELECT DISTINCT ?title ?structureType ?cmanifestation ?cmanifestationTitle ?manifestation ?manifestationTitle ?ctranscription ?manifestationCTranscription ?cdoc ?cxml ?expressionShortId ?longTitle ?topLevelExpression ?next ?previous ?inbox ?author ?authorTitle ?parent \",\n    \"WHERE { \",\n    \"<\" + itemExpressionUri + \"> <http://purl.org/dc/elements/1.1/title> ?title .\",\n    \"<\" + itemExpressionUri + \"> <http://scta.info/property/structureType> ?structureType .\",\n    \"<\" + itemExpressionUri + \"> <http://scta.info/property/hasCanonicalManifestation> ?cmanifestation .\",\n    \"?cmanifestation <http://purl.org/dc/elements/1.1/title> ?cmanifestationTitle .\",\n    \"<\" + itemExpressionUri + \"> <http://scta.info/property/hasManifestation> ?manifestation .\",\n    \"?manifestation <http://purl.org/dc/elements/1.1/title> ?manifestationTitle .\",\n    \"OPTIONAL {\",\n    \"?manifestation <http://scta.info/property/hasCanonicalTranscription> ?manifestationCTranscription .\",\n    \"?cmanifestation <http://scta.info/property/hasCanonicalTranscription> ?ctranscription .\",\n    \"?ctranscription <http://scta.info/property/hasDocument> ?cdoc . \",\n    \"?ctranscription <http://scta.info/property/hasXML> ?cxml . \",\n    \"}\",\n    \"<\" + itemExpressionUri + \"> <http://scta.info/property/shortId> ?expressionShortId .\",\n    \"{\",\n      \"<\" + itemExpressionUri + \"> <http://scta.info/property/isPartOfTopLevelExpression> ?topLevelExpression .\",\n    \"}\",\n    \"UNION\",\n    \"{\",\n      \"<\" + itemExpressionUri + \"> <http://scta.info/property/level> '1' .\",\n      \"BIND(<\" + itemExpressionUri + \"> AS ?topLevelExpression) .\", \n    \"}\",\n    \"OPTIONAL {\",\n    \"<\" + itemExpressionUri + \"> <http://scta.info/property/longTitle> ?longTitle .\",\n    \"}\",\n    \"OPTIONAL {\",\n    \"?topLevelExpression <http://www.loc.gov/loc.terms/relators/AUT> ?author .\",\n    \"?author <http://purl.org/dc/elements/1.1/title> ?authorTitle .\",\n    \"}\",\n    \"OPTIONAL {\",\n    \"<\" + itemExpressionUri + \"> <http://scta.info/property/next> ?next .\",\n    \"}\",\n    \"OPTIONAL {\",\n    \"<\" + itemExpressionUri + \"> <http://scta.info/property/previous> ?previous .\",\n    \"}\",\n    \"OPTIONAL {\",\n    \"<\" + itemExpressionUri + \"> <http://purl.org/dc/terms/isPartOf> ?parent .\",\n    \"}\",\n    \"<\" + itemExpressionUri + \"> <http://www.w3.org/ns/ldp#inbox> ?inbox . \",\n    \"}\",\n    \"ORDER BY ?title\"].join('');\n\n    return query\n  }\n\n  export function itemTranscriptionInfoQuery(itemTranscriptionUri){\n    const query = [\n      \"SELECT DISTINCT ?title ?manifestation ?doc ?xml ?expression ?expressionShortId ?longTitle ?topLevelExpression ?next ?previous ?inbox ?t \",\n      \"WHERE { \",\n      \"BIND(<\" + itemTranscriptionUri + \"> as ?t) . \",\n      \"?t <http://purl.org/dc/elements/1.1/title> ?title .\",\n      \"?t <http://scta.info/property/isTranscriptionOf> ?manifestation .\",\n      \"?t <http://scta.info/property/hasDocument> ?doc . \",\n      \"?t <http://scta.info/property/hasXML> ?xml . \",\n      \"?manifestation <http://scta.info/property/isManifestationOf> ?expression .\",\n      \"?expression <http://purl.org/dc/elements/1.1/title> ?expressionTitle .\",\n      \"?expression <http://scta.info/property/shortId> ?expressionShortId .\",\n      \"?expression <http://scta.info/property/longTitle> ?longTitle .\",\n      \"?expression <http://scta.info/property/isPartOfTopLevelExpression> ?topLevelExpression .\",\n      \"OPTIONAL {\",\n      \"?expression <http://scta.info/property/next> ?next .\",\n      \"}\",\n      \"OPTIONAL {\",\n      \"?expression <http://scta.info/property/previous> ?previous .\",\n      \"}\",\n      \"?expression <http://www.w3.org/ns/ldp#inbox> ?inbox . \",\n      \"}\",\n      \"ORDER BY ?expressionTitle\"].join('');\n\n      return query\n    }\n  // gets all structure items with basic item information\n  export function basicStructureAllItemsInfoQuery(topLevelExpressionUrl){\n    const query = [\n      \"SELECT DISTINCT ?item ?itemTitle ?topLevel ?itemQuestionTitle ?cm ?cmTitle ?ct ?next ?previous ?itemType ?doc \",\n      \"WHERE { \",\n      \"<\" + topLevelExpressionUrl + \"> <http://scta.info/property/hasStructureItem> ?item .\",\n      \"?item <http://scta.info/property/isPartOfTopLevelExpression> ?topLevel .\",\n      \"?item <http://purl.org/dc/elements/1.1/title> ?itemTitle .\",\n      \"?item <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?itemType . \",\n      \"OPTIONAL {\",\n      \"?item <http://scta.info/property/questionTitle> ?itemQuestionTitle .\",\n      \"}\",\n      \"OPTIONAL\",\n      \"{\",\n      \"?item <http://scta.info/property/next> ?next .\",\n      \"}\",\n      \"OPTIONAL\",\n      \"{\",\n      \"?item <http://scta.info/property/previous> ?previous .\",\n      \"}\",\n      \"?item <http://scta.info/property/hasCanonicalManifestation> ?cm .\",\n      \"?item <http://scta.info/property/totalOrderNumber> ?totalOrderNumber .\",\n      \"?cm <http://purl.org/dc/elements/1.1/title> ?cmTitle .\",\n      \"?cm <http://scta.info/property/hasCanonicalTranscription> ?ct .\",\n      \"?ct <http://scta.info/property/hasDocument> ?doc .\",\n      \"}\",\n      \"ORDER BY ?totalOrderNumber\"].join('');\n      return query\n    }\n    // gets all parts\n    export function partsInfoQuery(resourceurl){\n      const query = [\n        \"SELECT DISTINCT ?title ?description ?part ?partTitle ?partQuestionTitle ?partType ?partLevel \",\n        \"WHERE { \",\n        \"<\" + resourceurl + \"> <http://purl.org/dc/elements/1.1/title> ?title .\",\n        \"<\" + resourceurl + \"> <http://purl.org/dc/elements/1.1/description> ?description .\",\n        \"<\" + resourceurl + \"> <http://purl.org/dc/terms/hasPart> ?part .\",\n        \"?part <http://purl.org/dc/elements/1.1/title> ?partTitle .\",\n        \"?part <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?partType . \",\n        \"OPTIONAL {\",\n        \"?part <http://scta.info/property/questionTitle> ?partQuestionTitle .\",\n        \"}\",\n        \"OPTIONAL {\",\n        \"?part <http://scta.info/property/level> ?partLevel .\",\n        \"}\",\n        \"OPTIONAL {\",\n        \"?part <http://scta.info/property/totalOrderNumber> ?totalOrderNumber .\",\n        \"}\",\n        \"}\",\n        \"ORDER BY ?totalOrderNumber\"].join('');\n        return query\n      }\n    // gets all expressions for work Group\n    export function workGroupExpressionQuery(resourceurl){\n      const query = [\n        \"SELECT DISTINCT ?item ?itemTitle ?itemAuthor ?itemAuthorTitle ?itemType \",\n        \"WHERE { \",\n        \"<\" + resourceurl + \"> <http://scta.info/property/hasExpression> ?item .\",\n        \"?item <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?itemType . \",\n        \"?item <http://purl.org/dc/elements/1.1/title> ?itemTitle .\",\n        \"?item <http://www.loc.gov/loc.terms/relators/AUT> ?itemAuthor .\",\n        \"?itemAuthor <http://purl.org/dc/elements/1.1/title> ?itemAuthorTitle .\",\n        \"}\",\n        \"ORDER BY ?itemAuthorTitle\"].join('');\n        return query\n  }\n  export function getArticleTranscriptionDoc(resourceurl){\n    const query = [\n      \"SELECT DISTINCT ?doc ?articleType \",\n      \"WHERE { \",\n        \"<\" + resourceurl + \"> <http://scta.info/property/hasCanonicalTranscription> ?ctranscription . \",\n        \"<\" + resourceurl + \"> <http://scta.info/property/articleType> ?articleType .\",\n        \"?ctranscription <http://scta.info/property/hasXML> ?doc . \",\n      \"}\"].join('');\n      return query\n  }\n  export function getItemTranscriptionFromBlockDiv(resourceurl){\n    const query = [\n      \"SELECT DISTINCT ?ctranscription ?blockDivExpression \",\n      \"WHERE { \",\n        \"OPTIONAL\",\n        \"{\",\n          //\"<\" + resourceurl + \"> <http://scta.info/property/isPartOfStructureItem> ?itemParent . \",\n          //\"<\" + resourceurl + \"> <http://scta.info/property/isMemberOf> ?itemParent . \",\n          \"{\",\n            \"<\" + resourceurl + \"> <http://scta.info/property/isPartOfStructureItem> ?itemParent . \",\n          \"}\",\n          \"UNION\",\n          \"{\",\n            \"<\" + resourceurl + \">  <http://scta.info/property/isPartOfStructureBlock> ?blockParent .\",\n            \"?blockParent <http://scta.info/property/isPartOfStructureItem> ?itemParent . \",\n          \"}\",\n\n        \"?itemParent <http://scta.info/property/structureType> <http://scta.info/resource/structureItem> . \",\n        \"{\",\n          \"{\",\n            \"?itemParent <http://scta.info/property/hasCanonicalManifestation> ?cmanifestation . \",\n            \"?cmanifestation <http://scta.info/property/hasCanonicalTranscription> ?ctranscription . \",\n          \"}\",\n          \"UNION\",\n          \"{\",\n            \"?itemParent <http://scta.info/property/hasCanonicalTranscription> ?ctranscription . \",\n          \"}\",\n        \"}\",\n        \"}\",\n        \"OPTIONAL\",\n        \"{\",\n          \"{\",\n            \"<\" + resourceurl + \"> <http://scta.info/property/isManifestationOf> ?blockDivExpression . \",\n          \"}\",\n          \"UNION\",\n          \"{\",\n            \"<\" + resourceurl + \"> <http://scta.info/property/isTranscriptionOf> ?blockDivManifestation . \",\n            \"?blockDivManifestation <http://scta.info/property/isManifestationOf> ?blockDivExpression . \",\n          \"}\",\n        \"}\",\n      \"}\"].join('');\n      return query\n  }\n  /**\n   * @description constructs query needed for initial textSwitch component; captures resource type information and related \n   * details needed to allow the textSwitch component decide what kind of display is necessary\n   * \n   * @param {string} resourceurl - resource url should be full scta url id\n   * @returns {string} - returns query as string\n   */\n  export function getStructureType(resourceurl){\n    const query = [\n      \"SELECT DISTINCT ?type ?structureType ?level ?topLevel ?itemParent ?resourceTitle ?author ?authorTitle ?ctranscription \",\n      \"WHERE { \",\n      \"<\" + resourceurl + \"> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type . \",\n      \"OPTIONAL {\",\n        \"<\" + resourceurl + \"> <http://www.loc.gov/loc.terms/relators/AUT> ?author .\",\n        \"?author <http://purl.org/dc/elements/1.1/title> ?authorTitle .\",\n      \"}\",\n      \"OPTIONAL {\",\n        \"<\" + resourceurl + \"> <http://purl.org/dc/elements/1.1/title> ?resourceTitle .\",\n      \"}\",\n      \"OPTIONAL {\",\n      \"<\" + resourceurl + \"> <http://scta.info/property/structureType> ?structureType . \",\n      \"}\",\n      \"OPTIONAL {\",\n      \"<\" + resourceurl + \"> <http://scta.info/property/level> ?level . \",\n      \"}\",\n      \"OPTIONAL {\",\n      \"<\" + resourceurl + \"> <http://scta.info/property/isPartOfTopLevelExpression> ?topLevel . \",\n      \"}\",\n      \"OPTIONAL {\",\n      \"<\" + resourceurl + \"> <http://scta.info/property/isPartOfTopLevelManifestation> ?topLevel . \",\n      \"}\",\n      \"OPTIONAL {\",\n      \"<\" + resourceurl + \"> <http://scta.info/property/isPartOfTopLevelTransription> ?topLevel . \",\n      \"}\",\n      \"OPTIONAL {\",\n        \"{\",\n          \"<\" + resourceurl + \"> <http://scta.info/property/isPartOfStructureItem> ?itemParent . \",\n        \"}\",\n        \"UNION\",\n        \"{\",\n          \"<\" + resourceurl + \"> <http://scta.info/property/isPartOfStructureBlock> ?blockParent . \",\n          \"?blockParent  <http://scta.info/property/isPartOfStructureItem> ?itemParent .\",\n        \"}\",\n      \"}\",\n      \"OPTIONAL {\",\n        \"{\",\n          \"<\" + resourceurl + \"> <http://scta.info/property/hasCanonicalManifestation> ?cmanifestation . \",\n          \"?cmanifestation <http://scta.info/property/hasCanonicalTranscription> ?ctranscription . \",\n        \"}\",\n        \"UNION\",\n        \"{\",\n          \"<\" + resourceurl + \"> <http://scta.info/property/hasCanonicalTranscription> ?ctranscription . \",\n        \"}\",\n        \"UNION\",\n        \"{\",\n          \"<\" + resourceurl + \"> a <http://scta.info/resource/transcription> . \",\n          \"BIND(<\" + resourceurl + \"> AS ?ctranscription) .\",\n        \"}\",\n      \"}\",\n    \"}\"].join('');\n      return query\n    }\n  //surface id query, gets canvas and manifestation\n  export function getSurfaceInfo(surfaceid){\n    const query = [\n      \"SELECT DISTINCT ?surfaceTitle ?isurface ?isurfaceTitle ?icodexTitle ?canvas ?imageurl ?next_surface ?previous_surface \",\n        \"{\",\n  \t\t\t\t\"<\" + surfaceid + \"> <http://purl.org/dc/elements/1.1/title> ?surfaceTitle .\",\n  \t\t\t\t\"<\" + surfaceid + \"> <http://scta.info/property/hasISurface> ?isurface .\",\n  \t\t\t\t\"OPTIONAL {\",\n  \t\t\t\t\t\"<\" + surfaceid + \"> <http://scta.info/property/next> ?next_surface .\",\n  \t\t\t\t\"}\",\n  \t\t\t\t\"OPTIONAL {\",\n  \t\t\t\t\t\"<\" + surfaceid + \"> <http://scta.info/property/previous> ?previous_surface .\",\n          \"}\",\n  \t\t\t\t\"OPTIONAL {\",\n  \t\t\t\t\t\"?isurface <http://purl.org/dc/elements/1.1/title> ?isurfaceTitle .\",\n  \t\t\t\t\t\"?isurface <http://purl.org/dc/elements/1.1/isPartOf> ?icodex .\",\n  \t\t\t\t\t\"?icodex <http://purl.org/dc/elements/1.1/title> ?icodexTitle .\",\n  \t\t\t\t\"}\",\n  \t\t\t\t\"?isurface <http://scta.info/property/hasCanvas> ?canvas .\",\n  \t\t\t\t\"OPTIONAL{\",\n  \t\t\t\t\t\"?canvas <http://iiif.io/api/presentation/2#hasImageAnnotations> ?blank .\",\n  \t\t\t\t\"}\",\n  \t\t\t\t\"OPTIONAL{\",\n  \t\t\t\t\"?canvas <http://www.w3.org/2003/12/exif/ns#height> ?c_height .\",\n          \"}\",\n  \t\t     \"?blank <http://www.w3.org/1999/02/22-rdf-syntax-ns#first> ?o .\",\n  \t\t     \"?o <http://www.w3.org/ns/oa#hasBody> ?o2 .\",\n  \t\t    \"OPTIONAL{\",\n  \t\t\t\t\t \"?o2 <http://rdfs.org/sioc/services#has_service> ?imageurl .\",\n  \t\t\t\t \"}\",\n  \t\t\t\t \"OPTIONAL{\",\n  \t\t\t\t\t \"?o2 <http://www.shared-canvas.org/ns/hasRelatedService> ?imageurl .\",\n  \t\t\t\t \"}\",\n        \"}\"].join('');\n\n      return query\n    }\n\n//surface id query, gets canvas and manifestation\nexport function getAuthorInformation(authorid){\n    const query = [\n      \"CONSTRUCT\",\n      \"{\",\n      \"?author  <http://purl.org/dc/elements/1.1/title> ?authorTitle ;\",\n      \"<http://scta.info/resource/hasTopLevelExpression> ?expression ;\",\n      \"<http://scta.info/property/authorArticle> ?authorArticle;\",\n      \"<http://scta.info/property/textArticle> ?textArticle .\",\n    \t\"?authorArticle <http://purl.org/dc/elements/1.1/title> ?authorArticleTitle . \",\n      \"?textArticle <http://purl.org/dc/elements/1.1/title> ?textArticleTitle . \",\n    \t\"?expression <http://purl.org/dc/elements/1.1/title> ?topLevelExpressionTitle .\",\n      \"}\",\n      \"WHERE \",\n      \"{\",\n      \"BIND(<\" + authorid + \"> as ?author) . \",\n      \"?author <http://purl.org/dc/elements/1.1/title> ?authorTitle .\",\n      \"OPTIONAL\",\n      \"{\",\n      \"?expression <http://www.loc.gov/loc.terms/relators/AUT> ?author .\",\n      \"?expression a <http://scta.info/resource/expression> .\",\n      \"?expression <http://scta.info/property/level> '1' .\",\n      \"?expression <http://purl.org/dc/elements/1.1/title> ?topLevelExpressionTitle .\",\n      \"}\",\n      \"OPTIONAL\",\n      \"{\",\n      \"?expression2 <http://www.loc.gov/loc.terms/relators/AUT> ?author .\",\n      \"?textArticle <http://scta.info/property/isArticleOf> ?expression2 .\",\n      \"?textArticle <http://purl.org/dc/elements/1.1/title> ?textArticleTitle .\",\n      \"}\",\n      \"OPTIONAL\",\n      \"{\",\n      \"?authorArticle <http://scta.info/property/isArticleOf> ?author .\",\n      \"?authorArticle <http://purl.org/dc/elements/1.1/title> ?authorArticleTitle\",\n      \"}\",\n      \"}\"].join('');\n      return query\n      }\n\n  export function versionHistoryInfo(transcriptionUri){\n     \t \tconst query = [\n     \t \t\t\"SELECT ?version ?version_shortId ?order_number ?version_label ?review ?doc\",\n     \t    \"{\",\n            \"{\",\n               \"BIND(<\" + transcriptionUri + \"> as ?version) . \",\n     \t         \"?version <http://scta.info/property/shortId> ?version_shortId .\",\n               \"?version <http://scta.info/property/hasDocument> ?doc . \",\n     \t         \"?version <http://scta.info/property/versionOrderNumber> ?order_number .\",\n     \t\t\t\t\t \"?version <http://scta.info/property/versionLabel> ?version_label .\",\n     \t\t\t\t\t \"OPTIONAL {\",\n     \t\t\t\t\t \t\"?version <http://scta.info/property/hasReview> ?review .\",\n     \t\t\t\t   \"}\",\n     \t\t\t\t \"}\",\n     \t       \"UNION\",\n            \"{\",\n     \t         \"<\" + transcriptionUri + \"> <http://scta.info/property/hasAncestor> ?version .\",\n     \t\t\t\t\t \"?version <http://scta.info/property/shortId> ?version_shortId .\",\n               \"?version <http://scta.info/property/hasDocument> ?doc . \",\n     \t         \"?version <http://scta.info/property/versionOrderNumber> ?order_number .\",\n     \t\t\t\t\t \"?version <http://scta.info/property/versionLabel> ?version_label .\",\n     \t\t\t\t\t \"OPTIONAL {\",\n     \t\t\t\t\t \t\"?version <http://scta.info/property/hasReview> ?review .\",\n     \t\t\t\t   \"}\",\n     \t\t\t\t \"}\",\n     \t       \"UNION\",\n     \t       \"{\",\n     \t         \"<\" + transcriptionUri + \"> <http://scta.info/property/hasDescendant> ?version .\",\n     \t\t\t\t\t \"?version <http://scta.info/property/shortId> ?version_shortId .\",\n               \"?version <http://scta.info/property/hasDocument> ?doc . \",\n     \t         \"?version <http://scta.info/property/versionOrderNumber> ?order_number .\",\n     \t\t\t\t\t \"?version <http://scta.info/property/versionLabel> ?version_label .\",\n     \t\t\t\t\t \"OPTIONAL {\",\n     \t\t\t\t\t \t\"?version <http://scta.info/property/hasReview> ?review .\",\n     \t\t\t\t   \"}\",\n     \t\t\t\t \"}\",\n     \t     \"}\",\n     \t     \"ORDER BY DESC(?order_number)\"].join('');\n           return query\n           }\n\n  //gets lines and zone order for\n  export function getBlockLines(manifestationBlockId){\n     const query = [\n       \"SELECT ?first ?last ?order ?surface\",\n       \"{\",\n         \"<\" + manifestationBlockId + \"> <http://scta.info/property/isOnZone> ?zone . \",\n         \"?zone <http://scta.info/property/isOnZone> ?zone2 .\",\n         \"?zone2 <http://scta.info/property/firstLine> ?first .\",\n         \"?zone2 <http://scta.info/property/lastLine> ?last .\",\n         \"?zone2 <http://scta.info/property/isPartOfSurface> ?surface .\",\n         \"?zone <http://scta.info/property/isOnZoneOrder> ?order .\",\n       \"}\"].join('');\n       return query\n     }\n\n   //gets lines and zone order for\n   export function getChildParts(resourceid){\n      const query = [\n        \"SELECT ?part ?title ?level ?order ?structureType ?questionTitle ?author ?authorTitle ?isPartOf ?isPartOfTitle \",\n        \"{\",\n          \"<\" + resourceid + \"> <http://purl.org/dc/terms/hasPart> ?part . \",\n          \"?part <http://purl.org/dc/elements/1.1/title> ?title .\",\n          \"OPTIONAL {\",\n            \"?isPartOf <http://purl.org/dc/terms/hasPart> <\" + resourceid + \"> .\",\n            \"?isPartOf <http://purl.org/dc/elements/1.1/title> ?isPartOfTitle .\",\n          \"}\",\n          \"OPTIONAL {\",\n            \"?part <http://www.loc.gov/loc.terms/relators/AUT> ?author .\",\n            \"?author <http://purl.org/dc/elements/1.1/title> ?authorTitle .\",\n          \"}\",\n          \"OPTIONAL\",\n          \"{\",\n          \"?part <http://scta.info/property/level> ?level .\",\n          \"}\",\n          \"OPTIONAL\",\n          \"{\",\n          \"?part <http://scta.info/property/structureType> ?structureType .\",\n          \"}\",\n          \"OPTIONAL\",\n          \"{\",\n            \"{\",\n              \"?part <http://scta.info/property/sectionOrderNumber> ?order .\",\n            \"}\",\n            \"UNION\",\n            \"{\",\n              \"?part <http://scta.info/property/isTranscriptionOf> ?mpart . \",\n              \"?mpart <http://scta.info/property/isManifestationOf> ?epart . \",\n              \"?epart <http://scta.info/property/sectionOrderNumber> ?order .\",\n            \"}\",\n            \"UNION\",\n            \"{\",\n              \"?part <http://scta.info/property/isManifestationOf> ?epart . \",\n              \"?epart <http://scta.info/property/sectionOrderNumber> ?order .\",\n            \"}\",\n          \"}\",\n          \"OPTIONAL\",\n          \"{\",\n          \"?part <http://scta.info/property/questionTitle> ?questionTitle .\",\n          \"}\",\n        \"}\",\n        \"ORDER BY ?order\"].join('');\n        return query\n      }\n      //gets lines and zone order for\n    export function getMembersOf(resourceid){\n       const query = [\n         \"SELECT ?memberOf\",\n         \"{\",\n           \"<\" + resourceid + \"> <http://scta.info/property/isMemberOf> ?memberOf . \",\n         \"}\"].join('');\n         return query\n       }\n\n    export function getManifestationCitationInfo(transcriptionid){\n       var query = [\n       \"SELECT DISTINCT ?manifestation ?manifestationTitle ?manifestationSurface ?surfaceTitle ?codexTitle ?datasource ?eLongTitle ?author ?authorTitle ?expression ?editor ?editorTitle\",\n       \"{\",\n       \"<\" + transcriptionid + \"> <http://scta.info/property/isTranscriptionOf> ?manifestation .\",\n       \"<\" + transcriptionid + \"> <http://scta.info/property/hasXML> ?datasource . \",\n       \"?manifestation <http://purl.org/dc/elements/1.1/title> ?manifestationTitle .\",\n       \"{\",\n        \"?manifestation <http://scta.info/property/isPartOfTopLevelManifestation> ?topLevelManifestation .\",\n       \"}\",\n       \"UNION\",\n       \"{\",\n        \"?manifestation <http://scta.info/property/level> '1' .\",\n        \"BIND (?manifestation AS ?topLevelManifestation) .\",\n       \"}\",\n       \"OPTIONAL {\",\n         \"?topLevelManifestation <http://scta.info/property/editor> ?editor .\",\n         \"?editor <http://purl.org/dc/elements/1.1/title> ?editorTitle .\",\n       \"}\",\n       \"?manifestation <http://scta.info/property/isManifestationOf> ?expression .\",\n       \"{\",\n       \"?expression <http://scta.info/property/isPartOfTopLevelExpression> ?topLevelExpression .\",\n       \"}\",\n       \"UNION\",\n       \"{\",\n        \"?expression <http://scta.info/property/level> '1' .\",\n        \"BIND (?expression AS ?topLevelExpression) .\",\n       \"}\",\n       \"OPTIONAL {\",\n        \"?expression <http://scta.info/property/longTitle> ?eLongTitle\",\n      \"}\",\n       \"OPTIONAL {\",\n         \"?topLevelExpression <http://www.loc.gov/loc.terms/relators/AUT> ?author .\",\n         \"?author <http://purl.org/dc/elements/1.1/title> ?authorTitle .\",\n       \"}\",\n       // # TODO isOnSurface should become more uniform across manifestations in order to simplify this\n       \"OPTIONAL\",\n         \"{\",\n         // #option 1 get surfaces for elements and blocks\n          \"{\",\n            \"?manifestation <http://scta.info/property/isOnZone> ?bn . \",\n            \"?bn <http://scta.info/property/isOnZone> ?zone .\",\n            \"?zone <http://scta.info/property/isPartOfSurface> ?manifestationSurface .\",\n          \"}\",\n          \"UNION\",\n          //#option 2 get surface for divisions and items\n          \"{\",\n            \"?manifestation <http://scta.info/property/hasStructureBlock> ?block .\",\n            \"?block <http://scta.info/property/isOnSurface> ?manifestationSurface .\",\n          \"}\",\n          \"UNION\",\n          //#option 3 get surfaces for collections\"\n          \"{\",\n            \"?manifestation <http://scta.info/property/hasStructureItem> ?item .\",\n            \"?item <http://scta.info/property/isOnSurface> ?manifestationSurface .\",\n          \"}\",\n          \"?manifestationSurface <http://purl.org/dc/elements/1.1/title> ?surfaceTitle .\",\n          \"?manifestationSurface <http://scta.info/property/order> ?surface_order .\",\n          \"?codex <http://scta.info/property/hasSurface> ?manifestationSurface .\",\n          \"?codex <http://purl.org/dc/elements/1.1/title> ?codexTitle .\",\n         \"}\",\n       \"}\",\n       \"ORDER BY ?surface_order\"].join('');\n       return query\n     }\n    \n\n    export function getCodices(){\n     const query = [\n       \"SELECT ?codex ?codex_title\",\n \t     \"{\",\n\t\t\t\t \"?codex a <http://scta.info/resource/codex> .\",\n\t\t\t\t \"?codex <http://purl.org/dc/elements/1.1/title> ?codex_title\",\n\t\t\t\t\"}\",\n\t\t\t \"ORDER BY ?codex_title\"].join('')\n       return query\n     }\n     export function getCodexInfo(codexid){\n      const query = [\n        \"SELECT DISTINCT ?codex ?expression ?codex_title ?item_expression_title ?item_expression_question_title ?surface ?surface_title ?surface_order ?manifestation ?manifestation_short_id ?status \",\n        \"{\",\n          \"BIND(<\" + codexid + \"> as ?codex) . \",\n          \"?codex <http://purl.org/dc/elements/1.1/title> ?codex_title .\",\n          \"OPTIONAL {\",\n          \"?icodex <http://scta.info/property/isCodexItemOf> ?codex .\",\n          \"?isurface <http://purl.org/dc/elements/1.1/isPartOf> ?icodex .\",\n          \"?surface <http://scta.info/property/hasISurface> ?isurface .\",\n          \"?surface <http://scta.info/property/order> ?surface_order .\",\n          \"?surface <http://purl.org/dc/elements/1.1/title> ?surface_title .\",\n          \"?manifestation <http://scta.info/property/isOnSurface> ?surface .\",\n          \"?manifestation <http://scta.info/property/structureType> <http://scta.info/resource/structureItem> .\",\n          \"?manifestation <http://scta.info/property/shortId> ?manifestation_short_id .\",\n          \"?manifestation <http://scta.info/property/isManifestationOf> ?expression .\",\n          \"?expression <http://purl.org/dc/elements/1.1/title> ?item_expression_title .\",\n          \"?expression <http://scta.info/property/status> ?status .\",\n          \"OPTIONAL {\",\n             \"?expression <http://scta.info/property/questionTitle> ?item_expression_question_title .\",\n           \"}\",\n         \"}\",\n        \"}\",\n        \"ORDER BY ?surface_order\"].join('')\n     return query\n   }\n   export function getCodexInfoFromManifest(manifestid){\n    const query = [\n      \"SELECT DISTINCT ?codex ?expression ?codex_title ?item_expression_title ?item_expression_question_title ?surface ?surface_title ?surface_order ?manifestation ?manifestation_short_id ?status \",\n      \"{\",\n        \"?icodex <http://scta.info/property/hasOfficialManifest> <\" + manifestid + \"> .\",\n        \"?codex <http://scta.info/property/hasCodexItem> ?icodex .\",\n        \"?codex <http://purl.org/dc/elements/1.1/title> ?codex_title .\",\n        \"OPTIONAL {\",\n        \"?icodex <http://scta.info/property/isCodexItemOf> ?codex .\",\n        \"?isurface <http://purl.org/dc/elements/1.1/isPartOf> ?icodex .\",\n        \"?surface <http://scta.info/property/hasISurface> ?isurface .\",\n        \"?surface <http://scta.info/property/order> ?surface_order .\",\n        \"?surface <http://purl.org/dc/elements/1.1/title> ?surface_title .\",\n        \"?manifestation <http://scta.info/property/isOnSurface> ?surface .\",\n        \"?manifestation <http://scta.info/property/structureType> <http://scta.info/resource/structureItem> .\",\n        \"?manifestation <http://scta.info/property/shortId> ?manifestation_short_id .\",\n        \"?manifestation <http://scta.info/property/isManifestationOf> ?expression .\",\n        \"?expression <http://purl.org/dc/elements/1.1/title> ?item_expression_title .\",\n        \"?expression <http://scta.info/property/status> ?status .\",\n        \"OPTIONAL {\",\n           \"?expression <http://scta.info/property/questionTitle> ?item_expression_question_title .\",\n         \"}\",\n       \"}\",\n      \"}\",\n      \"ORDER BY ?surface_order\"].join('')\n      return query\n    }\n\n     export function getCodexInfoFromSurface(surfaceid){\n      const query = [\n        \"SELECT DISTINCT ?codex ?expression ?codex_title ?item_expression_title ?item_expression_question_title ?surface ?surface_title ?surface_order ?manifestation ?manifestation_short_id ?status \",\n        \"{\",\n          \"?codex <http://scta.info/property/hasSurface> <\" + surfaceid + \"> .\",\n          \"?codex <http://purl.org/dc/elements/1.1/title> ?codex_title .\",\n          \"OPTIONAL {\",\n          \"?icodex <http://scta.info/property/isCodexItemOf> ?codex .\",\n          \"?isurface <http://purl.org/dc/elements/1.1/isPartOf> ?icodex .\",\n          \"?surface <http://scta.info/property/hasISurface> ?isurface .\",\n          \"?surface <http://scta.info/property/order> ?surface_order .\",\n          \"?surface <http://purl.org/dc/elements/1.1/title> ?surface_title .\",\n          \"?manifestation <http://scta.info/property/isOnSurface> ?surface .\",\n          \"?manifestation <http://scta.info/property/structureType> <http://scta.info/resource/structureItem> .\",\n          \"?manifestation <http://scta.info/property/shortId> ?manifestation_short_id .\",\n          \"?manifestation <http://scta.info/property/isManifestationOf> ?expression .\",\n          \"?expression <http://purl.org/dc/elements/1.1/title> ?item_expression_title .\",\n          \"?expression <http://scta.info/property/status> ?status .\",\n          \"OPTIONAL {\",\n             \"?expression <http://scta.info/property/questionTitle> ?item_expression_question_title .\",\n           \"}\",\n         \"}\",\n        \"}\",\n        \"ORDER BY ?surface_order\"].join('')\n     return query\n   }\n\n   export function getCodexInfoFromCanvas(canvasid){\n    const query = [\n      \"SELECT DISTINCT ?codex ?surfaceFocus ?expression ?codex_title ?item_expression_title ?item_expression_question_title ?surface ?surface_title ?surface_order ?manifestation ?manifestation_short_id ?status \",\n      \"{\",\n        \"?isurfaceFocus <http://scta.info/property/hasCanvas> <\" + canvasid + \"> .\",\n        \"?surfaceFocus <http://scta.info/property/hasISurface> ?isurfaceFocus .\",\n        \"?codex <http://scta.info/property/hasSurface> ?surfaceFocus .\",\n        \"?codex <http://purl.org/dc/elements/1.1/title> ?codex_title .\",\n        \"OPTIONAL {\",\n        \"?icodex <http://scta.info/property/isCodexItemOf> ?codex .\",\n        \"?isurface <http://purl.org/dc/elements/1.1/isPartOf> ?icodex .\",\n        \"?surface <http://scta.info/property/hasISurface> ?isurface .\",\n        \"?surface <http://scta.info/property/order> ?surface_order .\",\n        \"?surface <http://purl.org/dc/elements/1.1/title> ?surface_title .\",\n        \"?manifestation <http://scta.info/property/isOnSurface> ?surface .\",\n        \"?manifestation <http://scta.info/property/structureType> <http://scta.info/resource/structureItem> .\",\n        \"?manifestation <http://scta.info/property/shortId> ?manifestation_short_id .\",\n        \"?manifestation <http://scta.info/property/isManifestationOf> ?expression .\",\n        \"?expression <http://purl.org/dc/elements/1.1/title> ?item_expression_title .\",\n        \"?expression <http://scta.info/property/status> ?status .\",\n        \"OPTIONAL {\",\n           \"?expression <http://scta.info/property/questionTitle> ?item_expression_question_title .\",\n         \"}\",\n       \"}\",\n      \"}\",\n      \"ORDER BY ?surface_order\"].join('')\n      return query\n    }\n\n   export function getSearchExpressionList(filters){\n     //filters should be an ojbect\n     let authorFilter = \"\"\n     if (filters.authorId){\n       authorFilter = \"BIND(<\" + filters.authorId + \"> as ?author) . \"\n     }\n     const query = [\n       \"SELECT DISTINCT ?expressionid ?expressionTitle ?author ?authorTitle \",\n       \"{\",\n         authorFilter,\n         \"?author a <http://scta.info/resource/person> .\",\n         \"?expressionid <http://www.loc.gov/loc.terms/relators/AUT> ?author .\",\n         \"?expressionid a <http://scta.info/resource/expression> .\",\n         \"?expressionid <http://scta.info/property/level> '1' .\",\n         \"?expressionid <http://purl.org/dc/elements/1.1/title> ?expressionTitle .\",\n         \"?author <http://purl.org/dc/elements/1.1/title> ?authorTitle .\",\n       \"}\",\n       \"ORDER BY ?authorTitle\"].join('')\n    return query\n   }\n   export function getSearchAuthorList(filters){\n     //filters should be an ojbect\n     const query = [\n       \"SELECT DISTINCT ?author ?authorTitle \",\n       \"{\",\n          \"?author a <http://scta.info/resource/person> .\",\n          \"?expressionid <http://www.loc.gov/loc.terms/relators/AUT> ?author .\",\n          \"?author <http://purl.org/dc/elements/1.1/title> ?authorTitle .\",\n\n       \"}\",\n       \"ORDER BY ?authorTitle\"].join('')\n    return query\n   }\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {FaExternalLinkAlt, FaChevronDown, FaChevronUp} from 'react-icons/fa';\nimport {Link} from 'react-router-dom';\n\nimport {runQuery} from './utils'\nimport {getChildParts} from './Queries'\n\n/**\n* creates a text outline section\n*/\nclass TextOutline extends React.Component {\n  constructor(props){\n    super(props)\n    this.handleToggleChildren = this.handleToggleChildren.bind(this)\n    this.mounted = \"\"\n    this.state = {\n      parts: [],\n      showChildren: false,\n      isPartOf: {}\n    }\n\n  }\n  /**\n    @public\n    * toggles state.showChildren indicating whether or not section children should be mounted\n  */\n  handleToggleChildren(e){\n    e.preventDefault();\n    this.setState((prevState) => {\n      return {showChildren: !prevState.showChildren}\n    })\n  }\n  retrieveParts(resourceid){\n\n    const partsInfo = runQuery(getChildParts(resourceid))\n    partsInfo.then((data) => {\n\n      // async seems to be working pretty well and efficiently.\n      // if a section has many parts, it will be fired several times.\n      // if it has a 100 parts, it will fire 100 times.\n      // But 100 doesn't seem to causing serious performance issues.\n      //console.log(\"async test; fired\")\n      const newData = data.data.results.bindings.map((d) => {\n\n        return {\n          part: d.part.value,\n          title: d.title.value,\n          level: d.level ? d.level.value : \"\",\n          author: d.author ? d.author.value : \"\",\n          authorTitle: d.authorTitle ? d.authorTitle.value : \"\",\n          structureType: d.structureType ? d.structureType.value : \"\",\n          questionTitle: d.questionTitle ? d.questionTitle.value : \"\"\n        }\n      })\n\n      let isPartOf = {isPartOfId: \"\", isPartOfTitle: \"\"}\n      if (data.data.results.bindings[0]){\n        if (data.data.results.bindings[0].isPartOf){\n        isPartOf.isPartOfId = data.data.results.bindings[0].isPartOf.value\n        isPartOf.isPartOfTitle = data.data.results.bindings[0].isPartOfTitle.value\n        }\n      }\n\n\n      if (this.mounted){\n        this.setState({parts: newData, isPartOf: isPartOf})\n      }\n    })\n  }\n  componentDidMount(){\n    //this.setState({showChildren: this.props.showChildren})\n    this.mounted = true;\n    this.retrieveParts(this.props.resourceid)\n\n    if (this.props.membersOf){\n      if (this.props.membersOf.includes(this.props.resourceid)) {\n        this.setState({showChildren: true})\n\n      }\n    }\n\n  }\n  // UNSAFE_componentWillReceiveProps(newProps){\n  //   if (newProps.resourceid !== this.props.resourceid){\n  //     this.retrieveParts(this.props.resourceid)\n  //   }\n  //   if (newProps.resourceid !== this.props.resourceid || newProps.membersOf !== this.props.membersOf){\n  //     if (newProps.membersOf){\n  //       if (newProps.membersOf.includes(newProps.resourceid)) {\n  //         this.setState({showChildren: true})\n  //       }\n  //       // else{\n  //       //   this.setState({showChildren: false})\n  //       // }\n  //     }\n  //   }\n\n  // }\n  componentDidUpdate(prevProps){\n    if (this.props.resourceid !== prevProps.resourceid){\n      this.retrieveParts(this.props.resourceid)\n    }\n    if (this.props.resourceid !== prevProps.resourceid || this.props.membersOf !== prevProps.membersOf){\n      if (this.props.membersOf){\n        if (this.props.membersOf.includes(this.props.resourceid)) {\n          this.setState({showChildren: true})\n        }\n        // else{\n        //   this.setState({showChildren: false})\n        // }\n      }\n    }\n\n  }\n  componentWillUnmount(){\n    this.mounted = false;\n  }\n  render(){\n    const displayChildren = () => {\n      const parts = this.state.parts.map((p) => {\n        let bold = \"\"\n        if (this.props.membersOf){\n          if (this.props.membersOf.includes(p.part) || p.part === this.props.focusResourceid) {\n            bold = \"bold\"\n            //showChildren = true;\n          }\n        }\n        return <TextOutline\n        bold={bold}\n        key={p.part}\n        focusResourceid={this.props.focusResourceid}\n        showChildren={this.state.showChildren}\n        resourceid={p.part}\n        title={p.title}\n        level={p.level}\n        author={p.author}\n        authorTitle={p.authorTitle}\n        structureType={p.structureType}\n        membersOf={this.props.membersOf}\n        questionTitle={p.questionTitle}\n        mtFocus={this.props.mtFocus}\n        showAuthor={this.props.showAuthor}\n        collectionLink={p.structureType === \"http://scta.info/resource/structureCollection\" ? this.props.collectionLink : false}\n        showParentLink={false}\n        />\n\n\n      })\n      return parts\n    }\n    const indent = this.props.level * 5\n    return (\n      <div id=\"outline\" style={{\"paddingLeft\": indent + \"px\"}}>\n        <p className={this.props.bold}>\n        {(this.state.isPartOf.isPartOfId && this.props.showParentLink) && <Link to={\"/text?resourceid=\" + this.state.isPartOf.isPartOfId}><FaChevronUp/></Link>}\n        {(this.props.author && this.props.showAuthor && this.props.level === \"1\") &&\n          <span>\n            <span>{this.props.authorTitle}: </span>\n            <Link to={\"/text?resourceid=\" + this.props.author}><FaExternalLinkAlt/></Link>\n          </span>\n        }\n        {this.props.title}\n        {this.props.questionTitle && <span>: {this.props.questionTitle}</span>}\n        {(this.state.parts.length > 0 && !this.state.showChildren) && <span className=\"outlineArrow\" onClick={this.handleToggleChildren}><FaChevronDown/></span>}\n        {(this.state.parts.length > 0 && this.state.showChildren) && <span className=\"outlineArrow\" onClick={this.handleToggleChildren}><FaChevronUp/></span>}\n        {/** Note this conditional below (\"this.props.resourceid &&\"\") was added mostly to allow current tests to pass; if required documentation of required props is improved; tests could be improved and this conditional likely wouldn't be necessary */}\n        {this.props.resourceid && <Link to={\"/text?resourceid=\" + this.props.resourceid + this.props.mtFocus} ><FaExternalLinkAlt/></Link>}\n        {this.props.collectionLink && <a href={\"https://mirador.scta.info?resourceid=\" + this.props.resourceid} target=\"_blank\" rel=\"noopener noreferrer\"> <img alt=\"view in mirador\" style={{width: \"12px\", height: \"12px\"}} src=\"https://projectmirador.org/img/mirador-logo.svg\"></img></a>}\n        </p>\n        {this.state.showChildren && displayChildren()}\n      </div>\n    );\n  }\n}\n\nTextOutline.propTypes = {\n  /**\n  * resource id of focused passage, e.g. paragraph or div structure\n  */\n  focusedResourceid: PropTypes.string,\n  /**\n  * resource id of current section\n  */\n  resourceid: PropTypes.string,\n  /**\n  * title of current section\n  */\n  title: PropTypes.string,\n  /**\n  * hide entire outline\n  */\n  hidden: PropTypes.bool,\n  /**\n  * manifestation and transcription slug\n  * used to create links in outline to specific manifestation\n  * or transcription\n\n  */\n  mtFocus: PropTypes.string,\n  /**\n  * indicates if section heading should be bold with string \"bold\", indicating that focusedResourceId falls within this section\n\n  * TODO: \"bold\" value would be better as boolean, true false\n  */\n  bold: PropTypes.string,\n  /**\n  * indicates whether children should be shown\n  */\n  showChildren: PropTypes.bool,\n  /**\n  * indicates whether level of section with number as string\n\n  * TODO: would be better if level propType was number.\n  */\n  level: PropTypes.string,\n  /**\n  * indicates structureType of current section (e.g. collection, item, division, block)\n  */\n  structureType: PropTypes.string,\n  /**\n  * an array of ids, that focused section is a member of\n  */\n  membersOf: PropTypes.array,\n  /**\n  * question title associated with section\n  */\n  questionTitle: PropTypes.string,\n  /**\n  * indications whether a link at the collection level should be set or not\n  */\n  collectionLink: PropTypes.bool\n}\n\nexport default TextOutline;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextOutline from './TextOutline'\n\nimport {runQuery} from './utils'\nimport {getMembersOf} from './Queries'\n\n/**\n* creates a text outline starting from top level expression\n\n*/\nclass TextOutlineWrapper extends React.Component {\n  constructor(props){\n    super(props)\n    this.mounted = \"\"\n    this.state = {\n      membersOf: [],\n    }\n  }\n  retrieveMembersOf(resourceid){\n    const membersOfInfo = runQuery(getMembersOf(resourceid))\n    membersOfInfo.then((data) => {\n      const newData = data.data.results.bindings.map((d) => {\n        return d.memberOf.value\n      })\n      if (this.mounted){\n        this.setState({membersOf: newData})\n      }\n    })\n  }\n  componentDidMount(){\n    this.mounted = true;\n    this.retrieveMembersOf(this.props.focusResourceid)\n  }\n  componentDidUpdate(prevProps){\n    if (this.props.focusResourceid !== prevProps.focusResourceid){\n      this.retrieveMembersOf(this.props.focusResourceid)\n    }\n  }\n  componentWillUnmount(){\n    this.mounted = false;\n}\n  render(){\n    return (\n      <div className={this.props.hidden ? \"hidden\" : \"showing\"}>\n\n        <TextOutline\n          key={this.props.resourceid}\n          showChildren={true}\n          focusResourceid={this.props.focusResourceid}\n          resourceid={this.props.resourceid}\n          title={this.props.title}\n          level={\"1\"}\n          structureType={\"http://scta.info/resource/structureCollection\"}\n          membersOf={this.state.membersOf}\n          mtFocus={this.props.mtFocus}\n          collectionLink={this.props.collectionLink}\n          showAuthor={this.props.showAuthor}\n          showParentLink={this.props.showParentLink}\n          />\n      </div>\n    );\n  }\n}\n\nTextOutlineWrapper.propTypes = {\n  /**\n  * resource id of focused passage, e.g. paragraph or div structure\n  */\n  focusedResourceid: PropTypes.string,\n  /**\n  * resource id of current section\n  */\n  resourceid: PropTypes.string,\n  /**\n  * title of current section\n  */\n  title: PropTypes.string,\n  /**\n  * hide entire outline\n  */\n  hidden: PropTypes.bool,\n  /**\n  * manifestation and transcription slug\n  * used to create links in outline to specific manifestation\n  * or transcription\n  */\n  mtFoucs: PropTypes.string,\n  /**\n  * indications whether a link at the collection level should be set or not\n  */\n  collectionLink: PropTypes.bool\n}\nexport default TextOutlineWrapper;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport OpenSeadragon from 'openseadragon';\nimport Axios from 'axios'\nimport uuidv4 from 'uuid/v4';\n\nconst OSDInstance = (props) => {\n  const [instance, setInstance] = useState()\n  const [viewerWidthHeight, setViewerWidthHeight] = useState({ w: \"\", h: \"\" })\n  const [viewerId] = useState(uuidv4())\n  useEffect(() => {\n    if (props.coords){\n      setViewerWidthHeight(computeViewerWidthHeight(props.coords.split(\",\")[2], props.coords.split(\",\")[3]))\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.coords])\n  useEffect(() => {\n    Axios.get(props.imageurl + \"/info.json\").then((d) => {\n      if (instance) {\n        // Modify tile source as needed to already existing instance\n        instance.addTiledImage({\n          tileSource: d.data\n        });\n        if (props.coords) {\n          // this should be another way to get Scalar coordinates, but it doesn't seem to be working\n          //const newRect = instance.viewport.imageToViewportRectangle(x, y, w, h)\n          const sc = getScalarCoordinates(props.coords, d.data.height, d.data.width)\n          const rect = new OpenSeadragon.Rect(sc.x, sc.y, sc.w, sc.h)\n          setBounds(instance, rect)\n          setOverlay(instance, rect)\n          if (props.lineFocusCoords){\n            const lsc = getScalarCoordinates(props.lineFocusCoords, d.data.height, d.data.width)\n            const linerect = new OpenSeadragon.Rect(lsc.x, lsc.y, lsc.w, lsc.h)\n            setOverlay(instance, linerect)\n          \n          }\n          setGoHome(instance, rect)\n          instance.viewport.fitBounds(rect)\n        }\n      }\n      else {\n        const id = \"osd-\" + viewerId\n        const instance = OpenSeadragon({\n          id: id,\n          prefixUrl: \"/img/openseadragon/\",\n          preserveViewport: true, //this helps to keep the viewer in the same spot when toggling full screen\n          visibilityRatio: 1,\n          minZoomLevel: 1,\n          defaultZoomLevel: 1,\n          tileSources: [d.data],\n          controlsFadeDelay: 0,\n          controlsFadeLength: 25\n        })\n        if (props.coords) {\n          // this should be another way to get Scalar coordinates, but it doesn't seem to be working\n          //const newRect = instance.viewport.imageToViewportRectangle(x, y, w, h)\n          const sc = getScalarCoordinates(props.coords, d.data.height, d.data.width)\n          const rect = new OpenSeadragon.Rect(sc.x, sc.y, sc.w, sc.h)\n          setBounds(instance, rect)\n          setOverlay(instance, rect)\n          if (props.lineFocusCoords){\n            const lsc = getScalarCoordinates(props.lineFocusCoords, d.data.height, d.data.width)\n            const linerect = new OpenSeadragon.Rect(lsc.x, lsc.y, lsc.w, lsc.h)\n            setOverlay(instance, linerect)\n        }\n          setGoHome(instance, rect)\n        }\n        setInstance(instance)\n      }\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.imageurl, props.coords])\n\n  const setOverlay = (instance, rect) => {\n    instance.addHandler(\"open\", function () {\n      const id = uuidv4()\n      const elt = document.createElement(\"div\");\n      elt.id = \"runtime-overlay-\" + id;\n      elt.className = \"osdhighlight\";\n      instance.addOverlay({\n        element: elt,\n        location: rect\n      });\n    })\n  }\n  const setBounds = (instance, rect) => {\n    instance.addHandler(\"open\", function () {\n      instance.viewport.fitBounds(rect, true);\n    });\n  }\n  const setGoHome = (instance, rect) => {\n    //OpenSeadragon.Viewport.prototype.goHome = function () {\n    instance.viewport.goHome = function () {\n      // Give it whatever rectangle you want\n      this.fitBounds(rect);\n    }\n  }\n  const getScalarCoordinates = (inputCoords, imageH, imageW) => {\n    const coords = inputCoords.split(\",\")\n    const x = parseInt(coords[0])\n    const y = parseInt(coords[1])\n    const w = parseInt(coords[2])\n    const h = parseInt(coords[3])\n\n    const ar = imageH / imageW\n    const xcomp = x / imageW\n    const ycomp = (y / imageH) * ar\n    const wcomp = w / imageW\n    const hcomp = (h / imageH) * ar\n    return { x: xcomp, y: ycomp, w: wcomp, h: hcomp }\n  }\n  const computeViewerWidthHeight = (w, h) => {\n    const displayWidth = props.displayWidth\n    const newHeight = displayWidth * (parseInt(h) / parseInt(w))\n    return { w: displayWidth, h: newHeight }\n  }\n  return (\n    <div>\n      {\n        //<p onClick={handleAddOverlay}>Add overlay</p>\n      }\n      {\n        props.coords ? <div id={\"osd-\" + viewerId} className=\"open-seadragon-container\" style={{ height: viewerWidthHeight.h + \"px\", width: viewerWidthHeight.w + \"px\" }}></div>\n          : <div id={\"osd-\" + viewerId} className=\"open-seadragon-container\" style={{ height: \"100vh\" }}></div>\n      }\n\n    </div>\n  )\n}\n\nOSDInstance.defaultProps = {\n  imageurl: \"https://loris2.scta.info/vat/V145v.jpg\",\n  displayWidth: 1000\n};\nOSDInstance.propTypes = {\n  /**\n  * imageurl (without iiif parameters) for which logo will be requested\n  **/\n  imageurl: PropTypes.string.isRequired,\n\n}\n\nexport default OSDInstance;","import React from 'react';\nimport OSDInstance from './OSDInstance';\nimport PropTypes from 'prop-types';\n\n// TODO: osd component makes this component fairly obsolete or a least exchangeable\nfunction Image(props) {\n  //TODO comment when ready to build a conditional based on prop to allow switch between using static image or OSDInstance\n    // let newCoords = \"\"\n    // if (props.coords){\n    //   const coordsSplitArray = props.coords.split(\",\")\n    //   //const x = parseInt(coordsSplitArray[0]) - 20\n    //   const x = parseInt(coordsSplitArray[0])\n    //   const y = coordsSplitArray[1]\n    //   //const w = parseInt(coordsSplitArray[2]) + 40\n    //   const w = parseInt(coordsSplitArray[2])\n    //   const h = coordsSplitArray[3]\n    //   newCoords = x + \",\" + y + \",\" + w + \",\" + h\n    // }\n    //const imageLink = props.imageUrl + \"/\" + newCoords + \"/\" + props.displayWidth + \",/0/default.jpg\"\n  return (\n      //<img alt=\"manuscript\" src={imageLink}/>\n      <OSDInstance imageurl={props.imageUrl} coords={props.coords} displayWidth={props.displayWidth} lineFocusCoords={props.lineFocusCoords}/>\n  );\n}\n\nImage.propTypes = {\n  /**\n  * the Url for the image resource\n  **/\n  imageUrl: PropTypes.string.isRequired,\n  /**\n  * width of the image to be displayed\n  *\n  * TODO: might be better to make this a number/integer and not required;\n  * when not preset perhaps it should just default to the widths listed in the coords\n  **/\n  displayWidth: PropTypes.string.isRequired,\n  /**\n  * string in the form of \"x,y,w,h\"\n  *\n  **/\n  coords: PropTypes.string.isRequired\n}\nexport default Image;\n","import React from 'react';\n\nfunction LineText(props) {\n  return (\n    <div className=\"text\" style={{\"whiteSpace\": \"nowrap\"}}>\n    {props.number && <span>{props.label.split(\"(\")[0]}/</span>}     \n    {props.number && <span>{props.number}</span>}\n    <span dangerouslySetInnerHTML={{__html: props.text}} />\n    </div>\n  );\n}\n\nexport default LineText;\n","// Note this component is a near duplicate of Image Text Wrapper in Paleographinator\n// TODO: This shoud be the target for a refactored independent React Component\n\nimport React, { Component } from 'react';\nimport Image from './Image';\nimport LineText from './LineText';\n\nclass ImageTextWrapper extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: \"\"\n    }\n  }\n  render() {\n    // const getClass = () => {\n    //   if (this.props.targetLabel === this.props.label){\n    //     return \"ImageTextWrapper target\"\n    //   }\n    //   else {\n    //     return \"ImageTextWrapper\"\n    //   }\n    // }\n    return (\n      <div className={this.props.targetLabel === this.props.label ? \"ImageTextWrapper target\" : \"ImageTextWrapper\"}>\n        <div className=\"labelImageWrapper\">\n        <Image\n          imageUrl={this.props.imageUrl}\n          canvas={this.props.canvas}\n          coords={this.props.coords}\n          canvasShort={this.props.canvasShort}\n          displayWidth={this.props.displayWidth}\n          lineFocusCoords={this.props.lineFocusCoords}\n          />\n        </div>\n        <LineText text={this.props.text} number={this.props.number} label={this.props.label}/>\n      </div>\n    );\n  }\n}\n\nexport default ImageTextWrapper;\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport Axios from 'axios'\n\nconst ImageLogo = (props) => {\n  const [logoUrl, setLogoUrl] = useState(\"\")\n  useEffect(() => {\n    // conditional set in order prevent ajax request if props.imagurl does not exist\n    if (props.imageurl){\n      Axios.get(props.imageurl + \"/info.json\").then((d) => {\n        const logo = d.data.logo[\"@id\"]\n        setLogoUrl(logo)\n      }).catch((error) => {\n        console.log(\"no logo found\", error)\n        setLogoUrl(\"\")\n      })\n    }\n  }, [props.imageurl])\n  return (\n    <>{logoUrl && <img src={logoUrl} style={{margin: props.margin, height: props.height}} alt=\"imagelogo\"/>}</>\n  )\n}\n\nImageLogo.defaultProps = {\n  height: \"20px\",\n  margin: \"5px\"\n};\n\nImageLogo.propTypes = {\n  /**\n  * imageurl (without iiif parameters) for which logo will be requested\n  **/\n  imageurl: PropTypes.string.isRequired,\n  margin: PropTypes.string,\n  height: PropTypes.string\n\n}\nexport default ImageLogo;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Axios from 'axios'\nimport Button from 'react-bootstrap/Button';\n\nimport ImageTextWrapper from './ImageTextWrapper';\nimport ImageLogo from './ImageLogo';\nimport OSDInstance from './OSDInstance';\n\nimport {runQuery} from './utils'\nimport {getSurfaceInfo} from './Queries'\n\n\n\nclass Surface2 extends React.Component {\n  constructor(props){\n    super(props)\n    this.mount = false\n    this.handleNext = this.handleNext.bind(this)\n    this.handlePrevious = this.handlePrevious.bind(this)\n    this.handleLineFocusNext = this.handleLineFocusNext.bind(this)\n    this.handleLineFocusPrev = this.handleLineFocusPrev.bind(this)\n    this.isLineNumberLast = this.isLineNumberLast.bind(this)\n    this.isLineNumberFirst = this.isLineNumberFirst.bind(this)\n    this.handleToggleTextLines = this.handleToggleTextLines.bind(this)\n    this.handleToggleAllLines = this.handleToggleAllLines.bind(this)\n    this.state = {\n      currentSurfaceId: \"\",\n      manifest: \"\",\n      canvas: \"\",\n      region: \"full\",\n      width: \"1000\",\n      next: \"\",\n      previous: \"\",\n      imageurl: \"\",\n      annotationsDisplay: true,\n      showAllLines: false\n    }\n\n  }\n  handleNext(){\n    //this.retrieveSurfaceInfo(this.state.next)\n    this.props.handleSurfaceFocusChange(this.state.next)\n  }\n  handlePrevious(){\n    //this.retrieveSurfaceInfo(this.state.previous)\n    this.props.handleSurfaceFocusChange(this.state.previous)\n\n  }\n  handleToggleTextLines(){\n    //this.retrieveSurfaceInfo(this.state.previous)\n    this.setState((prevState) => {\n      return {annotationsDisplay: !prevState.annotationsDisplay}\n    })\n  }\n  handleToggleAllLines(){\n    this.setState((prevState) => {\n      return {showAllLines: !prevState.showAllLines}\n    })\n  }\n  retrieveSurfaceInfo(surfaceid){\n    // manifest id should be retrieved from query\n    // this is a temporary measure until db is corrected and query is posible\n\n    //const manifest = \"http://scta.info/iiif/\" + this.props.topLevel.split(\"/resource/\")[1] + \"/\" + surfaceid.split(\"/resource/\")[1].split(\"/\")[0] + \"/manifest\";\n    const manifest = \"\";\n    const surfaceInfo = runQuery(getSurfaceInfo(surfaceid))\n    surfaceInfo.then((d) => {\n      const b = d.data.results.bindings[0]\n      // only preceed if sparql query returns results\n      if (b){\n        //second nested async call for annotation list\n        const alUrl = \"https://exist.scta.info/exist/apps/scta-app/folio-annotaiton-list-from-simpleXmlCoordinates.xq?surfaceid=\" + surfaceid.split(\"/resource/\")[1] + \"&coords=loose\"\n        Axios.get(alUrl).then((d2) => {\n          if (this.mount){\n              this.setState({\n                currentSurfaceId: surfaceid,\n                surfaceTitle: b.surfaceTitle.value,\n                manifest: manifest,\n                canvas: b.canvas.value,\n                imageurl: b.imageurl.value,\n                next: b.next_surface ? b.next_surface.value : \"\",\n                previous: b.previous_surface ? b.previous_surface.value : \"\",\n                annotations: d2.data ? d2.data.resources : \"\"\n            })\n          }\n        }).catch((error) => {\n          console.log(\"failed retrieving annotationlist: \", error)\n          if (this.mount){\n            this.setState({\n            currentSurfaceId: surfaceid,\n            surfaceTitle: b.surfaceTitle.value,\n            manifest: manifest,\n            canvas: b.canvas.value,\n            imageurl: b.imageurl.value,\n            next: b.next_surface ? b.next_surface.value : \"\",\n            previous: b.previous_surface ? b.previous_surface.value : \"\",\n            annotations: \"\"\n          })\n        }\n      })\n    }\n  })\n}\n// next for functions are used to compute next and previous Lines\n// this is a little bit hacky, since there are no resources for lines yet.\n// thus the line id is computed by breaking the line id apart,\n// using the line number to compute the next and the reassembling the line RDF id.\n// this will become unnecessary if/when each lines become and RDF resource and contains a next previous property\nhandleLineFocusNext() {\n  const currentLineNumber = parseInt(this.props.lineFocusId.split(\"/\")[this.props.lineFocusId.split(\"/\").length - 1])\n  const newLineArray = this.props.lineFocusId.split(\"/\")\n  newLineArray.pop()\n  newLineArray.push((currentLineNumber + 1).toString())\n  this.props.handleLineFocusChange(newLineArray.join(\"/\"))\n}\nhandleLineFocusPrev(){\n  const currentLineNumber = parseInt(this.props.lineFocusId.split(\"/\")[this.props.lineFocusId.split(\"/\").length - 1])\n  const previousLineArray = this.props.lineFocusId.split(\"/\")\n  previousLineArray.pop()\n  previousLineArray.push((currentLineNumber - 1).toString())\n  this.props.handleLineFocusChange(previousLineArray.join(\"/\"))\n}\nisLineNumberFirst(){\n  const lineNumber = parseInt(this.props.lineFocusId.split(\"/\")[this.props.lineFocusId.split(\"/\").length - 1])\n\n  if (lineNumber === 1){\n    return true\n  }\n  else {\n    return false\n  }\n}\nisLineNumberLast(){\n  const total = this.state.annotations ? this.state.annotations.length : \"\"\n  const lineNumber = parseInt(this.props.lineFocusId.split(\"/\")[this.props.lineFocusId.split(\"/\").length - 1])\n  if (lineNumber === total){\n    return true\n  }\n  else{\n    return false\n  }\n}\ncomponentDidMount(){\n  this.mount = true\n    if (this.props.surfaceid){\n      this.retrieveSurfaceInfo(this.props.surfaceid)\n    }\n    this.setState({annotationsDisplay: this.props.annotationsDisplay})\n  }\n  componentDidUpdate(prevProps){\n    if (this.props.surfaceid !== prevProps.surfaceid){\n    this.retrieveSurfaceInfo(this.props.surfaceid)\n    }\n  }\n  componentWillUnmount(){\n    this.mount = false\n  }\n\n  render() {\n    const displayImage = (h, i) => {\n      const text = h.resource.chars;\n      const canvas = h.on.split(\"#xywh=\")[0];\n      const canvasShort = canvas.split(\"/\")[canvas.split(\"/\").length - 1];\n      const coords = h.on.split(\"#xywh=\")[1];\n      const imageUrl = h.imageUrl\n      const label = h.label\n      if (this.state.showAllLines || (parseInt(this.props.lineFocusId.split(\"/\")[this.props.lineFocusId.split(\"/\").length - 1]) === (i + 1) ) || !this.props.lineFocusId){\n      return (\n        <ImageTextWrapper key={i}\n          imageUrl={imageUrl}\n          canvas={canvas}\n          coords={coords}\n          canvasShort={canvasShort}\n          text={text}\n          label={label}\n          number={i + 1}\n          targetLabel={this.props.targetLabel}\n          surfaceButton={false}\n          displayWidth={this.props.width ? this.props.width : this.state.width}\n          />\n        )\n      }\n      else{\n        return null\n      }\n\n    }\n    const displayImages = () => {\n      if (this.state.annotations && this.state.annotationsDisplay){\n        console.log(\"single annotation\", this.state.annotations)\n        let imageTextWrappers = []\n        if (!this.state.annotations.length){\n          const imageResult = displayImage(this.state.annotations, 0)\n          console.log(imageResult)\n          imageTextWrappers = imageResult\n        }\n        else{\n          imageTextWrappers = this.state.annotations.map((h, i) => {\n            return displayImage(h, i)\n          });\n        }\n        console.log(\"test\", imageTextWrappers)\n        return imageTextWrappers\n      }\n      else{\n        //TODO uncommnent when ready to make a switch between using OSD or Image\n        //const width = this.props.width ? this.props.width : this.state.width\n        //return <img alt=\"manuscript\" src={this.state.imageurl + \"/\" + this.state.region + \"/\" + width + \",/0/default.jpg\"}/>\n        return <OSDInstance imageurl={this.state.imageurl}/>\n      }\n    }\n    return (\n      <Container className={this.props.hidden ? \"hidden\" : \"showing\"}>\n      {this.state.currentSurfaceId ?\n        <div>\n          <div className=\"surface-navigation\">\n            <p>{this.state.surfaceTitle}</p>\n            {(this.props.handleSurfaceFocusChange) &&\n              <div>\n              {this.state.previous && <Button size=\"sm\" onClick={this.handlePrevious}>Previous Page</Button>}\n              {this.state.next && <Button size=\"sm\" onClick={this.handleNext}>Next Page</Button>}\n              </div>\n            }\n            {(this.props.handleLineFocusChange && !this.state.showAllLines) &&\n              <div>\n              {!this.isLineNumberFirst() && <Button size=\"sm\" onClick={this.handleLineFocusPrev}>Previous Line</Button>}\n              {!this.isLineNumberLast() && <Button size=\"sm\" onClick={this.handleLineFocusNext}>Next Line</Button>}\n              </div>\n            }\n            <div>\n\n            {this.props.lineFocusId && <Button size=\"sm\" onClick={this.handleToggleAllLines}>Toggle All/Focus Lines</Button>}\n            {(this.state.annotations) && <Button size=\"sm\" onClick={this.handleToggleTextLines}>Toggle Show Text Lines</Button>}\n            </div>\n            <ImageLogo imageurl={this.state.imageurl}/>\n          </div>\n          {displayImages()}\n        </div> : <p>No surface selected</p>}\n      </Container>\n\n    );\n  }\n\n}\nSurface2.defaultProps = {\n  annotationsDisplay: true\n};\nexport default Surface2;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport PropTypes from 'prop-types';\nimport Axios from 'axios'\n\nimport ImageLogo from './ImageLogo';\nimport ImageTextWrapper from './ImageTextWrapper';\n\nimport {runQuery} from './utils'\nimport {getSurfaceInfo, getBlockLines} from './Queries'\n\nclass Surface3 extends React.Component {\n  constructor(props){\n    super(props)\n    this.mounted = \"\"\n    this.handleNext = this.handleNext.bind(this)\n    this.handlePrevious = this.handlePrevious.bind(this)\n    this.state = {\n      region: \"full\",\n      surfaces: [\n      ]\n    }\n\n  }\n  handleNext(){\n    //this.retrieveSurfaceInfo(this.state.next)\n    this.props.handleSurfaceFocusChange(this.state.next)\n  }\n  handlePrevious(){\n    //this.retrieveSurfaceInfo(this.state.previous)\n    this.props.handleSurfaceFocusChange(this.state.previous)\n\n  }\n  retrieveSurfaceInfo(manifestationid){\n    // manifest id should be retrieved from query\n    // this is a temporary measure until db is corrected and query is posible\n    const blockLineInfo = runQuery(getBlockLines(manifestationid))\n    blockLineInfo.then((d1) => {\n      d1.data.results.bindings.forEach((z) => {\n        const surfaceid = z.surface.value\n        const firstLine = z.first.value\n        const lastLine = z.last.value\n        const order = z.order.value\n        //const manifest = \"http://scta.info/iiif/\" + this.props.topLevel.split(\"/resource/\")[1] + \"/\" + surfaceid.split(\"/resource/\")[1].split(\"/\")[0] + \"/\" + \"manifest\";\n        const surfaceInfo = runQuery(getSurfaceInfo(surfaceid))\n        surfaceInfo.then((d) => {\n          const b = d.data.results.bindings[0]\n          // only preceed if sparql query returns results\n          if (b){\n            //second nested async call for annotation list\n            const alUrl = \"https://exist.scta.info/exist/apps/scta-app/folio-annotaiton-list-from-simpleXmlCoordinates.xq?surfaceid=\" + surfaceid.split(\"/resource/\")[1] + \"&coords=loose\"\n            Axios.get(alUrl).then((d2) => {\n              //const resources = d2.data.resources\n              if (this.mounted){\n                this.setState((prevState) => {\n                  const newSurface = {\n                    currentSurfaceId: surfaceid,\n                    surfaceTitle: b.surfaceTitle ? b.surfaceTitle.value : \"\",\n                    //manifest: manifest,\n                    canvas: b.canvas.value,\n                    imageurl: b.imageurl.value,\n                    next: b.next_surface ? b.next_surface.value : \"\",\n                    previous: b.previous_surface ? b.previous_surface.value : \"\",\n                    annotations: d2.data ? d2.data.resources : \"\",\n                    surfaceid: surfaceid,\n                    firstLine: firstLine,\n                    lastLine: lastLine,\n                    order: order\n\n                  }\n                return {\n                  surfaces: [\n                    ...prevState.surfaces,\n                    newSurface\n                    ]\n                  }\n                })\n              }\n            }).catch((error) => {\n              if (this.mounted){\n                this.setState((prevState) => {\n                  const newSurface = {\n                    currentSurfaceId: surfaceid,\n                    surfaceTitle: b.surfaceTitle.value,\n                    //manifest: manifest,\n                    canvas: b.canvas.value,\n                    imageurl: b.imageurl.value,\n                    next: b.next_surface ? b.next_surface.value : \"\",\n                    previous: b.previous_surface ? b.previous_surface.value : \"\",\n                    annotations: \"\",\n                    surfaceid: surfaceid,\n                    firstLine: firstLine,\n                    lastLine: lastLine,\n                    order: order\n\n                  }\n                return {\n                  surfaces: [\n                    ...prevState.surfaces,\n                    newSurface\n                  ]\n                }\n              })\n            }\n          })\n        }\n      })\n    })\n  })\n}\ncomponentDidMount(){\n  this.mounted = true\n    if (this.props.manifestationid){\n      this.setState((prevState) => {\n        return {\n          surfaces: []\n        }\n      },\n      this.retrieveSurfaceInfo(this.props.manifestationid)\n    )\n    }\n  }\n  componentDidUpdate(prevProps){\n    if (this.props.manifestationid !== prevProps.manifestationid){\n      this.setState((prevState) => {\n        return {\n          surfaces: []\n        }\n\n      },\n    this.retrieveSurfaceInfo(this.props.manifestationid))\n    }\n  }\n  componentWillUnmount(){\n    this.mounted = false\n  }\n  render() {\n    const displayAllImages = () => {\n      const sortedSurfaces = this.state.surfaces.sort((a, b) => {\n        if (a.order > b.order) return 1;\n        if (b.order > a.order) return -1;\n        return 0;\n      })\n      const surfacesDisplay = sortedSurfaces.map((surface) => {\n        return displayImages(surface)\n      })\n      return surfacesDisplay\n    }\n    const displayImages = (surface) => {\n      // handle line display\n      if (surface.annotations && this.props.annotationsDisplay === \"lines\"){\n        const imageTextWrappers = surface.annotations.map((h, i) => {\n\n          if (i + 1 >= surface.firstLine && i < surface.lastLine){\n            const text = h.resource.chars;\n            const canvas = h.on.split(\"#xywh=\")[0];\n            const canvasShort = canvas.split(\"/\")[canvas.split(\"/\").length - 1];\n            const coords = h.on.split(\"#xywh=\")[1];\n            const imageUrl = h.imageUrl\n            const label = h.label\n            return (\n              <ImageTextWrapper key={i}\n                imageUrl={imageUrl}\n                canvas={canvas}\n                coords={coords}\n                canvasShort={canvasShort}\n                text={text}\n                label={label}\n                number={i + 1}\n                targetLabel={this.props.targetLabel}\n                surfaceButton={false}\n                displayWidth={this.props.width}\n                />\n              )\n            }\n            else{\n              return null\n            }\n\n        })\n        return imageTextWrappers\n      }\n      // handle paragraph display\n      else if (surface.annotations && this.props.annotationsDisplay === \"paragraph\"){\n        // sometimes surface annotations is an array (tested with surface.annotations.length) sometimes (when there is only one result) it is an object\n        const h = surface.annotations.length ? surface.annotations[surface.firstLine - 1] : surface.annotations;\n        const fl = surface.annotations.length ? surface.annotations[surface.firstLine - 1] : surface.annotations;\n        const flcanvas = fl ? fl.on.split(\"#xywh=\")[0] : \"\"\n        const flcanvasShort = flcanvas.split(\"/\")[flcanvas.split(\"/\").length - 1];\n        const flcoords = fl ? fl.on.split(\"#xywh=\")[1] : \"\"\n        const y = flcoords.split(\",\")[1]\n        const ll = surface.annotations.length ? surface.annotations[surface.lastLine - 1] : surface.annotations\n        //const llcanvas = ll ? ll.on.split(\"#xywh=\")[0] : \"\"\n        //const llcanvasShort = llcanvas.split(\"/\")[llcanvas.split(\"/\").length - 1];\n        const llcoords = ll ? ll.on.split(\"#xywh=\")[1] : \"\"\n        const lly = llcoords.split(\",\")[1]\n        const llh = llcoords.split(\",\")[3]\n        const llbottom = (parseInt(lly) + parseInt(llh)) - parseInt(y)\n        //x widens the column by 10, but only if the x is greater than 10\n        const x = parseInt(flcoords.split(\",\")[0]) > 10 ? parseInt(flcoords.split(\",\")[0]) - 10 : parseInt(flcoords.split(\",\")[0])\n        const coords = x + \",\" + (parseInt(y)) + \",\" + (parseInt(flcoords.split(\",\")[2]) + 10) + \",\" + (parseInt(llbottom) + 50)\n        const text = \"\"\n        const imageUrl = h ? h.imageUrl : \"\"\n        // check to see if an Image Url has been found.\n        // if not show \"error message\"\n        \n        // get line coordinates for focused line\n        let lineFocusCoords = \"\"\n        if (this.props.lineFocusId){\n          if (!surface.annotations.length){\n            const h = surface.annotations;\n            const i = 0;\n            if (parseInt(this.props.lineFocusId.split(\"/\")[this.props.lineFocusId.split(\"/\").length - 1]) === (i + 1) ){\n              lineFocusCoords = h.on.split(\"#xywh=\")[1];\n              }\n          }\n          else{\n            surface.annotations.forEach((h, i) => {\n            if (parseInt(this.props.lineFocusId.split(\"/\")[this.props.lineFocusId.split(\"/\").length - 1]) === (i + 1) ){\n              lineFocusCoords = h.on.split(\"#xywh=\")[1];\n              }\n            })\n          }\n        }\n        if (imageUrl){\n\n          return (\n            <ImageTextWrapper\n              key={surface.currentSurfaceId + \"-\" + surface.order}\n              imageUrl={imageUrl}\n              canvas={flcanvas}\n              coords={coords}\n              canvasShort={flcanvasShort}\n              text={text}\n              label={\"\"}\n              targetLabel={\"\"}\n              surfaceButton={false}\n              displayWidth={this.props.width}\n              lineFocusCoords={lineFocusCoords}\n              />\n            )\n          }\n          else {\n            return (<p key={surface.currentSurfaceId + \"-\" + surface.order}>Sorry, this image is not yet ready</p>)\n          }\n        }\n      else{\n        return <img key={surface.currentSurfaceId + \"-\" + surface.order} alt=\"manuscript\" src={surface.imageurl + \"/full/\" + this.props.width + \",/0/default.jpg\"}/>\n      }\n    }\n    return (\n      <Container className={this.props.hidden ? \"hidden\" : \"showing\"}>\n      {displayAllImages()}\n      <ImageLogo imageurl={this.state.surfaces[0] ? this.state.surfaces[0].imageurl : \"\"}/>\n      </Container>\n\n    );\n  }\n\n}\nSurface3.defaultProps = {\n  width: \"501\"\n};\n\nSurface3.propTypes = {\n  /**\n  * a string indicating desired width in pixels for image display\n  *\n  * TODO: it might be desireable to change propType to an integer. I'm not sure.\n  */\n  width: PropTypes.string,\n  /**\n  * manifestation id\n  */\n  manifestationid: PropTypes.string,\n  /**\n  * indicates what kind of display is desired, \"lines, paragraph, surface/null\"\n  */\n  annotationsDisplay: PropTypes.string\n}\n\nexport default Surface3;\n","import React from 'react';\nimport Surface3 from './Surface3';\nimport PropTypes from 'prop-types';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport { FaList, FaFile, FaParagraph} from 'react-icons/fa';\n\nimport {runQuery} from './utils'\nimport {basicInfoQuery} from './Queries'\n\n//TODO: surface 3 needs to run in a wrapper which allows the user to choose between manifestations.\n//TODO: rdf dbase needs to include first line numbers for paragraphs that start in the middle of al line.\n\nclass Surface3Wrapper extends React.Component {\n  constructor(props){\n    super(props)\n    this.handleChangeManifestation = this.handleChangeManifestation.bind(this)\n    this.handleToggleTextLinesView = this.handleToggleTextLinesView.bind(this)\n    this.handleSetCustomExpressionId = this.handleSetCustomExpressionId.bind(this)\n    this.handleGetCustomManifestations = this.handleGetCustomManifestations.bind(this)\n    this.handleChangeCustomManifestation = this.handleChangeCustomManifestation.bind(this)\n    this.state = {\n      focusedManifestation: \"\",\n      annotationsDisplay: \"lines\",\n      userAddedExpressionId: \"\",\n      userAddedManifestations: [],\n      focusedCustomManifestation: \"\"\n    }\n  }\n  handleChangeCustomManifestation(value){\n    this.setState({focusedCustomManifestation: value})\n  }\n  handleSetCustomExpressionId(value){\n    this.setState({userAddedExpressionId: value})\n  }\n  handleGetCustomManifestations(e){\n    e.preventDefault()\n    const results = runQuery(basicInfoQuery(this.state.userAddedExpressionId))\n    results.then((d) => {\n      const manifestations = d.data.results.bindings.map((b) => {\n        return {\n          manifestation: b.manifestation.value,\n          manifestationTitle: b.manifestationTitle.value,\n          transcription: b.manifestationCTranscription ? b.manifestationCTranscription.value : \"\"\n        }\n      })\n      this.setState({userAddedManifestations: manifestations, focusedCustomManifestation: d.data.results.bindings[0].cmanifestation.value})\n    })\n     \n\n  }\n\n  handleToggleTextLinesView(view){\n    //optional prop to allow parent container to reset default view prop\n    if (this.props.handleToggleTextLinesView){\n      this.props.handleToggleTextLinesView(view)\n    }\n    else{\n      this.setState((prevState) => {\n        return {annotationsDisplay: view}\n      })\n    }\n  }\n  handleChangeManifestation(e){\n    e.preventDefault()\n    //optional prop to allow parent container to reset default view prop\n    if (this.props.handleChangeManifestation){\n      this.props.handleChangeManifestation(e.target.value)\n    }\n    else{\n      this.setState({focusedManifestation: e.target.value})\n    }\n  }\n  componentDidMount(){\n    if (this.props.manifestations){\n      this.setState((prevState) => {\n        return {\n          focusedManifestation: this.props.focusedManifestation,\n          annotationsDisplay: this.props.annotationsDisplay,\n        }\n      })\n    }\n  }\n  // UNSAFE_componentWillReceiveProps(nextProps){\n  //   if (nextProps.focusedManifestation !== this.props.focusedManifestation){\n  //     this.setState((prevState) => {\n  //       return {\n  //         focusedManifestation: nextProps.focusedManifestation,\n  //       }\n  //     })\n  //   }\n  //   if (nextProps.annotationsDisplay !== this.props.annotationsDisplay){\n  //     this.setState((prevState) => {\n  //       return {\n  //         annotationsDisplay: nextProps.annotationsDisplay,\n  //       }\n  //     })\n  //   }\n  // }\n\n  //TODO: is passing of props to state necessary? settingDerivedState is not ideal\n  //thus there should be a good reason for setting a derived state. \n  // the goal here is to allow the component to update the state, but for \n  // the parent component to determine the default state. \n  // unless there is another way to do this, this seems like a sufficient justification for the derived state.\n  componentDidUpdate(prevProps){\n    if (this.props.focusedManifestation !== prevProps.focusedManifestation){\n      this.setState((prevState) => {\n        return {\n          focusedManifestation: this.props.focusedManifestation,\n        }\n      })\n    }\n    if (this.props.annotationsDisplay !== prevProps.annotationsDisplay){\n      this.setState((prevState) => {\n        return {\n          annotationsDisplay: this.props.annotationsDisplay,\n        }\n      })\n    }\n  }\n  render() {\n    const displayManifestationsList = () => {\n      const list = this.props.manifestations.map((m) => {\n        return <option key={\"title-\" + m.manifestation} value={m.manifestation}>{m.manifestationTitle}</option>\n      })\n      return list\n    }\n    const displayManifestation = () => {\n      const manifestation = this.props.manifestations.map((m) => {\n        if (m.manifestation === this.state.focusedManifestation){\n          return <Surface3 key={\"surface-\" + m.manifestation} \n          manifestationid={m.manifestation} \n          annotationsDisplay={this.state.annotationsDisplay} \n          width={this.props.width}\n          lineFocusId={this.props.lineFocusId}/>\n        }\n        else{\n          return null\n        }\n      })\n      return manifestation\n\n    }\n\n    return (\n      <div className={this.props.hidden ? \"hidden\" : \"showing\"}>\n        {!this.props.hideSelectionList &&\n        <div className=\"manifestationsList\">\n          <Form.Control size=\"sm\" as=\"select\" onChange={this.handleChangeManifestation} value={this.state.focusedManifestation}>\n            {displayManifestationsList()}\n          </Form.Control>\n        </div>\n        }\n        <div className=\"surfaceWrapper\">\n          {!this.props.hideDisplayChoice && this.state.focusedManifestation &&\n            <div className=\"image-display-choice\">\n              <p><span title=\"Text Line View\" onClick={() => {this.handleToggleTextLinesView(\"lines\")}}><FaList/></span></p>\n              <p><span title=\"Paragraph View\" onClick={() => {this.handleToggleTextLinesView(\"paragraph\")}}><FaParagraph/></span></p>\n              <p><span title=\"Full Surface View\" onClick={() => {this.handleToggleTextLinesView(\"surface\")}}><FaFile/></span></p>\n            </div>\n          }\n          <div className=\"imagesDisplay\">\n            {displayManifestation()}\n          </div>\n        </div>\n        \n        {\n          this.state.userAddedManifestations.length > 0 && \n          <Surface3Wrapper \n            manifestations={this.state.userAddedManifestations}\n            focusedManifestation={this.state.focusedCustomManifestation}\n            annotationsDisplay={this.state.annotationsDisplay}\n            handleToggleTextLinesView={this.props.handleToggleTextLinesView}\n            handleChangeManifestation={this.handleChangeCustomManifestation}\n            width={this.props.width}\n            lineFocusId={\"\"}\n            hidden={false}\n            isDependentSurface3={true}/>\n        }\n        {!this.props.isDependentSurface3 &&\n        <div style={{\"borderBottom\": \"1px solid rgba(0, 0, 0, 0.1)\", \"borderTop\": \"1px solid rgba(0, 0, 0, 0.1)\", marginTop: \"5px\", padding: \"5px\"}} >\n          <p style={{fontSize: \"12px\"}}>Create custom user compare</p>\n          <Form onSubmit={this.handleGetCustomManifestations} inline> \n            <FormControl inline=\"true\" size=\"sm\" id=\"text\" type=\"text\" value={this.state.userAddedExpressionId} placeholder=\"expression id\" className=\"mr-sm-2\" onChange={(e) => {this.handleSetCustomExpressionId(e.target.value)}}/>\n            <Button inline=\"true\" size=\"sm\"  type=\"submit\" style={{margin: \"2px\"}}>Submit</Button>\n          </Form>\n        </div>\n        }\n\n      </div>\n    );\n  }\n}\n\nSurface3Wrapper.defaultProps = {\n  manifestations: [],\n  hidden: false,\n  focusedManifestation: \"\",\n  annotationsDisplay: \"paragraph\",\n  width: \"500\"\n};\n\nSurface3Wrapper.propTypes = {\n  /**\n  * an array of manifestation ids\n  */\n  manifestations: PropTypes.array,\n  /**\n  * boolean indicating whether or not compoment should be mounted by still hidden\n  */\n  hidden: PropTypes.bool,\n  /**\n  * indicates on which manifestation component to default focus.\n  * manifestation value MUST be included in manifestations array\n  */\n  focusedManifestation: PropTypes.string,\n  /**\n  * indicates what kind of display is desired, \"lines, paragraph, surface/null\"\n  */\n\n  annotationsDisplay: PropTypes.string,\n  /**\n  * optional prop to allow parent container to reset default view prop\n  */\n  handleToggleTextLinesView: PropTypes.func,\n  /**\n  * desired image width\n  */\n  width: PropTypes.string\n}\n\nexport default Surface3Wrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Axios from 'axios'\nimport { Light as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { docco } from 'react-syntax-highlighter/dist/cjs/styles/hljs';\n/**\n* XML view show component\n**/\nclass XmlView extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.mount = false\n    this.retrieveXML = this.retrieveXML.bind(this)\n    this.state = {\n      xmlstring: \"\"\n    }\n  }\n  retrieveXML(tresourceid){\n    const xmlurl = \"https://exist.scta.info/exist/apps/scta-app/document/\" + tresourceid.split(\"/resource/\")[1]\n    Axios.get(xmlurl).then((d) => {\n      if (this.mount){\n        this.setState({xmlstring: d.data})\n      }\n    })\n\n  }\n  componentDidMount(){\n    this.mount = true\n    //condition to make sure tresourceid is defined before trying to parse and retrieve\n    // though this should never since tresourceid is a required prop\n    if (this.props.tresourceid){\n      this.retrieveXML(this.props.tresourceid)\n    }\n\n  }\n  componentDidUpdate(prevProps){\n    if (this.props.tresourceid !== prevProps.tresourceid){\n      this.retrieveXML(this.props.tresourceid)\n    }\n  }\n  componentWillUnmount(){\n    this.mount = false\n  }\n\n  render(){\n    return (\n      <div className={this.props.hidden ? \"hidden\" : \"showing\"}>\n      <SyntaxHighlighter language=\"xml\" style={docco} showLineNumbers>\n        {this.state.xmlstring}\n      </SyntaxHighlighter>\n      </div>\n    )\n  }\n}\n\nXmlView.propTypes = {\n  /**\n  * transcription resource id of transcription for desired xml view\n  *\n  * TODO: Component is currently splitting the id and constructing the xml based\n  * on a prior knowledge of where xml is; this really should be retrieved from the resource id\n  * but the xml look up should happen outside of the XmlView Component in order to keep this component simple\n  * and making only request directly to the xml file\n  */\n  tresourceid: PropTypes.string.isRequired,\n  /**\n  * hidden designates whether the component should be hidden after mounting\n  */\n  hidden: PropTypes.bool,\n}\nexport default XmlView;\n","import React from 'react';\nimport Nav from 'react-bootstrap/Nav';\n\nimport {FaRegWindowRestore, FaRegWindowMaximize, FaRegWindowMinimize, FaRegWindowClose, FaClone} from 'react-icons/fa';\n// reimport these if you want to use the change window location functions: FaAngleDoubleDown, FaAngleDoubleLeft,\n\nfunction WindowNavBar(props) {\n  const displayTabs = () => {\n    const tabs = props.availableTabs && props.availableTabs.map((t, idx) => {\n      if (t.show){\n        return (\n          <Nav.Item key={\"tab-\" + t.name}>\n            <Nav.Link active={props.windowLoad === t.name} title={t.description} onClick={() => {props.handleTabChange(t.name, props.windowId)}}>{t.icon}</Nav.Link>\n          </Nav.Item>\n        )\n      }\n      else{\n        return null\n      }\n    })\n    return tabs\n  }\n  return (\n  <Nav variant=\"tabs\">\n    {displayTabs()}\n  \n\n  {props.openWidthHeight !== \"minimum\" &&\n  <Nav.Item>\n    <Nav.Link title=\"Minimize Window\" onClick={() => {props.handleMinimize(props.windowId)}}><FaRegWindowMinimize/></Nav.Link>\n  </Nav.Item>}\n  {props.openWidthHeight !== \"middle\" &&\n  <Nav.Item>\n    <Nav.Link title=\"Half Size Window\" onClick={() => {props.handleMiddlize(props.windowId)}}><FaRegWindowRestore/></Nav.Link>\n  </Nav.Item>\n  }\n  {props.openWidthHeight !== \"maximum\" &&\n  <Nav.Item>\n    <Nav.Link title=\"Maximize Window\" onClick={() => {props.handleMaximize(props.windowId)}}><FaRegWindowMaximize/></Nav.Link>\n  </Nav.Item>\n  }\n  {props.windowId !== \"window1\"\n  &&\n  <Nav.Item>\n    <Nav.Link title=\"Close Window\" onClick={() => {props.handleClose(props.windowId)}}><FaRegWindowClose/></Nav.Link>\n  </Nav.Item>\n  }\n  {/* commented to prevent window moving; this insures window 1 is always side window and window 2 is bottom window\n    uncomment if this behavior is desired\n    <Nav.Item>\n    <Nav.Link title=\"Move Window\" onClick={() => {props.handleSwitchWindow(props.windowId, props.windowType)}}>{props.windowType === \"sideWindow\" ? <FaAngleDoubleDown/> : <FaAngleDoubleLeft/>}</Nav.Link>\n  </Nav.Item>\n  */\n  }\n  <Nav.Item>\n    {!props.altWindowState && <Nav.Link title=\"Clone Window\" onClick={() => {props.handleDuplicateWindow(props.windowId, props.windowType)}}>{<FaClone/>}</Nav.Link>}\n  </Nav.Item>\n\n\n</Nav>\n\n  );\n}\n\nexport default WindowNavBar;\n","import React from 'react';\n\nimport { FaAngleLeft, FaAngleRight, FaAngleUp} from 'react-icons/fa';\nimport Nav from 'react-bootstrap/Nav';\n\nfunction NextPrevBar(props) {\n  const handleUpArrow = () => {\n    if (props.selectionRange && props.selectionRange.wordRange){\n      props.handleBlockFocusChange(props.info.resourceid)\n    }\n    else{\n      props.handleBlockFocusChange(props.info.parent)\n    }\n  }\n  const getTitle = () => {\n    if (props.selectionRange && props.selectionRange.wordRange){\n      return props.info.title + \"@\" + props.selectionRange.wordRange.start + \"-\" + props.selectionRange.wordRange.end\n    }\n    else{\n      return props.info.title\n    }\n  }\n  const displayNextPrevBar = () => {\n    if (props.info){\n      return (\n        <Nav variant=\"tabs\">\n        <Nav.Link onClick={() => {props.handleBlockFocusChange(props.info.resourceid)}}>{getTitle()}</Nav.Link>\n        <Nav.Item>\n          {(props.info.previous && props.info.previous !== \"http://scta.info/resource/\")  && <Nav.Link title=\"Move Up to Previous Sibling Resource\" onClick={() => {props.handleBlockFocusChange(props.info.previous)}}><FaAngleLeft/></Nav.Link>}\n        </Nav.Item>\n        <Nav.Item>\n          {(props.info.next && props.info.next !== \"http://scta.info/resource/\") && <Nav.Link title=\"Move Up to Next Sibling Resource\" onClick={() => {props.handleBlockFocusChange(props.info.next)}}><FaAngleRight/></Nav.Link>}\n        </Nav.Item>\n        <Nav.Item>\n          {(props.info.resourceid !== props.info.topLevel) && (props.info.parent !== \"http://scta.info/resource/\") \n          && <Nav.Link title=\"Move Up to Parent Resource\" onClick={handleUpArrow}><FaAngleUp/></Nav.Link>}\n        </Nav.Item>\n        </Nav>\n      )\n    }\n    else{\n      return null\n    }\n  }\n  return (\n    displayNextPrevBar()\n  );\n}\n\nexport default NextPrevBar;\n","import React from 'react';\nimport Diff from 'diff-match-patch'\nimport Axios from 'axios'\nimport PropTypes from 'prop-types';\n\nimport Spinner from './Spinner';\nimport {Link} from 'react-router-dom';\nimport { FaEyeSlash, FaEye, FaStar, FaToggleOn, FaToggleOff, FaRegImage} from 'react-icons/fa';\n\nimport {textReduce} from './utils'\n\nimport Surface3Wrapper from './Surface3Wrapper'\n\nclass TextCompareItem extends React.Component {\n  constructor(props){\n    super(props)\n    this.handleToggleShow = this.handleToggleShow.bind(this)\n    this.handleToggleCompare = this.handleToggleCompare.bind(this)\n    this.mounted = \"\"\n    this.state = {\n      showCompare: false,\n      compareText: \"\",\n      rawText: \"\",\n      show: true,\n      levenshteinDistance: undefined, \n      usedBase: undefined,\n      usedCompareTranscription: undefined\n    }\n  }\n  handleToggleShow(){\n    this.setState((prevState) => {\n      return{\n        show: !prevState.show\n      }\n    })\n  }\n  handleToggleCompare(){\n    this.setState((prevState) => {\n      return{\n        showCompare: !prevState.showCompare\n      }\n    })\n  }\n  textClean(text){\n    const punctuationless = text.replace(/[.,/#!$%^&*;:{}=\\-_`~()]/g,\"\");\n    const finalString = punctuationless.replace(/\\s{2,}/g,\" \");\n    const finalFinalString = finalString.toLowerCase()\n    return finalFinalString\n\n  }\n\n  \n  createCompare(base, transcription){\n    Axios.get(\"https://exist.scta.info/exist/apps/scta-app/csv-pct.xq?resourceid=\" + transcription)\n          .then((text) => {\n            let reducedText = text.data;\n            if (this.props.isMainText && this.props.targetRange){\n              reducedText = textReduce(text.data, this.props.targetRange)\n            }\n            // this conditional should exclude most relations (or relations initated by a structureElement type)\n            else if (this.props.relationLabel === 'isQuotedBy' || this.props.relationLabel === 'isReferencedBy'){\n              reducedText = text.data\n            }\n            else if (this.props.isRelatedToRange){\n              reducedText = textReduce(text.data, this.props.isRelatedToRange)\n            }\n            //function needed for word level comparison\n            //see https://github.com/google/diff-match-patch/wiki/Line-or-Word-Diffs\n            // also required for of npm google-diff-patch and then added function wordsToChars_()\n            const diff_wordMode = (text1, text2, dmp) => {\n              //var dmp = new Diff.diff_match_patch();\n              var a = dmp.diff_wordsToChars_(text1, text2);\n              var lineText1 = a.chars1;\n              var lineText2 = a.chars2;\n              var lineArray = a.lineArray;\n              var diffs = dmp.diff_main(lineText1, lineText2, false);\n              dmp.diff_charsToLines_(diffs, lineArray);\n              return diffs;\n            }\n\n            const dmp = new Diff.diff_match_patch();\n\n            //NOTE: uncomment below if you want to switch back to character level diff\n            //const diff = dmp.diff_main(this.textClean(base), this.textClean(text.data)); //character level diff\n            const diff = diff_wordMode(this.textClean(base), this.textClean(reducedText), dmp) // word level diff\n            // Result: [(-1, \"Hell\"), (1, \"G\"), (0, \"o\"), (1, \"odbye\"), (0, \" World.\")]\n            dmp.diff_cleanupSemantic(diff);\n            const levenshteinDistance = dmp.diff_levenshtein(diff)\n            const ds = dmp.diff_prettyHtml(diff);\n            if (this.mounted === true && base){\n              // TODO: setting showCompare to \"derivedState\" is an ANTI-PATTERN. Better would be to let it be entirely controlled by parent. \n              // NOTE: usedBase and usedCompare transcription are used to record data used to make compare \n              // so that componentDidUpdate can efficiently decide if a new comparison is or is not needed\n              this.setState({compareText: ds, rawText: reducedText, levenshteinDistance: levenshteinDistance, showCompare: this.props.showCompare, \n                usedBase: this.props.base, usedCompareTranscription: this.props.compareTranscription})\n            }\n            else if(this.mounted){\n              // TODO: setting showCompare to \"derivedState\" is an ANTI-PATTERN. Better would be to let it be entirely controlled by parent.\n              // NOTE: usedBase and usedCompare transcription are used to record data used to make compare \n              // so that componentDidUpdate can efficiently decide if a new comparison is or is not needed\n              this.setState({rawText: reducedText, showCompare: this.props.showCompare, \n                usedBase: this.props.base, usedCompareTranscription: this.props.compareTranscription})\n            }\n          }).catch((error) => {\n            console.log(\"text request/comparison error\", error)\n          })\n        }\n\n  componentDidMount(){\n    this.mounted = true;\n    // TODO: setting showCompare to \"derivedState\" is an ANTI-PATTERN. Better would be to let it be entirely controlled by parent.\n    this.setState({rawText: \"\", compareText: \"\", showCompare: this.props.showCompare})  \n    //conditional attempts to restrict async call to only those components who are intended to be visible at mount\n    // NOTE: this conditional will important when scaling. (i.e. when there hundres of references and hundreds of transcriptons)\n    if (this.props.show){\n      this.createCompare(this.props.base, this.props.compareTranscription)\n    }\n  }\n\n  componentDidUpdate(prevProps){\n    // NOTE: conditional attempts to restrict async call to only those components who are intended to be visible \n    // and for whom a previous comparison has not been made or needs to be changed.\n    // need for generation of new comparison is detected by comparing props base and props compare transcription \n    //to base/compare transcription used in previous comparison (or lack there of)\n    // NOTE: this conditional will important when scaling. (i.e. when there are hundreds of references and hundreds of transcriptions)\n    if (this.props.show && \n      (\n        // NOTE: check to see if the current props base/compareTranscription is different than one the last base/compareTranscription when comparison was ran. \n        // If it is different, then re-run compare. If not, don't run because the comparison has already been made.\n        (this.props.base !== this.state.usedBase || this.props.compareTranscription !== this.state.usedCompareTranscription))\n      )\n      {\n        this.createCompare(this.props.base, this.props.compareTranscription)\n      }\n\n  }\n\n\n\n  componentWillUnmount(){\n      this.mounted = false;\n    }\n\n\n  render(){\n    \n\n    const displayImage = () => {\n      const newManifestations = [{\n        manifestation: this.props.manifestation,\n        manifestationTitle: this.props.manifestationTitle,\n        transcription: \"\"\n      }]\n      return (\n            <div>\n              <span onClick={() => {this.setState((prevState)=> {return({showImage: !prevState.showImage})})}}><FaRegImage/></span> \n              {this.state.showImage &&\n                <div>\n                  <Surface3Wrapper\n                  manifestations={newManifestations}\n                  focusedManifestation={this.props.manifestation}\n                  width={this.props.surfaceWidth}\n                  hideSelectionList={true}\n                  isDependentSurface3={true}\n                />\n                </div>\n                }\n            </div>\n      )\n\n    }\n\n    const displayComparison = () => {\n      const isBase = this.props.base === this.state.rawText\n      if (this.state.showCompare && this.props.base && this.state.compareText){\n        const levenNum = this.state.levenshteinDistance\n        const heatColor = levenNum * 5\n        return (\n          <div style={{borderLeft: \"5px solid rgba(\" + heatColor + \", 0, 255, 1)\", paddingLeft: \"5px\"}}>\n            <span><Link to={\"/text?resourceid=\" + this.props.compareTranscription + ((this.props.relationLabel !== \"isQuotedBy\" && this.props.relationLabel !== \"isReferencedBy\" && this.props.isRelatedToRange) ? \"@\" + this.props.isRelatedToRange : \"\")}>{this.props.manifestationTitle}</Link> </span>\n            <span className=\"lbp-span-link\" title=\"show/hide\" onClick={() => this.handleToggleShow()}>{this.state.show ? <FaEyeSlash/> : <FaEye/>}</span>\n            <span className=\"lbp-span-link\" title=\"toggle comparison off\" onClick={() => this.handleToggleCompare()}><FaToggleOn/></span>\n            {!isBase && <span className=\"lbp-span-link\" title=\"set as base\" onClick={() => this.props.handleChangeBase(this.state.rawText)}><FaStar/></span>}\n            <span style={{fontSize: \"14px\", paddingLeft: \"4px\"}} title=\"levenshtein distance\">{levenNum}</span>\n            <div className={this.state.show ? \"unhidden\" : \"hidden\"}>\n              <div ref=\"text\" dangerouslySetInnerHTML={{ __html: this.state.compareText}}></div>\n              {displayImage()}\n\n            </div>\n          </div>\n        )\n      }\n      else if (this.state.rawText){\n        \n        return (\n          <div>\n            <span><Link to={\"/text?resourceid=\" + this.props.compareTranscription + ((this.props.relationLabel !== \"isQuotedBy\" && this.props.relationLabel !== \"isReferencedBy\" && this.props.isRelatedToRange) ? \"@\" + this.props.isRelatedToRange : \"\")}>{this.props.manifestationTitle}</Link></span> |\n            <span className=\"lbp-span-link\" title=\"show/hide\" onClick={() => this.handleToggleShow()}>{this.state.show ? <FaEyeSlash/> : <FaEye/>}</span>\n            <span className=\"lbp-span-link\" title=\"toggle comparison on\" onClick={() => this.handleToggleCompare()}><FaToggleOff/></span>\n            {!isBase && <span className=\"lbp-span-link\" title=\"set as base\" onClick={() => this.props.handleChangeBase(this.state.rawText)}><FaStar/></span>}\n\n            <div className={this.state.show ? \"unhidden\" : \"hidden\"}>\n              <div ref=\"text\" dangerouslySetInnerHTML={{ __html: this.state.rawText}}></div>\n              {displayImage()}\n            </div>\n          </div>\n        )\n      }\n      else{\n        return <Spinner/>\n      }\n    }\n\n    return (\n      displayComparison()\n    );\n  }\n}\n\nTextCompareItem.propTypes = {\n  /**\n  * text comparison component\n  **/\n  base: PropTypes.string, // base text to perform comparison against\n  compareTranscription: PropTypes.string, // transcription id of text to be used in comparison against base text\n  handleChangeBase: PropTypes.func, // function to trigger base text change\n  show: PropTypes.bool, // boolean to state whether text should be shown. TODO: currently competing with derivedState \"show\", needs to be resolved\n  showCompare: PropTypes.bool //boolean to state whether should be shown with comparison markup. TODO: currently competing with derivedState \"showCompare\" needs to be resolved\n}\n\nexport default TextCompareItem;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport { FaEyeSlash, FaEye } from 'react-icons/fa';\n\nimport {runQuery} from './utils'\nimport {basicInfoQuery} from './Queries'\nimport TextCompareItem from './TextCompareItem'\n\nclass TextCompare extends React.Component {\n  constructor(props){\n    super(props)\n    this.handleToggleShowAll = this.handleToggleShowAll.bind(this)\n    this.mounted = \"\"\n    this.state = {\n      info: \"\",\n      show: false,\n      baseText: \"\"\n    }\n  }\n\n  handleToggleShowAll(){\n    this.setState((prevState) => {\n      return{\n        show: !prevState.show\n      }\n    })\n  }\n\n  // TODO dupblicate of function in Text Component\n  // needs refactoring\n  arrangeTextInfo(info, resourceid){\n    info.then((d) => {\n      const bindings = d.data.results.bindings[0]\n      const manifestations = d.data.results.bindings.map((b) => {\n        return {\n          manifestation: b.manifestation.value,\n          manifestationTitle: b.manifestationTitle.value,\n          transcription: b.manifestationCTranscription ? b.manifestationCTranscription.value : \"\"\n        }\n      })\n      if (this.mounted === true && bindings){\n        this.setState({\n          info: {\n            resourceid: resourceid,\n            title: bindings.title.value,\n            structureType: bindings.structureType.value,\n            inbox: bindings.inbox.value,\n            next: bindings.next ? bindings.next.value : \"\",\n            previous: bindings.previous ? bindings.previous.value : \"\",\n            cdoc: bindings.cdoc ? bindings.cdoc.value : \"\",\n            cxml: bindings.cxml ? bindings.cxml.value : \"\",\n            topLevel: bindings.topLevelExpression.value,\n            cmanifestation: bindings.cmanifestation ? bindings.cmanifestation.value : \"\",\n            ctranscription: bindings.ctranscription ? bindings.ctranscription.value : \"\",\n            manifestations: manifestations\n          }\n        });\n      }\n    });\n  }\n  getTextInfo(id){\n    const info = runQuery(basicInfoQuery(id))\n    this.arrangeTextInfo(info, id)\n  }\n  componentDidMount(){\n    this.mounted = true;\n    //TODO: setting \"derivative state\" here is an anti-pattern\n    //instead this should probably be controlled by parent \n    //(handleToggleShowAll should probably change parent which would then pass down the required prop rather than setting prop to state)\n    this.setState({show: this.props.show})\n    //NOTE: this conditional, does set prop to state, but there is a reason. \n    // the point is that the information has already been achieved, thus we save one async call by using props. \n    // otherwise an async request is called.\n    // I think the \"derivate state is acceptable in this case\"\n    if (this.props.isMainText){\n      this.setState({info: this.props.info})\n    }\n    else{\n      this.getTextInfo(this.props.expressionid)\n    }\n  }\n  componentDidUpdate(prevProps){\n    // conditional try to restrict new async calls to only when props.info changes\n    if ((this.props.info.resourceid !== prevProps.info.resourceid) || (this.props.info.relatedExpressions !== prevProps.info.relatedExpressions)){\n      if (this.props.isMainText){\n        this.setState({info: this.props.info})\n      }\n      else{\n        this.getTextInfo(this.props.expressionid)\n      }\n    }\n  }\n  componentWillUnmount(){\n    this.mounted = false;\n  }\n  render(){\n    const displayComparisons = () => {\n      // NOTE: this conditional here to stop attempt to display text manifestation texts at the collection level\n      // collection level is usually just too big to be useful. \n      if (this.props.isMainText && this.props.info.structureType === \"http://scta.info/resource/structureCollection\"){\n        return <p>Text too big to display; move down the text hierarchy to focus on a smaller section</p>\n      }\n      else if (this.state.info.manifestations){\n        const texts = this.state.info.manifestations.map((m) => {\n          return (\n            <TextCompareItem\n            key={m.transcription}\n            base={this.props.baseText}\n            compareTranscription={m.transcription}\n            manifestationTitle={m.manifestationTitle}\n            manifestation={m.manifestation}\n            handleChangeBase={this.props.handleChangeBase}\n            show={this.state.show}\n            showCompare={this.props.isMainText ? true : false}\n            surfaceWidth={this.props.surfaceWidth}\n            isRelatedToRange={this.props.isRelatedToRange}\n            targetRange={this.props.targetRange}\n            isMainText={this.props.isMainText}\n            relationLabel={this.props.relationLabel}\n            />\n          )\n        })\n        return texts\n      }\n    }\n  return (\n    <div style={{\"borderBottom\": \"1px solid rgba(0, 0, 0, 0.1)\", padding: \"5px\"}}>\n      {\n        // the link to reroute is not quite working, because the base Text is not resetting, focusBlockChange might be better; but item structure will also need to be changed.\n      }\n      \n      <div style={{fontSize: \"12px\"}}>\n        {this.props.isMainText && <span>[Target] </span>}\n        <span>{this.props.relationLabel}</span> \n        {(this.props.referringResource && this.props.referringResource !== this.props.info.resourceid) \n        && <span> (<Link to={\"/text?resourceid=\" + this.props.referringResource}>via</Link>)</span>}\n      </div>\n      <div>\n        {this.state.info.resourceid ?\n        <Link to={\"/text?resourceid=\" + this.state.info.resourceid + ((this.props.relationLabel !== \"isQuotedBy\" && this.props.relationLabel !== \"isReferencedBy\" && this.props.isRelatedToRange) ? \"@\" + this.props.isRelatedToRange : \"\")}>\n          {this.props.authorTitle || this.props.longTitle ? <span> {this.props.authorTitle} {this.props.longTitle}</span> : this.state.info.resourceid}\n        </Link> :\n        this.props.authorTitle || this.props.longTitle ? <span> {this.props.authorTitle} {this.props.longTitle}</span> : this.state.info.resourceid\n        }\n        {this.state.info.resourceid && <span onClick={() => this.handleToggleShowAll()}>{this.state.show ? <FaEyeSlash/> : <FaEye/>}</span>}\n      </div>\n      <div className={this.state.show ? \"unhidden\" : \"hidden\"} style={{\"paddingLeft\": \"10px\"}}>\n        {displayComparisons()}\n      </div>\n    </div>\n    );\n  }\n}\nexport default TextCompare;\n","import React, {useState, useEffect} from 'react';\n\nimport TextCompare from './TextCompare'\nimport Spinner from './Spinner'\nimport {ngramRelatedQuery} from '../queries/ngramRelatedQuery'\nimport {runNgramQuery} from '../queries/ngramRelatedQuery'\n\n/**\n * \n * A comment wrapper for submitting comments to local storage test\n * @public\n */\n\nfunction NgramDisplay(props) {\n  const [relatedExpressions, setRelatedExpressions] = useState([])\n  const [scoreMinimumInput, setScoreMinimumInput] = useState(\".02\")\n  const [scoreMinimumUse, setScoreMinimumUse] = useState(\".02\")\n  useEffect(() => {\n    const ngramRelated = runNgramQuery(ngramRelatedQuery(props.resourceid, scoreMinimumUse));\n    const expressions = [];\n    ngramRelated.then((d) => {\n      const bindings = d.data.results.bindings\n      bindings.forEach((r) => {\n        expressions.push({\n          id: r.other.value,\n          relationLabel: \"ngram: \" + r.text.value,\n          referringResource: \"\",\n          author: \"\",\n          authorTitle: \"\",\n          longTitle: \"\",\n          show: false,\n          isRelatedToRange: \"\"\n        })\n      })\n      setRelatedExpressions(expressions)\n    })\n    \n  }, [props.resourceid, scoreMinimumUse])\n  \n  const displayExpressions = () => {\n    const displayExpressions = relatedExpressions.map((i, index) => {\n      return (\n      <div key={index + \"-ngram-\" + i.id}>\n            {<TextCompare\n              info={props.info}\n              expressionid={i.id}\n              relationLabel={i.relationLabel}\n              referringResource={i.referringResource}\n              author={i.author}\n              authorTitle={i.authorTitle}\n              longTitle={i.longTitle}\n              isMainText={false}\n              handleChangeBase={props.handleChangeBase}\n              baseText={props.baseText}\n              show={i.show}\n              surfaceWidth={props.surfaceWidth}\n              isRelatedToRange={i.isRelatedToRange}\n            />}\n          </div>\n          )\n    })\n    return displayExpressions\n  }\n  return(\n    <div>\n      \n      <input type=\"text\" value={scoreMinimumInput} onChange={(e) => setScoreMinimumInput(e.target.value)}></input>\n      <button onClick={() => {setScoreMinimumUse(scoreMinimumInput)}}>Re-run Query with new minimum</button>\n\n      \n      {relatedExpressions === \"retrieving\" ? <Spinner/> : displayExpressions()}\n    </div>\n  )\n}\nexport default NgramDisplay;","import Axios from 'axios'\n\nexport function ngramRelatedQuery(id, cosineScoreLimit = \".05\"){\n  const query = [\n    \"SELECT ?s ?start ?other ?text ?cosineScore \",\n      \"WHERE {\",\n        \"BIND (<\" + id + \"> as ?start) . \",\n        \"{\",\n        \"?s <http://www.w3.org/ns/oa#hasSource> ?start .\",\n        \"?s <http://www.w3.org/ns/oa#hasTarget> ?other .\",\n        \"?s <http://www.w3.org/ns/oa#hasBody> ?bn .\",\n        \"?bn <http://www.w3.org/1999/02/22-rdf-syntax-ns#value> ?text .\",\n        \"}\",\n        \"UNION\",\n        \"{\",\n        \"?s <http://www.w3.org/ns/oa#hasSource> ?other .\",\n        \"?s <http://www.w3.org/ns/oa#hasTarget> ?start . \",\n        \"?s <http://www.w3.org/ns/oa#hasBody> ?bn .\",\n        \"?bn <http://www.w3.org/1999/02/22-rdf-syntax-ns#value> ?text .\",\n        \"}\",\n        \"?s <http://scta.info/property/cosineScore> ?cosineScore .\" ,\n        \"FILTER (?cosineScore >= \" + cosineScoreLimit + \") \",\n      \"}\",\n      \"ORDER BY DESC(?cosineScore) \",\n      \"LIMIT 100\"].join(' ')\n return query\n}\n\nexport function runNgramQuery(query){\n  const sparqlEndpoint = \"http://localhost:3030/ds/query\"\n  const queryPromise = Axios.get(sparqlEndpoint, { params: { \"query\": query, \"output\": \"json\" } })\n  return queryPromise\n}","import React from 'react';\nimport Axios from 'axios'\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport TextCompare from './TextCompare'\nimport NgramDisplay from './NgramDisplay'\n\nimport { runQuery } from './utils'\nimport { getRelatedExpressions } from './Queries'\nimport {textReduce} from './utils'\n\nclass TextCompareWrapper extends React.Component {\n  constructor(props) {\n    super(props)\n    this.handleToggleCompare = this.handleToggleCompare.bind(this)\n    this.handleChangeBase = this.handleChangeBase.bind(this)\n    this.handleCustomUpdateRelatedExpressions = this.handleCustomUpdateRelatedExpressions.bind(this)\n    this.handleSetCustomExpressionId = this.handleSetCustomExpressionId.bind(this)\n    this.getText = this.getText.bind(this)\n    this.mounted = \"\"\n    this.state = {\n      expressions: [],\n      page: 1,\n      intendedPage: 1,\n      pagesize: 10,\n      nextPage: 2,\n      previousPage: undefined,\n      offset: 0,\n      rangeStart: 1,\n      rangeEnd: 20,\n      baseText: \"\",\n      customExpressionId: \"\",\n      customExpressionObject: {}\n    }\n\n  }\n  handleSetCustomExpressionId(customExpressionId) {\n    this.setState({ customExpressionId: customExpressionId })\n  }\n  handleCustomUpdateRelatedExpressions(e) {\n    e.preventDefault()\n    const expressionObject = {\n      resourceid: this.state.customExpressionId,\n      relationLabel: \"user added comparison\"\n    }\n    this.setState({ customExpressionObject: expressionObject })\n  }\n  handleChangeBase(rawText) {\n    this.setState({ baseText: rawText })\n  }\n  //TODO: Doesn't seem to be called; should be deleted\n  handleToggleCompare(expressionid) {\n    this.setState((prevState) => {\n      const newExpressions = { ...prevState.expressions }\n      newExpressions[expressionid].show = !newExpressions[expressionid].show\n      return {\n        expressions: newExpressions\n      }\n    })\n  }\n  getText(ctranscription) {\n    const _this = this;\n    Axios.get(\"https://exist.scta.info/exist/apps/scta-app/csv-pct.xq?resourceid=\" + ctranscription)\n      .then((text) => {\n        if (this.mounted) {\n          let reducedText = text.data;\n            if (this.props.selectionRange.wordRange){\n              const wordRange = _this.props.selectionRange.wordRange.start + \"-\" + _this.props.selectionRange.wordRange.end\n              reducedText = textReduce(text.data, wordRange)\n            }\n          _this.setState({ baseText: reducedText })\n        }\n      })\n  }\n  /**\n   * @description initiates sparql requests and parses initial results.\n   * @param {string} resourceid - scta url for expression object\n   * @param {integer} page - page to start on in paging results\n   * @param {integer} pagesize - length of page results\n   */\n  getRelatedExpressions(resourceid, page, pagesize) {\n    const offset = (page - 1) * pagesize\n    const rangeStart = (this.props.selectionRange && this.props.selectionRange.wordRange) ? this.props.selectionRange.wordRange.start : \"\" ;\n    const rangeEnd = (this.props.selectionRange && this.props.selectionRange.wordRange) ? this.props.selectionRange.wordRange.end : \"\";\n    const relatedExpressions = runQuery(getRelatedExpressions(resourceid, offset, pagesize, rangeStart, rangeEnd))\n    relatedExpressions.then((d) => {\n      const bindings2 = d.data.results.bindings\n      const expressions = []\n      // if target resource is NOT structureCollect, \n      // then add first object which should be compare item for first/target resource\n      \n        expressions.push({\n          id: this.props.info.resourceid,\n          authorTitle: this.props.info.authorTitle,\n          longTitle: this.props.info.longTitle,\n          show: false\n        });\n      //arrange sparql results into an object with resourceids as keys\n      bindings2.forEach((r) => {\n        expressions.push({\n          id: r.isRelatedTo.value,\n          relationLabel: r.label.value,\n          referringResource: r.element ? r.element.value : \"\",\n          author: r.author ? r.author.value : \"\",\n          authorTitle: r.authorTitle ? r.authorTitle.value : \"\",\n          longTitle: r.longTitle ? r.longTitle.value : \"\",\n          show: false,\n          isRelatedToRange: r.isRelatedToRangeStart && r.isRelatedToRangeEnd ? r.isRelatedToRangeStart.value + '-' + r.isRelatedToRangeEnd.value : \"\"\n        })\n      })\n      // set state with new related expressions results and updates to paging information\n      if (this.mounted) {\n      this.setState({\n        expressions: expressions,\n        intendedPage: page,\n        nextPage: page + 1,\n        previousPage: page > 1 ? page - 1 : undefined,\n        offset: (page - 1) * pagesize,\n        rangeStart: ((page - 1) * pagesize) + 1,\n        rangeEnd: pagesize * page\n      })\n      }\n    })\n  }\n  componentDidMount() {\n    this.mounted = true\n    if (this.props.info) {\n      this.getRelatedExpressions(this.props.info.resourceid, this.state.page, this.state.pagesize)\n      if (this.props.info.structureType !== \"http://scta.info/resource/structureCollection\"){\n        this.getText(this.props.info.ctranscription)\n      }\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    // if resource id changes or results paging, then perform new query\n    if (prevProps.info.resourceid !== this.props.info.resourceid || prevState.page !== this.state.page || prevProps.selectionRange !== this.props.selectionRange) {\n      const startPage = prevProps.info.resourceid !== this.props.info.resourceid ? 1 : this.state.page\n      this.getRelatedExpressions(this.props.info.resourceid, startPage, this.state.pagesize)\n      if (this.props.info.structureType !== \"http://scta.info/resource/structureCollection\"){\n        this.getText(this.props.info.ctranscription)\n      }\n    }\n    // if a custom object has been added; add custom object to state.expressions\n    if (prevState.customExpressionObject !== this.state.customExpressionObject) {\n      const r = this.state.customExpressionObject\n      const newExpression = {\n        id: r.resourceid,\n        relationLabel: r.relationLabel,\n      }\n      this.setState((prevState) => {\n        return {\n          expressions: [ ...prevState.expressions, newExpression ]\n        }\n      })\n    }\n  }\n  componentWillUnmount() {\n    this.mounted = false\n  }\n  render() {\n    const displayExpressions = () => {\n      \n      const expressions = this.state.expressions.map((i, index) => {\n        const isMainText = this.props.info.resourceid === i.id ? true : false\n        return (\n          <div key={index + \"-\" + i.id}>\n            {<TextCompare\n              info={this.props.info}\n              expressionid={i.id}\n              relationLabel={i.relationLabel}\n              referringResource={i.referringResource}\n              author={i.author}\n              authorTitle={i.authorTitle}\n              longTitle={i.longTitle}\n              isMainText={isMainText}\n              handleChangeBase={this.handleChangeBase}\n              baseText={this.state.baseText}\n              show={i.show}\n              surfaceWidth={this.props.surfaceWidth}\n              isRelatedToRange={i.isRelatedToRange}\n              targetRange={(this.props.selectionRange && this.props.selectionRange.wordRange) ? this.props.selectionRange.wordRange.start + \"-\" + this.props.selectionRange.wordRange.end : \"\"}\n            />}\n          </div>\n        )\n      })\n      return expressions\n    }\n    const displayPagination = () => {\n      return (\n        <div>\n        {\n          (Object.keys(this.state.expressions).length > this.state.pagesize || this.state.rangeEnd > this.state.pagesize) &&\n        <p className=\"small\">\n          {this.state.previousPage &&\n            <span>\n              <span className=\"lbp-span-link\" onClick={() => this.setState({ page: this.state.previousPage })}>Previous {this.state.previousPage}</span>  \n              <span> | </span>\n            </span>\n              }\n          <span>Current Page: </span>\n          <FormControl style={{width: \"40px\", display: \"inline\"}} inline=\"true\" size=\"sm\" id=\"text\" type=\"text\" onChange={(e) => this.setState({ intendedPage: e.target.value })} value={this.state.intendedPage}></FormControl>\n          <Button style={{display: \"inline\"}}inline=\"true\" size=\"sm\" onClick={(e) => this.setState({ page: parseInt(this.state.intendedPage) })}>Go</Button>\n          \n          <span>({this.state.rangeStart} - {this.state.rangeEnd})</span>\n          {Object.keys(this.state.expressions).length > this.state.pagesize && \n            <span>\n              <span> | </span> \n              <span className=\"lbp-span-link\" onClick={() => this.setState({ page: this.state.nextPage })}>Next: {this.state.nextPage}</span>\n            </span>\n          }\n        </p>\n          }\n        </div>\n      )\n    }\n\n    return (\n      <Container className={this.props.hidden ? \"hidden\" : \"showing\"}>\n        <h4>Text Comparisons</h4>\n        {displayPagination()}\n        <p className=\"small\"><a href=\"https://lombardpress.org/adfontes/\" target=\"_blank\" rel=\"noopener noreferrer\">Advanced Index and Filtering</a></p>\n        <hr />\n        {displayExpressions()}\n        <hr />\n        {displayPagination()}\n        <div style={{ \"borderBottom\": \"1px solid rgba(0, 0, 0, 0.1)\", padding: \"5px\" }}>\n          <p style={{ fontSize: \"12px\" }}>Create custom user compare</p>\n          <Form onSubmit={this.handleCustomUpdateRelatedExpressions} inline=\"true\" >\n            <FormControl inline=\"true\" size=\"sm\" id=\"text\" type=\"text\" value={this.state.customExpressionId} placeholder=\"expression id\" className=\"mr-sm-2\" onChange={(e) => { this.handleSetCustomExpressionId(e.target.value) }} />\n            <Button inline=\"true\" size=\"sm\" type=\"submit\" style={{ margin: \"2px\" }}>Submit</Button>\n          </Form>\n        </div>\n\n        <hr />\n        <div>\n          <p>Other Comparison/Connection Visualizations</p>\n          <p><a target=\"_blank\" rel=\"noopener noreferrer\" href={\"http://lombardpress.org/collation-vizualizer/index.html?id=\" + this.props.info.resourceid}>Collation Overlay</a></p>\n          <p><a target=\"_blank\" rel=\"noopener noreferrer\" href={\"https://scta.github.io/networks-explorer/?resourceid=\" + this.props.info.resourceid}>View Reference Connections</a></p>\n          <p><a target=\"_blank\" rel=\"noopener noreferrer\" href={\"https://scta.github.io/networks-explorer/topicconnections.html?resourceid=\" + this.props.info.resourceid}>View Topic Connections</a></p>\n        </div>\n        <div>\n        <NgramDisplay info={this.props.info}\n          handleChangeBase={this.handleChangeBase}\n          baseText={this.state.baseText}\n          surfaceWidth={this.props.surfaceWidth}\n          resourceid={this.props.info.resourceid}>\n        </NgramDisplay>\n        </div>\n\n        \n        \n      </Container>\n\n    );\n  }\n}\n\nexport default TextCompareWrapper;\n","import React, {useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport Axios from 'axios'\nimport {runQuery} from './utils';\nimport Container from 'react-bootstrap/Container';\n\nimport {getPersonInfo, getPersonMentionedByFrequency, getPersonMentionsFrequency} from '../queries/personInfoQuery';\n\n\nfunction PersonInfo(props) {\n  const [authorTitle, setAuthorTitle] = useState()\n  const [authorImageUrl, setAuthorImageUrl] = useState()\n  const [authorDescription, setAuthorDescription] = useState()\n  const [birthDate, setAuthorBirthDate] = useState()\n  const [deathDate, setAuthorDeathDate] = useState()\n  const [mentionedByFrequency, setMentionedByFrequency] = useState([])\n  const [mentionsFrequency, setMentionsFrequency] = useState([])\n  useEffect(() => {\n      setMentionedByFrequency([]);\n      setMentionsFrequency([]);\n      setAuthorImageUrl(\"\");\n      setAuthorDescription(\"\");\n      setAuthorBirthDate(\"\");\n      setAuthorDeathDate(\"\");\n      setAuthorTitle(\"\");\n\n\n      const personInfo = runQuery(getPersonInfo(props.resourceid))\n      personInfo.then((pd) => {\n        const bindings = pd.data.results.bindings\n        if (bindings.length > 0){\n          const personTitle = bindings[0].authorTitle && bindings[0].authorTitle.value;\n          const wikidataid = bindings[0].wikidataid && bindings[0].wikidataid.value;\n          setAuthorTitle(personTitle)\n          wikidataid && getWikiDataInfo(wikidataid)\n        }\n      })\n      const mentionedByfreq = runQuery(getPersonMentionedByFrequency(props.resourceid))\n      mentionedByfreq.then((fd) => {\n        const bindings = fd.data.results.bindings\n        //TODO; this conditional is extremely hacking; window component is passing not person id at the same time that is passing personView=true\n        // this needs to be corrected, but the conditions is checking for null results when using the wrong id\n        if (bindings.length > 0 && bindings[0].count.value !== \"0\"){\n          \n          // sort by name\n          bindings.sort(sortFrequencyResults);\n          const results = bindings.map((item) => {\n            \n            return (\n              <p key={item.author.value}>\n                <Link to={\"/text?resourceid=\" + item.author.value}>{item.authorTitle.value}</Link>:\n                 {item.count.value}\n                 </p>\n            )\n          })\n          setMentionedByFrequency(results);\n          \n        }\n        })\n      \n      \n\n      const mentionsFreq = runQuery(getPersonMentionsFrequency(props.resourceid))\n      mentionsFreq.then((fd) => {\n        const bindings = fd.data.results.bindings\n        //TODO; this conditional is extremely hacking; window component is passing not person id at the same time that is passing personView=true\n        // this needs to be corrected, but the conditions is checking for null results when using the wrong id\n        if (bindings.length > 0 && bindings[0].count.value !== \"0\"){\n        // sort by name\n        bindings.sort(sortFrequencyResults);\n        const results = bindings.map((item, idx) => {\n          \n          return (\n            <p key={idx + \"-\" + item.author.value}>\n              <Link to={\"/text?resourceid=\" + item.author.value}>{item.authorTitle.value}</Link>: \n              {item.count.value}\n              </p>\n          )\n        })\n        setMentionsFrequency(results);\n      }\n      })\n    }, [props.resourceid]);\n\n  const sortFrequencyResults = (a, b) => {\n      //order by author name\n       const nameA = a.authorTitle.value.toUpperCase(); // ignore upper and lowercase\n       const nameB = b.authorTitle.value.toUpperCase(); // ignore upper and lowercase\n      // order by frequency \n      //const nameA = parseInt(a.count.value); // ignore upper and lowercase\n      //const nameB = parseInt(b.count.value); // ignore upper and lowercase\n      if (nameA < nameB) {\n        return -1; //switch to 1 to reverse order\n      }\n      if (nameA > nameB) {\n        return 1; //switch to -1 to reverse order\n      }\n      // names must be equal\n      return 0;\n    }\n  const getWikiDataInfo = (wikidataid) => {\n    const wikidataShortId = wikidataid.split(\"/entity/\")[1];\n    Axios.get(\"https://www.wikidata.org/w/api.php?origin=*&action=wbgetentities&ids=\" + wikidataShortId + \"&format=json\").then((wd)=> {\n        const imageslug = wd.data.entities[wikidataShortId].claims.P18 && wd.data.entities[wikidataShortId].claims.P18[0].mainsnak.datavalue.value;\n        const description = wd.data.entities[wikidataShortId].descriptions[\"en\"] && wd.data.entities[wikidataShortId].descriptions[\"en\"].value;\n        const birthDate = wd.data.entities[wikidataShortId].claims.P569 && wd.data.entities[wikidataShortId].claims.P569[0].mainsnak.datavalue.value.time;\n        const deathDate = wd.data.entities[wikidataShortId].claims.P570 && wd.data.entities[wikidataShortId].claims.P570[0].mainsnak.datavalue.value.time;\n        Axios.get(\"https://commons.wikimedia.org/w/api.php?origin=*&action=query&prop=imageinfo&iiprop=url&redirects&format=json&titles=File:\" + imageslug).then((d3) => {\n          const pages = d3.data.query.pages\n          const page = Object.keys(pages)[0];\n          const imageurl = d3.data.query.pages[page].imageinfo && d3.data.query.pages[page].imageinfo[0].url\n          \n        setAuthorImageUrl(imageurl)\n        setAuthorDescription(description)\n        //setAuthorBirthDate(new Date(birthDate.split('+')[1]).toDateString())\n        //setAuthorDeathDate(new Date(deathDate.split('+')[1]).toDateString())\n        setAuthorBirthDate(parseInt(birthDate));\n        setAuthorDeathDate(parseInt(deathDate));\n        })\n        \n        \n      });\n\n  }\n  return (\n    <div className={props.hidden ? \"hidden\" : \"showing\"}>\n      <Container>\n    <h1>PersonInfo for {authorTitle} {birthDate && \"(\" + birthDate + \"-\" + deathDate + \")\"}</h1>\n    <div style={{display: \"flex\", justifyContent: \"left\"}}>\n    { authorImageUrl && <img alt=\"author\" src={authorImageUrl} width=\"100px\"/>}\n    <p style={{marginLeft: \"10px\"}}>{authorDescription} {authorDescription && \"(wikidata)\"}</p>\n    </div>\n    <div>\n      <h1>Discussed/Mentioned By Frequency</h1>\n        {mentionedByFrequency}\n    </div>\n    <div>\n      <h1>Discusses/Mentions Frequency</h1>\n        {mentionsFrequency}\n    </div>\n    </Container>\n\n    </div>\n  );\n}\n\nexport default PersonInfo;","export function getPersonInfo(resourceid){\n  const query = [\n    \"SELECT ?author ?authorTitle ?wikidataid\",\n    \"{\",\n        \"BIND(<\" + resourceid + \"> AS ?author) .\",\n        \"?author <http://purl.org/dc/elements/1.1/title> ?authorTitle .\" ,\n        \"OPTIONAL {\",\n          \"?author <http://www.w3.org/2002/07/owl#sameAs> ?wikidataid .\",\n          \"FILTER(regex(str(?wikidataid), 'http://www.wikidata.org' ))\",\n        \"}\",\n     \"}\",\n    \"ORDER BY ?authorTitle\"].join(' ')\n return query\n}\n\nexport function getPersonMentionedByFrequency(personid){\n\n      var query = [\n        \"select ?personTitle ?author ?authorTitle (count(?ref) as ?count)\" ,\n        \"where {\",\n\n        \"?ref <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementName> .\",\n\t\t\t  \"?ref <http://scta.info/property/isInstanceOf> <\" + personid + \"> .\",\n        \"<\" + personid + \"> <http://purl.org/dc/elements/1.1/title> ?personTitle .\",\n        \"?ref <http://scta.info/property/isPartOfTopLevelExpression> ?refTopLevel .\",\n        \"?refTopLevel <http://www.loc.gov/loc.terms/relators/AUT> ?author .\",\n        \"?author <http://purl.org/dc/elements/1.1/title> ?authorTitle .\",\n        \"}\",\n        \"GROUP BY ?author ?authorTitle ?personTitle\"\n      ].join('');\n\n    \n    return query;\n}\n\nexport function getPersonMentionsFrequency(personid){\n\n  \n\n  var query = [\n    \"select ?author ?authorTitle (count(?ref) as ?count)\",\n    \"where {\",\n      \"?sourceTopLevel <http://www.loc.gov/loc.terms/relators/AUT> <\" + personid + \"> .\",\n      \"?sourceTopLevel <http://scta.info/property/level> '1' .\",\n      \"?ref <http://scta.info/property/isPartOfTopLevelExpression> ?sourceTopLevel .\",\n      \"?ref <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementName> .\",\n      \"?ref <http://scta.info/property/isInstanceOf> ?author .\",\n      \"?author <http://purl.org/dc/elements/1.1/title> ?authorTitle .\",\n    \"}\",\n    \"GROUP BY ?author ?authorTitle\",\n  ].join('');\nreturn query;\n}","import React, {useState, useEffect} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport {useTranslation} from 'react-i18next'\nimport {FaEdit, FaComment} from 'react-icons/fa';\n\nfunction Comment2Create(props) {\n  const {t} = useTranslation();\n  const [comment, setComment] = useState(props.comment);\n  const [motivation, setMotivation] = useState(props.motivation || \"commenting\") // \"commenting\" vs \"editing\"; default \"commenting\"\n  const editedTextDefault = props.selectionRange && props.selectionRange.text ? props.selectionRange.text : \"\"\n  const [editedText, setEditedText] = useState((props.selectionRange && props.selectionRange.textEdited) ? props.selectionRange.textEdited : editedTextDefault);\n  const [noTarget, setNoTarget] = useState(props.noTarget || false); // if noTarget is set to true, annotation is made without a target\n  const [orderNumber, setOrderNumber] = useState(props.orderNumber);\n  \n  \n  const handleCommentUpdate = (e) => {\n    e.preventDefault()\n    const commentType = motivation;\n    props.submitComment(comment, commentType, editedText, props.selectionRange, orderNumber, noTarget)\n    setComment('')\n  }\n  useEffect(() => {\n    const editedTextDefault = props.selectionRange && props.selectionRange.text ? props.selectionRange.text : \"\"\n    setEditedText((props.selectionRange && props.selectionRange.textEdited) ? props.selectionRange.textEdited : editedTextDefault)\n  }, [props.selectionRange])\n  useEffect(() => {\n    if (motivation === \"commenting\"){\n      setEditedText(props.selectionRange ? props.selectionRange.text : \"\")\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [motivation])\n\n  const wordRange = (props.selectionRange && props.selectionRange.wordRange) ? props.selectionRange.wordRange.start + \"-\" + props.selectionRange.wordRange.end : \"\"\n  return (\n    <Form onSubmit={handleCommentUpdate}>\n      \n      {motivation === \"editing\" && \n      <div>\n        <span>Suggest Edit for : \n          <i>{props.selectionRange.text} </i> \n          <span className=\"lbp-span-link\" title=\"leave simple comment on text\" onClick={()=>{setMotivation(\"commenting\")}}> <FaComment/> </span>\n          <span> ({wordRange}) </span>\n        </span> \n        <FormControl as=\"textarea\" type=\"text\" id=\"editedText\" rows=\"3\" \n        value={editedText} placeholder={t(\"comment\")} className=\"mr-sm-2\" onChange={(e) => {setEditedText(e.target.value)}}/>\n      </div>\n      }\n        <div>\n        {(props.selectionRange && props.selectionRange.text) &&\n        <div>\n        {motivation === \"editing\" ? \n        <span>Leave comment on edit</span> \n        : \n        <span>\n          Comment on: \n          <i>{props.selectionRange.text} </i> \n          <span className=\"lbp-span-link\" title=\"edit text\" onClick={()=>{setMotivation(\"editing\")}}> <FaEdit/> </span>\n          <span> ({wordRange}) </span>\n        </span>\n        }\n        </div>\n        }\n        <FormControl as=\"textarea\" type=\"text\" id=\"comment\" rows=\"3\" value={comment} placeholder={t(\"comment\")} className=\"mr-sm-2\" onChange={(e) => {setComment(e.target.value)}}/>\n        <span>Position: <Form.Text as=\"input\" inline=\"true\" type=\"input\" id=\"orderNumber\" value={orderNumber} className=\"mr-sm-2\" onChange={(e) => {setOrderNumber(e.target.value)}} style={{border: 0, width: \"25px\", display: \"inline\"}}/></span>\n        <span>Has Target: <input type=\"checkbox\" inline=\"true\" label=\"has target\" checked={!noTarget} onChange={(e) => {setNoTarget(!noTarget)}} style={{display: \"inline\"}}/></span>\n      </div>\n      <Button size=\"sm\"  type=\"submit\" block style={{margin: \"2px\"}}>{t(\"Submit\")}</Button>\n   </Form>\n  );\n}\n\nexport default Comment2Create;\n","import React, {useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport {FaTrash, FaEdit, FaClipboard} from 'react-icons/fa';\nimport Comment2Create from './Comment2Create.js'\nimport {useTranslation} from 'react-i18next'\nimport {copyToClipboard} from './utils'\n\nfunction Comment2Item(props) {\n  const {t} = useTranslation();\n  const [editable, setEditable] = useState(false);\n  \n  const submitUpdate = (update, motivation, editedText, selectionRange, orderNumber, noTarget) => {\n    props.updateComment(props.comment.id, update, editedText, motivation, selectionRange, orderNumber, noTarget)\n    setEditable(false)\n  }\n  const addSCTALinksToValue = (value) => {\n    // conversion template source: http://talkerscode.com/webtricks/convert-url-text-into-clickable-html-links-using-javascript.php \n    const link = value.match(/(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#/%?=~_|!:,.;]*[-A-Z0-9+&@#/%=~_|])/ig)\n    if (link){\n      const firstString = value.split(link[0])[0]\n      let strings = [firstString]\n      link.forEach((l, i) => {\n        const linkComponent = <Link key={l} to={\"/res?resourceid=\" + l}>{l}</Link> \n        const linkCopy = <span key={\"s-\" + l} className=\"lbp-span-link\" title=\"Copy Resource Url Clipboard\" onClick={(e) => {e.preventDefault(); copyToClipboard(l)}}><FaClipboard /></span>\n        strings.push(linkComponent)\n        strings.push(linkCopy)\n        const afterString = value.split(l)[1]\n        const prunedString = afterString.split(link[i+1])[0]\n        strings.push(prunedString)\n      })\n      return strings\n    }\n    else{\n      return value\n    }\n  }\n  \n  \n  let target =  typeof(props.comment.target) === 'string' ? props.comment.target : props.comment.target.source;\n  \n\n  let selectedFragment = undefined;\n  let selectedFragmentRange = undefined;\n  if (props.comment.target.selector){\n    selectedFragment = props.comment.target.selector.filter((i) => (i.type === \"TextQuoteSelector\"))[0].exact;\n    selectedFragmentRange = props.comment.target.selector.filter((i) => (i.type === \"TextPositionSelector\"))[0];\n    //selectedCharacterRange = props.comment.target.selector.filter((i) => (i.type === \"TextPositionSelector\"))[0];\n    target = selectedFragmentRange.start ? target + \"@\" + selectedFragmentRange.start + \"-\" + selectedFragmentRange.end : target;\n\n  }\n  \n  const selectionRange = {\n    text: selectedFragment, \n    textEdited: props.comment.body.editedValue,\n    wordRange: selectedFragmentRange\n  }\n  \n  return (\n      <div>\n        {/* {!props.focused && <p>{t(\"For\")}: <Link to={\"/text?resourceid=\" + target}>{target}</Link></p>} */}\n        {/* <span className=\"lbp-span-link\" onClick={() => props.handleOnClickComment(target.split(\"/resource/\")[1], selectedFragment, props.comment.body.editedValue, selectedFragmentRange, selectedCharacterRange)}>{target} {selectedFragmentRange && <span> ({selectedFragmentRange.start}-{selectedFragmentRange.end})</span>}</span> */}\n        \n        <p><span>{props.orderNumber}</span>: {t(\"For\")}: <Link to={\"/text?resourceid=\" + target}>{target}</Link></p>\n        {\n          editable ?\n          <Comment2Create submitComment={submitUpdate} \n          comment={props.comment.body.value} \n          selectionRange={selectionRange} \n          motivation={props.comment.motivation}\n          noTarget={props.comment.target ? false : true}\n          orderNumber={props.orderNumber}\n          /> :\n          <p>\n          {\n          //<span dangerouslySetInnerHTML={{ __html: addSCTALinksToValue(props.comment.body.value)}}/>\n          }\n          {selectedFragment && <span>Comment on: <i>{selectedFragment}</i></span>}\n          <br/>\n          {props.comment.motivation === \"editing\" && <span>Suggested Correction: {props.comment.body.editedValue}<br/></span>}\n          \n          <span>{addSCTALinksToValue(props.comment.body.value)}</span>\n          <br/>\n          <span>Submitted: </span> {props.comment.created && props.comment.created.split(\"T\")[0]} | \n          <span className=\"lbp-span-link\" onClick={() => {props.removeComment(props.comment.id)}}><FaTrash/> </span> | \n          <span className=\"lbp-span-link\" onClick={() => setEditable(true)}> <FaEdit/></span>\n          </p>\n        }\n        <hr/>\n      </div>\n    );\n}\n\nexport default Comment2Item;\n","import React, {useState} from 'react'\nimport Axios from 'axios'\nimport {FaDownload, FaCloudDownloadAlt, FaUpload, FaPlusCircle} from 'react-icons/fa';\n\nconst ImportExport = (props) =>{\n  const [newListName, setNewListName] = useState('');\n  const [newListUrl, setNewListUrl] = useState('');\n  const [showImport, setShowImport] = useState(false);\n\n  const handleFileImport = (e) => {\n    var reader = new FileReader();\n\n    reader.readAsText(e.target.files[0]);\n    const fileName = e.target.files[0].name\n    // define callback function; aka actions to be peerformed after file is read\n    reader.onload = function(e) {\n      var list = reader.result;\n      \n      props.handleImportList(JSON.parse(list), fileName)\n    }\n\n\n  }\n  const handleUrlImport = (e) => {\n    e.preventDefault()\n    Axios.get(newListUrl).then((d) => {\n      console.log(\"data\", d)\n      props.handleImportList(d.data, newListUrl)\n    })\n\n\n  }\n  const createNewList = (e) => {\n    e.preventDefault();\n    //NOTE: first argument needs to be string that will be parsed in the parent component, in this case to an array\n    props.handleImportList([], newListName)\n    setNewListName('')\n  }\n  const packageData = () =>\n   {\n    const data = JSON.stringify(props.currentList, null, 2);\n    const dataLink = \"data:application/json;charset=utf-8,\" + encodeURI(data)\n    return dataLink\n  }\n  const downloadTitle = () =>\n   {\n    const title = props.currentListName.split('.json')[0] + \"-\" + new Date().toISOString().slice(0, 10)\n    return title\n  }\n  return (\n    <div>\n      <span className=\"lbp-span-link\" onClick={() => setShowImport(!showImport)}>Import <FaUpload/></span> \n      {showImport &&\n        <div>\n          <span className=\"lbp-span-link\"><FaUpload/> Load from local file</span> \n          <br/>\n          <input type=\"file\" id=\"files\" name=\"files[]\" onChange={handleFileImport}/>\n          <br/>\n          <span className=\"lbp-span-link\"><FaCloudDownloadAlt/> Load from Cloud</span>\n          <form onSubmit={handleUrlImport}><input type=\"text\" value={newListUrl} onChange={(e) => {setNewListUrl(e.target.value)}}></input><input type=\"submit\"/></form>\n          \n          <span className=\"lbp-span-link\"><FaPlusCircle/> Create New List</span> \n          <form onSubmit={createNewList}><input type=\"text\" value={newListName} onChange={(e) => {setNewListName(e.target.value)}}></input><input type=\"submit\"/></form>\n        </div>\n      }\n      <br/> \n      <a href={packageData()} download={downloadTitle()}><span className=\"lbp-span-link\">Export <FaDownload/></span></a>\n      \n    </div>\n  );\n}\n\nexport default ImportExport","import React, {useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport FormControl from 'react-bootstrap/FormControl';\nimport PropTypes from 'prop-types';\nimport Comment2Create from './Comment2Create.js'\nimport Comment2Item from './Comment2Item.js'\nimport Comments2ImportExport from './Comments2ImportExport'\nimport uuidv4 from 'uuid/v4';\nimport Button from 'react-bootstrap/Button';\nimport {FaClipboard, FaFilter} from 'react-icons/fa';\nimport {useTranslation} from 'react-i18next'\nimport {copyToClipboard} from './utils'\n\n\n/**\n * \n * A comment wrapper for submitting comments to local storage test\n * @public\n */\n\nfunction Comments2(props) {\n  const {t} = useTranslation();\n  const [lists, setLists] = useState(JSON.parse(localStorage.getItem(\"sctaCommentsState2\"))|| {\"local\": []})\n  const [comments, setComments] = useState(\"local\");\n  const [showFocusComments, setShowFocusComments] = useState(true)\n  const [commentFilter, setCommentFilter] = useState(\"\")\n  const [mentionedBy, setMentionedBy] = useState([])\n  const [showFilters, setShowFilters] = useState(false)\n  \n  \n  \n\n  /**\n   * submit the comment\n   * @param {string} comment \n   * @public\n   */\n  const submitComment = (comment, motivation, editedText, selectionRange, orderNumber, noTarget) => {\n    const randomid = uuidv4();\n    const annoId = \"http://inbox.scta.info/notifications/\" + randomid\n    const dateObject = new Date();\n\n    //TODO: I don't love creating the selector when selection range is empty\n    //TODO: it would probably be better to just not have a selector when no text is selected\n    const selector = [\n      {\n        \"type\": \"TextQuoteSelector\",\n        \"exact\": selectionRange && selectionRange.text\n      },\n      {\n        \"type\": \"TextPositionSelector\",\n        \"start\": selectionRange && selectionRange.wordRange && selectionRange.wordRange.start,\n        \"end\": selectionRange && selectionRange.wordRange && selectionRange.wordRange.end\n      }\n    ]\n    const annotation = {\n      \"@context\": \"http://www.w3.org/ns/anno.jsonld\",\n      \"id\": annoId,\n      \"type\": \"Annotation\",\n      \"created\": dateObject.toISOString(),\n      \"motivation\": motivation,\n      \"body\": {\n        \"type\": \"TextualBody\",\n        \"value\": comment\n      },\n      \"target\": !noTarget && { // changing target to object rather than string will break retrieval\n        source: props.resourceid, \n        selector: selector\n      }\n      \n    }\n    // conditionally add editedValue only if motivation is editing\n    if (motivation === \"editing\"){\n      annotation.body.editedValue = editedText;\n    }\n    else {\n      delete annotation.body[\"editedValue\"];\n    }\n    //lists[comments].push(annotation) \n    lists[comments].splice(orderNumber, 0, annotation);\n    setLists({\n      ...lists,\n    })\n    setCommentFilter('')\n  }\n  const removeComment = (id) => {\n    //filter current list\n    const newLists = lists[comments].filter((c) => (c.id !== id))\n    // replace current list value with filtered list\n    lists[comments] = newLists\n      setLists({\n        ...lists\n      })\n  }\n  const updateComment = (id, update, editedText, motivation, selectionRange, orderNumber, noTarget) => {\n    const targetComment = lists[comments].filter((c) => (c.id === id))[0]\n    targetComment.body.value = update\n    targetComment.body.editedValue = editedText\n    targetComment.motivation = motivation\n    targetComment.orderNumber = orderNumber\n    targetComment.target = noTarget ? false : targetComment.target\n    const old_index = lists[comments].indexOf(targetComment);\n    \n    //reposition comment\n    //see https://stackoverflow.com/questions/5306680/move-an-array-element-from-one-array-position-to-another\n    //todo: this could/should be a utility function\n    if (orderNumber >= lists[comments].length) {\n      var k = orderNumber - lists[comments].length + 1;\n      while (k--) {\n        lists[comments].push(undefined);\n      }\n    }\n    \n    lists[comments].splice(orderNumber, 0, lists[comments].splice(old_index, 1)[0]);\n\n    setLists({\n      ...lists\n    })\n  }\n  useEffect(() => {\n    setMentionedBy(getMentionedBy())\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.resourceid])\n  \n  const getMentionedBy = () => {\n    if (lists[comments].length > 0){\n      let mentionedBy = lists[comments].map((c) => {\n        if (c.body.value && c.body.value.includes(props.resourceid)){\n          const target =  typeof(c.target) === 'string' ? c.target : c.target.source;\n          return target\n        }\n        else{\n          return undefined\n        }\n      })\n      mentionedBy = mentionedBy.filter((i) => {return i !== undefined})\n      return mentionedBy\n    }\n    else{\n      return []\n    }\n  }\n  // expect list to be in already parsed JSON\n  const handleImportList = (list, listname) => {\n    // try to load data from local storage\n    try {\n      const parsedList = list;\n      const name = listname || uuidv4();\n      lists[name] = parsedList\n      setLists({\n        ...lists\n      })\n    }\n    // if import update fails do nothing and proceed with the default state\n    catch (e) {\n      console.log(\"error\", e)\n    }\n  }\n\n  useEffect(() => {\n    localStorage.setItem(\"sctaCommentsState2\", JSON.stringify(lists))\n  })\n  \n  return (\n    <Container className={props.hidden ? \"hidden\" : \"showing\"}>\n      <Comment2Create \n        submitComment={submitComment} \n        selectionRange={props.selectionRange}\n        textEdit={props.textEdit}\n        orderNumber={lists[comments].length}\n        />\n      <Button size=\"sm\" style={{margin: \"2px\"}} block onClick={() => setShowFilters(!showFilters)}><FaFilter/> Filters</Button>\n      { showFilters &&\n      <div>\n        <span>Select Annotation List</span>\n      <FormControl size=\"sm\" as=\"select\" onChange={(e) => {setComments(e.target.value)}} value={comments}>\n                {lists && Object.keys(lists).map((e, i) => {\n                    return (<option key={e} value={e}>{e}</option>)\n                  })\n                }\n      </FormControl>\n      <FormControl size=\"sm\" style={{margin: \"10px 0\"}} type=\"text\" value={commentFilter} placeholder={t(\"filter comments by text\")} className=\"mr-sm-2\" onChange={(e) => {setCommentFilter(e.target.value)}}/>\n      <Button id=\"btnAllCommentsToggle\" size=\"sm\" style={{margin: \"2px\"}} block onClick={() => setShowFocusComments(!showFocusComments)}>{showFocusComments ? t(\"Show All Comments\") : t(\"Show Comments For Focused Passage\") }</Button>\n      </div>\n      }\n      <hr/>\n      {mentionedBy.length > 0 && \n      <div>\n        <span>Discussed By:</span>\n        {mentionedBy.map((m) => {\n            return(\n              <div>\n              <Link key={m} to={\"/res?resourceid=\" + m}>{m}</Link>\n              <span className=\"lbp-span-link\" title=\"Copy Resource Url Clipboard\" onClick={(e) => {e.preventDefault(); copyToClipboard(m)}}><FaClipboard /></span>\n              </div>\n            )\n          })\n          }\n        <hr/>\n      </div>\n      }\n      <div>\n        {lists[comments].length > 0 && lists[comments].slice(0).map((c,i) => {\n          \n          const target = typeof(c.target) === 'string' ? c.target : c.target.source;\n          if (showFocusComments){\n            if (target && target.includes(props.expressionid) && (c.body.value && c.body.value.includes(commentFilter))){\n              return (\n                <div key={i}>\n                  <Comment2Item comment={c} focused={true} removeComment={removeComment} updateComment={updateComment}\n                  handleOnClickComment={props.handleOnClickComment} orderNumber={lists[comments].indexOf(c)}/>\n                  {\n                  //<button onClick={() => {removeNote(n.title)}}>x</button>\n                  }\n                </div>\n              )\n            }\n            else{\n              return null\n            }\n          }\n          else{\n            if (target && target.includes(props.expressionid) && (c.body.value && c.body.value.includes(commentFilter))){\n              return (\n                <div key={i} style={{borderLeft: \"1px solid black\"}}>\n                  <Comment2Item comment={c} removeComment={removeComment} updateComment={updateComment} orderNumber={lists[comments].indexOf(c)}/>\n                  {\n                  //<button onClick={() => {removeNote(n.title)}}>x</button>\n                  }\n                </div>\n                )\n            }\n            else if (c.body.value && c.body.value.includes(commentFilter)){\n              return (\n                <div key={i}>\n                  <Comment2Item comment={c} removeComment={removeComment} updateComment={updateComment} orderNumber={lists[comments].indexOf(c)}/>\n                  {\n                  //<button onClick={() => {removeNote(n.title)}}>x</button>\n                  }\n                </div>\n              )\n            }\n            else{\n              return null\n            }\n          }\n        })}\n      </div>\n      {\n      <Comments2ImportExport currentList={lists[comments]} currentListName={comments} handleImportList={handleImportList} />\n    }\n\n    </Container>\n  );\n}\n\nComments2.propTypes = {\n  /**\n  * \n  * resourceid to serve as target of annotation\n  *\n  */\n  resourceid: PropTypes.string.isRequired,\n\n}\n\nexport default Comments2;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Container from 'react-bootstrap/Container';\nimport Spinner from './Spinner';\nimport { FaClipboard} from 'react-icons/fa';\nimport {runQuery, copyToClipboard} from './utils'\nimport {getManifestationCitationInfo} from './Queries'\n\n/**\n* citation component\n*\n* TODO: it would be better to separate the citation display, manifestation picker, citation explation\n* into three differen compoments wrapped in a citation Wrapper.\n* This way the citation display could be truly independent\n*/\nclass Citation extends React.Component{\n  constructor(props){\n    super(props)\n    this.mounted = \"\"\n    this.state = {\n      eurl: \"\",\n      etitle: \"\",\n      murl: \"\",\n      mtitle: \"\",\n      turl: \"\",\n\n      fetching: false\n    }\n  }\n\n  retrieveCitation(tresourceid){\n    if (tresourceid){\n      this.setState({fetching: true})\n      const manifestationCitationInfo = runQuery(getManifestationCitationInfo(tresourceid))\n      manifestationCitationInfo.then((data) => {\n        const allBindings = data.data.results.bindings\n        if (allBindings.length > 0){\n          const bindings = allBindings[0]\n          const expressionid = bindings.expression ? bindings.expression.value : \"\"\n          const manifestationid = bindings.manifestation ? bindings.manifestation.value : \"\"\n          const eLongTitle = bindings.eLongTitle ? bindings.eLongTitle.value : \"\"\n          const authorTitle = bindings.authorTitle ? bindings.authorTitle.value : \"\"\n          const author = bindings.author ? bindings.author.value : \"\"\n          const editorTitle = bindings.editorTitle ? bindings.editorTitle.value : \"\"\n          const editor = bindings.editor ? bindings.editor.value : \"\"\n          const datasource = bindings.datasource ? bindings.datasource.value : \"\"\n          const title = bindings.codexTitle ? bindings.codexTitle.value : \"\"\n          const start = bindings.surfaceTitle ? bindings.surfaceTitle.value : \"\"\n          const end = allBindings[allBindings.length - 1].surfaceTitle ? allBindings[allBindings.length - 1].surfaceTitle.value : \"\"\n          if (this.mounted){\n            this.setState(\n              {\n                author: author,\n                authorTitle: authorTitle,\n                editor: editor,\n                editorTitle: editorTitle,\n                eurl: expressionid,\n                etitle: eLongTitle,\n                murl: manifestationid,\n                mtitle: start !== end ? title + \", \" + start + \"-\" + end : title + \", \" + start,\n                turl: tresourceid,\n                datasource: datasource,\n                fetching: false\n              }\n            )\n          }\n        //})\n        }\n      })\n    }\n  }\n  componentDidMount(){\n    this.mounted = true\n    this.retrieveCitation(this.props.tresourceid)\n\n  }\n  \n  componentDidUpdate(prevProps){\n    if (this.props.tresourceid !== prevProps.tresourceid){\n      this.retrieveCitation(this.props.tresourceid)\n    }\n  }\n  componentWillUnmount(){\n    this.mounted = false\n  }\n  render(){\n\n    const fullCitationString = this.state.authorTitle + \", \" + this.state.etitle + \"(\" + this.state.mtitle + \") Data source: \" + this.state.datasource + \".\"\n    const wordRange = this.props.selectionRange && this.props.selectionRange.wordRange && \n      this.props.selectionRange.wordRange.start + \"-\" + this.props.selectionRange.wordRange.end;\n    return (\n      <Container>\n      <h4>Citation</h4>\n      {this.state.fetching ?\n        <Spinner/> :\n      <div>\n        <p className=\"etitle\">{this.state.authorTitle}, {this.state.etitle} {wordRange && wordRange && \"@ \" + wordRange} (<a href={this.state.eurl} target=\"_blank\" rel=\"noopener noreferrer\">{this.state.eurl}{wordRange && \"@\" + wordRange}</a> <span className=\"lbp-span-link\" title=\"Copy Citation to Clipboard\" onClick={(e) => {e.preventDefault(); copyToClipboard(wordRange ? this.state.eurl + \"@\" + wordRange : this.state.eurl)}}><FaClipboard /></span>)</p>\n\n        <p className=\"mtitle\">\n          {this.state.editor && <span>Ed. {this.state.editorTitle}, </span>}\n          \n          {this.state.mtitle && this.state.mtitle + \" \"}\n          \n          (<a href={this.state.murl} target=\"_blank\" rel=\"noopener noreferrer\">{this.state.murl}{wordRange && \"@\" + wordRange}</a> \n          \n          <span className=\"lbp-span-link\" title=\"Copy Citation to Clipboard\" onClick={(e) => {e.preventDefault(); copyToClipboard(wordRange ? this.state.murl + \"@\" + wordRange : this.state.murl)}}><FaClipboard /></span>)\n        </p>\n\n        <p className=\"ttitle\">\n          <span>Transcription Resource: </span>\n          <a href={this.state.turl} target=\"_blank\" rel=\"noopener noreferrer\">{this.state.turl}{wordRange && \"@\" + wordRange}</a>\n          <span className=\"lbp-span-link\" title=\"Copy Citation to Clipboard\" onClick={(e) => {e.preventDefault(); copyToClipboard(wordRange ? this.state.turl + \"@\" + wordRange : this.state.turl)}}><FaClipboard /></span>\n          <br/>\n          <span>Data source: </span>\n          <a href={this.state.datasource} target=\"_blank\" rel=\"noopener noreferrer\"> {this.state.datasource}</a> \n          <span className=\"lbp-span-link\" title=\"Copy Citation to Clipboard\" onClick={(e) => {e.preventDefault(); copyToClipboard(this.state.datasource)}}><FaClipboard /></span>\n          </p>\n        <p className=\"lbp-span-link\" title=\"Copy Citation to Clipboard\" onClick={(e) => {e.preventDefault(); copyToClipboard(fullCitationString)}}><FaClipboard /> Copy Full Citation to Clipboard</p>\n      </div>\n      }\n      </Container>\n    );\n  }\n}\n\nCitation.propTypes = {\n  /**\n  * transcription resource id of focused passage,\n  * transcription id is required, because a specific text passage is being complicated\n  *\n  * TODO: perhaps it would be good to allow the expression or manifestation id to be given\n  * but the citation component would need to know what kind of resource this and would\n  * need to produce a different query in each case\n  */\n  tresourceid: PropTypes.string.isRequired,\n\n}\n\nexport default Citation;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport {FaChevronDown, FaChevronUp} from 'react-icons/fa';\n\nclass CitationExplanation extends React.Component {\n  constructor(props){\n    super(props)\n    this.toggleCitationExplanation = this.toggleCitationExplanation.bind(this)\n    this.state = {\n      showCitationExplanation: false,\n    }\n  }\n  toggleCitationExplanation(){\n    this.setState((prevState) => {\n      return {showCitationExplanation: !prevState.showCitationExplanation}\n    })\n  }\n  render(){\n    return (\n      <Container className=\"CitationExplanation\">\n      <p onClick={this.toggleCitationExplanation}>{this.state.showCitationExplanation ? <span><FaChevronDown/>Hide Explanation of Citation Practices</span> : <span><FaChevronUp/>View Explanation of Citation Practices</span>} </p>\n      {this.state.showCitationExplanation &&\n        <div>\n          <p>The citation of a text that has survived through a historical succession of manifestations is a complicated endeavor.\n          Today, when transcriptions of these manifestations\n          can be published as data, separate from any presentation,\n          and thereby can be presented in a variety of ways,\n          a full citation inevitably becomes even more complex.\n          In order to identify the content hierarchy of the text,\n          the specifical material or born digital manifestation of that text,\n          and the data sources used to represent and display that manifestation,\n          specificity and precision are needed.</p>\n\n          <p>Full citations therefore identify three aspects of the text currently being viewed.</p>\n\n          <p className=\"etitle\">First (blue) it identifies the idea of the paragraph in question situated within the conceptual hierarchy of the text.</p>\n\n          <p className=\"mtitle\">Second (red) it identifies the manifestation of the text in a historical or born digital edition.</p>\n\n          <p className=\"ttitle\">Third (purple) it identifies the transcription and transcription data source used to power the current text presentation.</p>\n        </div>}\n      </Container>\n\n    );\n  }\n}\n\nexport default CitationExplanation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Container from 'react-bootstrap/Container';\nimport {FaChevronDown, FaChevronUp} from 'react-icons/fa';\nimport {Link} from 'react-router-dom';\n\nclass ManifestationList extends React.Component {\n  constructor(props){\n    super(props)\n    this.toggleAlternativeManifestations = this.toggleAlternativeManifestations.bind(this)\n    this.state = {\n      showAlternativeManifestations: true\n    }\n  }\n  toggleAlternativeManifestations(){\n    this.setState((prevState) => {\n      return {showAlternativeManifestations: !prevState.showAlternativeManifestations}\n    })\n  }\n  render(){\n    const wordRange = this.props.selectionRange && this.props.selectionRange.wordRange && \n      this.props.selectionRange.wordRange.start + \"-\" + this.props.selectionRange.wordRange.end;\n    \n      const displayManifestations = () => {\n      if (this.props.manifestations){\n        const manifestations = this.props.manifestations.map((i) => {\n          if (this.props.tresourceid.includes(i.manifestation)){\n            return (<p key={i.manifestation}>\n              {i.manifestationTitle}{wordRange && \"@\" + wordRange} (Currrent Focus)\n            </p>)\n          }\n          else{\n            return (<p key={i.manifestation}>\n              <Link to={wordRange ? \"/text?resourceid=\" + i.manifestation + \"@\" + wordRange : \"/text?resourceid=\" + i.manifestation}>\n              {i.manifestationTitle}{wordRange && \"@\" + wordRange}</Link>\n            </p>\n            )\n          }\n        })\n        return manifestations\n      }\n    }\n    return (\n      <Container className=\"ManifestationList\">\n      {this.props.optionalDisplay ?\n        <h4 onClick={this.toggleAlternativeManifestations}>{this.state.showAlternativeManifestations ? <span><FaChevronDown/>Hide Alternative Manifestations</span> : <span><FaChevronUp/>View Alternative Manifestations</span>} </h4>\n        :\n        <h4>Available Manifestations</h4>\n      }\n\n        {this.state.showAlternativeManifestations && displayManifestations()}\n      </Container>\n    );\n  }\n}\nManifestationList.propTypes = {\n/**\n  * manifestations provides list of other mnaifestations for focused expression\n\n  * TODO: it seems desireable not to require a manifestations property so that\n  * one can simply provide the transcription resource id, but if the propery is not\n  * the component could look it up itself. But information could also be supplied a prop\n  * in the case the parent component already has the information. In this case,\n  * a second look up by the component would be needless\n  */\n  manifestations: PropTypes.array,\n  optionalDisplay: PropTypes.bool\n}\nexport default ManifestationList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Container from 'react-bootstrap/Container';\nimport Citation from './Citation'\nimport CitationExplanation from './CitationExplanation'\nimport ManifestationList from './ManifestationList'\n\nfunction CitationWrapper(props) {\n  return (\n    <Container className={props.hidden ? \"CitationWrapper hidden\" : \"CitationWrapper showing\"}>\n      <Citation tresourceid={props.tresourceid} selectionRange={props.selectionRange}/>\n      <CitationExplanation/>\n      <hr/>\n      <ManifestationList \n      tresourceid={props.tresourceid}\n      manifestations={props.manifestations} \n      selectionRange={props.selectionRange}/>\n    </Container>\n  );\n}\n\nCitation.propTypes = {\n  /**\n  * transcription resource id of focused passage,\n  * transcription id is required to be passed down to Citaiton Component\n  */\n  tresourceid: PropTypes.string.isRequired,\n  /**\n  * manifestations provides list of other mnaifestations for focused expression\n\n  * TODO: it seems desireable not to require a manifestations property so that\n  * one can simply provide the transcription resource id, but if the propery is not\n  * the component could look it up itself. But information could also be supplied a prop\n  * in the case the parent component already has the information. In this case,\n  * a second look up by the component would be needless\n  */\n  manifestations: PropTypes.array,\n  /**\n  * hidden designates whether the component should be hidden after mounting\n  */\n  hidden: PropTypes.bool,\n  /**\n  * function to handle response when new manifestaiton is picked.\n  * should be passed down to ManifestationList component\n  */\n  handleFocusChange: PropTypes.func\n}\nexport default CitationWrapper;\n","import React, {useState, useEffect} from 'react';\nimport {getCodexInfo, getCodexInfoFromSurface, getCodexInfoFromCanvas, getCodexInfoFromManifest} from './Queries'\nimport {Link} from 'react-router-dom';\nimport {runQuery} from './utils'\n\nfunction CodexToc(props) {\n  const [items, setItems] = useState([])\n  const retrieveCodexInfo = (id, type) => {\n    \n    let codexInfo = undefined\n    if (type === \"surface\"){\n      codexInfo = runQuery(getCodexInfoFromSurface(id))\n    }\n    else if (type === \"canvas\"){\n      codexInfo = runQuery(getCodexInfoFromCanvas(id))\n    }\n    else if (type === \"manifest\"){\n      codexInfo = runQuery(getCodexInfoFromManifest(id))\n    }\n    else{\n      codexInfo = runQuery(getCodexInfo(id))\n    }\n    codexInfo.then((d) => {\n      console.log(\"id\", id, \"type\", type, \"data\", d)\n      const data = d.data.results.bindings\n      if (data.length > 0 && data[0].surface){\n        const expressionIdMap = data.map((d) => {\n          return d.expression ? d.expression.value : \"\"\n        })\n        var unique = expressionIdMap.filter((v, i, a) => a.indexOf(v) === i);\n        let expressionList = {}\n        unique.forEach((e) => {\n           expressionList[e] = []\n        })\n        data.forEach((d) => {\n            const info = {\n              expression: d.expression.value,\n              expressionTitle: d.item_expression_title.value,\n              manifestation: d.manifestation.value,\n              surface: d.surface.value,\n              surfaceTitle: d.surface_title.value,\n              questionTitle: d.item_expression_question_title ? d.item_expression_question_title.value : ''\n            }\n          expressionList[d.expression.value].push(info)\n        })\n        // let focusedSurface = \"\";\n        // if (type === \"surface\"){\n        //    focusedSurface = id\n        //  }\n        //  else if (type === \"canvas\"){\n        //    focusedSurface = data[0].surfaceFocus.value\n        //  }\n        //  else{\n        //    focusedSurface = data[0].surface.value\n        //  }\n         setItems(expressionList)\n        ///this.setState({items: expressionList, focusedSurface: focusedSurface})\n\n      }\n    })\n  }\n  useEffect(() => {\n    retrieveCodexInfo(props.resourceid, props.codexResourceType)\n    // eslint-disable-next-line\n  }, [props.resourceid])\n    \n  const displayItems = () => {\n      const displayItems = Object.keys(items).map((key) => {\n        return (\n          <p key={items[key][0].expression}>\n          <span>\n          <Link to={\"/text?resourceid=\" + items[key][0].surface}>{items[key][0].surfaceTitle}</Link>\n          -\n          <Link to={\"/text?resourceid=\" + items[key][items[key].length - 1].surface}>{items[key][items[key].length - 1].surfaceTitle}</Link>\n          </span>{\": \"}\n          <Link to={\"/text?resourceid=\" + items[key][0].manifestation}>{items[key][0].expressionTitle}</Link>{\": \"}\n          {items[key][0].questionTitle && items[key][0].questionTitle}\n          </p>\n\n        )\n      })\n      return displayItems\n    }\n  return (\n    <div className={props.hidden ? \"hidden\" : \"showing\"}>\n      {displayItems()}\n    </div>\n    );\n}\n\nexport default CodexToc;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport TextPreview from '@bit/jeffreycwitt.lbp.text-preview'\nimport {runQuery} from './utils'\nimport {getCanonicalTranscription} from '../queries/TextPreviewWrapperQueries'\nimport {FaToggleOn, FaToggleOff} from 'react-icons/fa';\n\nclass TextPreviewWrapper extends React.Component {\n  constructor(props){\n    super(props)\n    this.handleToggleShowTokenPosition = this.handleToggleShowTokenPosition.bind(this)\n    this.mounted = false\n    this.state = {\n      tresourceid: \"\",\n      longTitle: null,\n      showTokenPosition: false\n    }\n  }\n  handleToggleShowTokenPosition(){\n    this.setState((prevState)=> {\n      return {showTokenPosition: !prevState.showTokenPosition}\n    })\n  }\n  getTranscriptionId(textPreviewResourceId){\n    const info = runQuery(getCanonicalTranscription(textPreviewResourceId))\n\n    info.then((d) => {\n      if (this.mounted){\n        this.setState(\n          {\n            tresourceid: d.data.results.bindings[0].ctranscription.value,\n            longTitle: d.data.results.bindings[0].longTitle.value \n        })\n      }\n    })\n    .catch((e) => {\n      this.setState({tresourceid: \"\"})\n      //console.log(\"transcription id could not be found\", e)\n      // uncomment if you want to automatically redirect\n        //this.props.handleFocusChange(textPreviewResourceId)\n    })\n\n\n  }\n  componentDidMount(){\n    this.mounted = true\n    this.getTranscriptionId(this.props.textPreviewResourceId)\n  }\n  componentDidUpdate(prevProps){\n    if (prevProps.textPreviewResourceId !== this.props.textPreviewResourceId){\n      this.getTranscriptionId(this.props.textPreviewResourceId)\n    }\n  }\n  componentWillUnmount()\n  {\n    this.mounted = false\n  }\n  render(){\n    const link = (this.props.textPreviewStart && this.props.textPreviewEnd) \n    ? this.state.tresourceid + \"@\" + this.props.textPreviewStart + \"-\" + this.props.textPreviewEnd\n    : this.state.tresourceid\n    const referringRange = (this.props.referringSelectionRange && this.props.referringSelectionRange.wordRange) && this.props.referringSelectionRange.wordRange.start + \"-\" + this.props.referringSelectionRange.wordRange.end\n    // const referringStart = (this.props.referringSelectionRange && this.props.referringSelectionRange.wordRange) && this.props.referringSelectionRange.wordRange.start\n    // const referringEnd = (this.props.referringSelectionRange && this.props.referringSelectionRange.wordRange) && this.props.referringSelectionRange.wordRange.end\n    return (\n      <Container className={this.props.hidden ? \"hidden\" : \"showing\"}>\n      {/* <p>Go to: <span className=\"lbp-span-link\" onClick={() => this.props.handleFocusChange(this.state.tresourceid)}>{this.state.tresourceid}</span></p> */}\n      <p>Go to: <Link onClick={() => {this.props.handleTextPreviewFocusChange([{id: this.props.referringResource, range: referringRange}])}} to={\"/text?resourceid=\" + link}>{this.state.longTitle}</Link></p>\n      {\n       this.state.tresourceid && \n       <div>\n         <TextPreview tresourceid={this.state.tresourceid} start={parseInt(this.props.textPreviewStart)} stop={parseInt(this.props.textPreviewEnd)} context={true} showTokenPosition={this.state.showTokenPosition}/>\n      <span className=\"lbp-span-link\" alt=\"show word token position\" onClick={this.handleToggleShowTokenPosition}>{this.state.showTokenPosition ? <FaToggleOn/> : <FaToggleOff/>}</span>\n       </div>\n      }\n      </Container>\n    );\n  }\n}\n\nexport default TextPreviewWrapper;\n"," export function getCanonicalTranscription(resourceid){\n   const query = [\n      \"SELECT DISTINCT ?ctranscription ?longTitle \",\n      \"WHERE { \",\n        \"{\",\n          \"<\" + resourceid + \"> <http://scta.info/property/hasCanonicalManifestation> ?manifestation .\",\n          \"?manifestation <http://scta.info/property/hasCanonicalTranscription> ?ctranscription .\",\n        \"}\",\n        \"UNION\",\n        \"{\",\n          \"BIND(<\" + resourceid + \"> AS ?ctranscription ) . \",\n          \"?ctranscription a <http://scta.info/resource/transcription> .\",\n        \"}\",\n        \"UNION\",\n        \"{\",\n          \"<\" + resourceid + \"> <http://scta.info/property/hasCanonicalTranscription> ?ctranscription .\",\n        \"}\",\n        \"?ctranscription <http://scta.info/property/isTranscriptionOf> ?m .\",\n        \"?m <http://scta.info/property/isManifestationOf> ?e .\",\n        \"?e <http://scta.info/property/longTitle> ?longTitle .\",\n      \"}\"\n      ].join(' ');\n  return query\n }\n","//vendor imports\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from 'react-bootstrap/Button';\nimport {Link} from 'react-router-dom';\nimport {FaExternalLinkAlt} from 'react-icons/fa';\n\n\n//internal imports\nimport Surface3Wrapper from './Surface3Wrapper'\n//import Comments from './Comments'\nimport {runQuery} from './utils'\nimport {getSurfaceInfo} from '../queries/SurfaceInfoQuery'\n\nclass SurfaceInfo extends React.Component {\n  constructor(props){\n    super(props)\n    this.handleToggleRelatedDiscussion = this.handleToggleRelatedDiscussion.bind(this)\n    this.handleSurface3Manifestations = this.handleSurface3Manifestations.bind(this)\n    this.handleToggleShowQuery = this.handleToggleShowQuery.bind(this)\n    this.handleToggleShowImages = this.handleToggleShowImages.bind(this)\n    this.state = {\n      expressions: [],\n      surfaceMap: {},\n      showTextRegion: false,\n      showQuery: false,\n      query: \"\"\n    }\n  }\n  handleToggleShowQuery(){\n    this.setState((prevState) => {\n      return {\n        showQuery: !prevState.showQuery\n      }\n    })\n  }\n  handleSurface3Manifestations(manifestations, eid){\n    console.log(\"test\", manifestations, eid)\n    let newManifestations = \"\"\n    if (typeof manifestations === \"object\"){\n      newManifestations = manifestations.map((m) =>{\n        return {\n          manifestation: m,\n          manifestationTitle: m.split(\"/resource/\")[1],\n          transcription: \"\"\n        }\n      })\n    }\n    // sometimes there is only manifestation not in an array\n    else if (manifestations){\n      newManifestations = [{\n        manifestation: manifestations,\n        manifestationTitle: manifestations.split(\"/resource/\")[1],\n        transcription: \"\"\n      }]\n    }\n    const split1 = this.props.surfaceid.split(\"/resource/\")[1]\n    const codexSlug = split1.split(\"/\")[0]\n    const surface3FocusedManifestation = newManifestations ? newManifestations.filter((m) => m.manifestation.includes(codexSlug))[0].manifestation : \"\"\n\n    return {\n      surface3Manifestations: newManifestations,\n      surface3FocusedManifestation: surface3FocusedManifestation\n    } \n  }\n  \n  handleToggleRelatedDiscussion(eid){\n    this.setState((prevState) => {\n      const target = prevState.expressions.find((e) => e.expressionid === eid )\n      target.showComments = !target.showComments\n      const newExpressions = [...prevState.expressions]\n      return {\n        expressions: newExpressions\n      }\n    })\n\n  }\n  handleToggleRelatedSurfaces(eid){\n    this.setState((prevState) => {\n      const target = prevState.expressions.find((e) => e.expressionid === eid )\n      target.showRelatedSurfaces = !target.showRelatedSurfaces\n      const newExpressions = [...prevState.expressions]\n      return {\n        expressions: newExpressions\n      }\n    })\n\n  }\n  handleToggleShowImages(eid){\n    this.setState((prevState) => {\n      const target = prevState.expressions.find((e) => e.expressionid === eid )\n      target.showImages = !target.showImages\n      const newExpressions = [...prevState.expressions]\n      return {\n        expressions: newExpressions\n      }\n    })\n\n  }\n\n  \n  retrieveSurfaceInfo(surfaceid){\n    const query = getSurfaceInfo(surfaceid)\n    const surfaceInfo = runQuery(query)\n    surfaceInfo.then((d) => {\n      if (d.data[\"@graph\"]){\n        const data = d.data[\"@graph\"]\n        const expressions = [] \n        data.forEach((e) => {\n          console.log(\"e\", e)\n          if (e.hasManifestation){\n            const surface3Manifestations = this.handleSurface3Manifestations(e.hasManifestation, e[\"@id\"])\n            console.log(\"test\", surface3Manifestations)\n            expressions.push({\n              expressionid: e[\"@id\"],\n              manifestations: e.hasManifestation,\n              surface3Manifestations: surface3Manifestations,\n              showComments: false,\n              showRelatedSurfaces: false,\n              showImages: false,\n            })\n          }\n          else{\n            return null\n          }\n        })\n        let surfaceMap = {}\n        data.forEach((e) => {\n          if (e.isOnSurface){\n            surfaceMap[e[\"@id\"]] = e.isOnSurface\n          }\n        })\n        console.log(\"expressions\", expressions)\n        this.setState({\n          expressions: expressions,\n          surfaceMap: surfaceMap,\n          query: query\n        })\n      }\n    })\n  }\n\n  componentDidMount(){\n    this.retrieveSurfaceInfo(this.props.surfaceid)\n  }\n  componentDidUpdate(prevProps){\n    if (this.props.surfaceid !== prevProps.surfaceid){\n      this.retrieveSurfaceInfo(this.props.surfaceid)\n    }\n  }\n  render(){\n    const displayExpressions = () => {\n      if (this.state.expressions.length > 0){\n        const expressions = this.state.expressions.map((e) => {\n          let manifestations = \"\"\n          // sometimes there are several manifestations\n          if (typeof(e.hasManifestation) === \"object\"){\n            manifestations = e.hasManifestation.map((m) => {\n              return (\n                  <div key={m}>\n                  <span>{m} <Link to={\"/text?resourceid=\" + m}><FaExternalLinkAlt/></Link></span>\n                  <br/>\n                  <span style={{\"textIndent\": \"10px\"}}>...Appearing on Surface {this.state.surfaceMap[m]} <Link to={\"/text?resourceid=\" + this.state.surfaceMap[m]}><FaExternalLinkAlt/></Link></span>\n                  <br/>\n                  <br/>\n                  </div>\n                )\n              })\n            }\n            // sometimes there is only manifestation\n            else if (e.hasManifestation){\n              manifestations = (\n                  <div key={e.hasManifestation}>\n                  <span>{e.hasManifestation} <Link to={\"/text?resourceid=\" + e.hasManifestation}><FaExternalLinkAlt/></Link></span>\n                  <br/>\n                  <span style={{\"textIndent\": \"10px\"}}>...Appearing on Surface {this.state.surfaceMap[e.hasManifestation]} <Link to={\"/text?resourceid=\" + this.state.surfaceMap[e.hasManifestation]}><FaExternalLinkAlt/></Link></span>\n                  <br/>\n                  <br/>\n                  </div>\n                )\n              }\n              else{\n                manifestations = []\n              }\n          return (\n            <div key={e.expressionid}>\n            <hr/>\n            <p>{e.expressionid} <Link to={\"/text?resourceid=\" + e.expressionid}><FaExternalLinkAlt/></Link></p>\n            <Button variant=\"outline-primary\" size=\"sm\" block onClick={() => this.handleToggleShowImages(e.expressionid)}>{e.showImages ? \"Hide Images\" : \"Show Images\"}</Button>\n              <br/>\n              {(e.showImages && (e.surface3Manifestations && e.surface3Manifestations.surface3Manifestations.length > 0)) &&\n              <Surface3Wrapper key={e.expressionid} manifestations={e.surface3Manifestations.surface3Manifestations} focusedManifestation={e.surface3Manifestations.surface3FocusedManifestation} annotationsDisplay=\"paragraph\" width=\"501\" hidden={false}/>\n              }\n            {e.showRelatedSurfaces ?\n              <div>\n                <Button variant=\"outline-primary\" size=\"sm\" block onClick={() => {this.handleToggleRelatedSurfaces(e.expressionid)}}>Hide Related Codices</Button>\n              <br/>\n              {manifestations}\n              </div> :\n              <div>\n                <Button variant=\"outline-primary\" size=\"sm\" block onClick={() => {this.handleToggleRelatedSurfaces(e.expressionid)}}>Show Related Codices</Button>\n                <br/>\n              </div>\n            }\n            </div>\n          )\n        })\n        return expressions\n      }\n      else{\n        return null\n      }\n    }\n\n    return (\n      <div className={this.props.hidden ? \"hidden\" : \"showing\"}>\n      <h1>Page Info</h1>\n        <div style={{\"fontSize\": \"16px\"}}>\n        <h1>Text objects on this page <Button size=\"sm\" className=\"lbp-span-link\" onClick={this.handleToggleShowQuery}>{this.state.showQuery ? \"Hide Proof\" : \"Prove It!\"}</Button></h1>\n        {this.state.showQuery && <p>{this.state.query}</p>}\n        {displayExpressions()}\n        </div>\n\n      </div>\n    );\n  }\n}\n\nSurfaceInfo.propTypes = {\n  /**\n  * SCTA rdf url surfaceid to use when performing SPARQL query\n  */\n surfaceid: PropTypes.string.isRequired,\n /**\n  * a parent function to be triggered to indicate a new view display; namely \"swithc to viewTextFocused Region\"\n  */\n handleSurface3Manifestations: PropTypes.func\n}\n\n\nexport default SurfaceInfo;\n","//note; each query here represents an attempt an efficient single request for related information\n//each query therefore could be tranformed into a restful api\n\n\n export function getSurfaceInfo(surfaceid){\n   const query = [\n     \"CONSTRUCT\",\n     \"{\",\n     \"?expression <http://scta.info/property/hasManifestation> ?manifestation2 .\",\n     \"?manifestation2 <http://scta.info/property/isOnSurface> ?surface2 .\",\n     \"}\",\n     \"WHERE\",\n     \"{\",\n     \"?manifestation <http://scta.info/property/isOnSurface> <\" + surfaceid + \"> .\",\n     \"?manifestation <http://scta.info/property/structureType> <http://scta.info/resource/structureBlock> .\",\n     \"?manifestation <http://scta.info/property/isManifestationOf> ?expression .\",\n     \"?expression <http://scta.info/property/totalOrderNumber> ?order .\",\n     \"?expression <http://scta.info/property/hasManifestation> ?manifestation2 .\",\n     \"?manifestation2 <http://scta.info/property/isOnSurface> ?surface2 .\",\n     \"?codex <http://scta.info/property/hasSurface> ?surface2 .\",\n     \"}\"\n   ].join('');\n   return query\n }\n","import React from 'react';\n\nfunction WorkGroupInfo(props) {\n  return (\n    <div className={props.hidden ? \"hidden\" : \"showing\"}>\n      <h1>WorkGroupInfo</h1>\n\n    </div>\n  );\n}\n\nexport default WorkGroupInfo;\n","import React, {useState} from 'react';\n//import Nav from 'react-bootstrap/Nav';\n//import {FaBook} from 'react-icons/fa';\n\nfunction Dictionary(props) {\n  //const [dictionary, setDictionary] = useState(\"logeion\")\n  const [dictionary] = useState(\"logeion\")\n\n  return (\n    <div className={props.hidden ? \"hidden dict-container\" : \"showing dict-container\"} >\n      {/* commented out because whitaker's words does not run over https and therefore is not accessible as iframe on https sites<Nav>\n        {(dictionary === 'whitakerswords') ? \n        <Nav.Link title=\"select logeion\" onClick={()=>setDictionary(\"logeion\")}><FaBook/> Logeion</Nav.Link>\n        : \n        <Nav.Link title=\"select whitaker's words\" onClick={()=>setDictionary(\"whitakerswords\")}><FaBook/> Whitaker's Words</Nav.Link>}\n      </Nav> */}\n      {(props.text && props.text.split(\" \").length === 1) && \n      <div className=\"dict-container2\">\n        {\n        dictionary === \"logeion\" ? <iframe className=\"dict-iframe\" title=\"logeion\" src={\"https://logeion.uchicago.edu/\" + props.text }></iframe> \n        : \n        <iframe className=\"dict-iframe\" title=\"whitakerswords\" src={\"http://archives.nd.edu/cgi-bin/wordz.pl?keyword=\" + props.text }></iframe> \n        }\n        </div>\n      }\n    </div>\n\n    \n  );\n}\n\nexport default Dictionary;","export function getAvailableComponents(resourceType) {\n    let showComponents = []\n      switch (resourceType){\n      case \"collection\":\n        showComponents.push(\"textCitation\")\n        showComponents.push(\"textCompare\")\n        showComponents.push(\"comments\")\n        showComponents.push(\"search\")\n        break\n      case \"workGroup\":\n        showComponents.push(\"workGroupInfo\")\n        showComponents.push(\"comments\")\n        showComponents.push(\"search\")\n        break;\n      case \"person\":\n        showComponents.push(\"personInfo\")\n        showComponents.push(\"comments\")\n        showComponents.push(\"search\")\n        break;\n      case \"codex\":\n        showComponents.push(\"codex\")\n        showComponents.push(\"codexToc\")\n        showComponents.push(\"comments\")\n        showComponents.push(\"search\")\n        break;\n      case \"expressionType\":\n          showComponents.push(\"comments\")\n          showComponents.push(\"search\")\n          break;\n      case \"text\":\n        showComponents.push(\"textCitation\")\n        showComponents.push(\"textCompare\")\n        showComponents.push(\"comments\")\n        showComponents.push(\"search\")\n        showComponents.push(\"xml\")\n        showComponents.push(\"surface3\")\n        showComponents.push(\"textOutlineWrapper\")\n        break;\n      default:\n        break;\n      }\n      return showComponents\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Surface2 from \"../Surface2\"\nimport Surface3Wrapper from \"../Surface3Wrapper\"\nimport XmlView from \"../XmlView\"\nimport WindowNavBar from \"./WindowNavBar\"\nimport NextPrevBar from \"../NextPrevBar\"\nimport TextCompareWrapper from \"../TextCompareWrapper\"\nimport Search3 from \"../Search3\"\nimport PersonInfo from \"../PersonInfo\"\nimport Comments2 from \"../Comments2\"\nimport CitationWrapper from \"../CitationWrapper\"\nimport TextOutlineWrapper from \"../TextOutlineWrapper\"\nimport CodexToc from \"../CodexToc\"\nimport TextPreviewWrapper from \"../TextPreviewWrapper\"\nimport SurfaceInfo from \"../SurfaceInfo\"\nimport WorkGroupInfo from \"../WorkGroupInfo\"\nimport Dictionary from \"../Dictionary\"\nimport {getAvailableComponents} from \"./WindowUtil\"\n\nimport {FaSearch, FaGripVertical, FaCode, FaInfo, FaRegImage, FaComments, FaAlignLeft} from 'react-icons/fa';\n\n\n\nclass Window2 extends React.Component {\n  constructor(props){\n    super(props)\n    this.handleToggleTextLinesView = this.handleToggleTextLinesView.bind(this)\n    this.handleChangeManifestation = this.handleChangeManifestation.bind(this)\n    this.state = {\n      windowLoad: \"\",\n      mountStatus: {\n        textCompare: false,\n        surface3: false,\n        comments: false,\n        xml: false,\n        search:  false,\n        textOutline: false,\n        citation: false\n      }\n\n    }\n  }\n  // used to control default iamge view prop for surface3 component\n  handleToggleTextLinesView(view){\n    this.props.handleToggleTextLinesView(this.props.windowId, view)\n  }\n  // used to control default manifestation prop for surface3 component\n  handleChangeManifestation(manifestation){\n    // to do getting manifestation slug, to apply as default view\n    // TODO: it is precarious to get info like this by deconstructing identifier\n    // it would better if this information were being passed from original db look up\n    const manifestationSlug = manifestation.split(\"/resource/\")[1].split(\"/\")[1]\n    this.props.handleChangeManifestation(this.props.windowId, manifestationSlug)\n  }\n  componentDidMount(){\n    this.setState(\n      {windowLoad: this.props.windowLoad}\n    )\n  }\n  componentDidUpdate(prevProps){\n    //when receiving props we check first to see if a new resource id is present,\n    // if so, mounting status for all window child components is set back to false\n    let newMountStatus = {}\n    if (this.props.resourceid !== prevProps.resourceid){\n      newMountStatus = {\n        textCompare: false,\n        surface3: false,\n        comments: false,\n        xml: false,\n        search:  false,\n        textOutline: false,\n        citation: false,\n      }\n      // then, the mount status of the opening window load is changed to true\n      newMountStatus[this.props.windowLoad] = true\n      this.setState(\n        {windowLoad: this.props.windowLoad,\n        mountStatus: newMountStatus}\n      )\n    }\n    else if (this.props.windowLoad !== prevProps.windowLoad){\n      const tempNewMount = this.state.mountStatus\n      tempNewMount[this.props.windowLoad] = true\n      newMountStatus = tempNewMount\n      this.setState(\n        {windowLoad: this.props.windowLoad,\n        mountStatus: newMountStatus}\n      )\n    }\n    else{\n      newMountStatus = this.state.mountStatus\n    }\n  }\n\n  render(){\n    const displayTextPreviewWrappers = () => {\n      //TODO: start and end numbers are not yet arrays\n      // so the same start and end numbers will get sent to each item\n      const items = this.props.textPreviewObjects.map((i, index) => {\n        return (\n          <TextPreviewWrapper key={index}\n        textPreviewResourceId={i.id} \n        textPreviewStart={i.range ? i.range.split(\"-\")[0] : null} \n        textPreviewEnd={i.range ? i.range.split(\"-\")[1] : null} \n        handleFocusChange={this.props.handleFocusChange} \n        hidden={this.state.windowLoad !== \"textPreview\"}\n        handleTextPreviewFocusChange={this.props.handleTextPreviewFocusChange}\n        referringResource={this.props.info.ctranscription}\n        referringSelectionRange={this.props.selectionRange}\n        />\n        )\n      })\n      return items\n    }\n    const displayChild = () => {\n      //NOTE possible state machine pattern based on focus structureType\n      //different options should be available depending on the focus structureType\n      \n      //const structureType = this.props.info.structureType\n      //const isCollection = structureType === \"http://scta.info/resource/structureCollection\" || false\n\n      \n      //TODO: use of props.info, itemFocus, focusResearceid, resourceid vs info.resourceid needs to be better organized and clarified\n      //props.info.resourceid seems redundant with props.resourceid; doesn't seem to do any harm\n      // but in this component props.info will not always be available so props.resourceid should be used. \n      \n\n      const displayComponents = getAvailableComponents(this.props.resourceType)\n      return(\n        <div>\n          \n          {\n            // NOTE: performance seems a lot better when these mount only when clicked on\n            // some downside as it was nice to have them pre-loaded\n            // and the state doesn't remain when leaving tab and returning back to tab.\n            // for this reason search is always loaded, so that search results remain when moving between tabs.\n            // a compromise approach could be made for similar resources, where some components are dismounted and some are hiddden\n          }\n            {\n            displayComponents.includes(\"textCompare\")\n            && \n            (this.state.windowLoad === \"textCompare\" || this.state.mountStatus.textCompare) \n            && \n            <TextCompareWrapper \n              info={this.props.info}  \n              surfaceWidth={this.props.windowType === 'bottomWindow' ? \"1000\" : \"501\"}\n              hidden={this.state.windowLoad !== \"textCompare\"}\n              selectionRange={this.props.selectionRange}\n            />\n            }\n            {\n            displayComponents.includes(\"textCitation\") \n            && \n            (this.state.windowLoad === \"citation\" || this.state.mountStatus.citation) \n            &&\n            <CitationWrapper tresourceid={this.props.info.resourceid + this.props.mtFocus} \n            manifestations={this.props.info.manifestations} \n            handleFocusChange={this.props.handleFocusChange} \n            hidden={this.state.windowLoad !== \"citation\"}\n            selectionRange={this.props.selectionRange}\n            />\n            }\n            {\n            displayComponents.includes(\"personInfo\") \n            && \n            (this.state.windowLoad === \"citation\" || this.state.mountStatus.citation) \n            && \n            <PersonInfo \n              resourceid={this.props.resourceid} \n              hidden={this.state.windowLoad !== \"citation\"}\n            />\n            }\n            {\n            displayComponents.includes(\"workGroupInfo\") \n            && \n            (this.state.windowLoad === \"citation\" || this.state.mountStatus.citation) \n            && \n            <WorkGroupInfo \n              resourceid={this.props.resourceid} \n              hidden={this.state.windowLoad !== \"citation\"}\n            />\n            }\n            {\n            displayComponents.includes(\"codex\") \n            && \n            (this.state.windowLoad === \"textCompare\" || this.state.mountStatus.textCompare) \n            && \n            <SurfaceInfo \n              surfaceid={this.props.surfaceid} \n              resourceid={this.props.resourceid} \n              codexResourceType={this.props.codexResourceType}\n              hidden={this.state.windowLoad !== \"textCompare\"}\n            />\n            }\n            {\n            displayComponents.includes(\"surface3\")  \n            && \n            (this.state.windowLoad === \"surface3\" || this.state.mountStatus.surface3) \n            &&  \n            <Surface3Wrapper\n            manifestations={this.props.info.manifestations}\n            focusedManifestation={this.props.defaultManifestationSlug ? this.props.resourceid + \"/\" + this.props.defaultManifestationSlug : this.props.resourceid + \"/\" + this.props.mtFocus.split(\"/\")[1]}\n            annotationsDisplay={this.props.annotationsDisplay}\n            handleToggleTextLinesView={this.handleToggleTextLinesView}\n            handleChangeManifestation={this.handleChangeManifestation}\n            width={this.props.windowType === 'bottomWindow' ? \"1000\" : \"501\"}\n            lineFocusId={this.props.lineFocusId}\n            hidden={this.state.windowLoad !== \"surface3\"}/>\n            }\n            \n            {\n              displayComponents.includes(\"comments\")  \n              &&\n              (this.state.windowLoad === \"comments\" || this.state.mountStatus.comments) \n              &&  \n              <Comments2 \n                resourceid={this.props.resourceid + this.props.mtFocus}\n                expressionid={this.props.resourceid} \n                hidden={this.state.windowLoad !== \"comments\"}\n                selectionRange={this.props.selectionRange} // this will only apply at resourceType=text level\n              />\n            }\n            {displayComponents.includes(\"xml\") \n            && (this.state.windowLoad === \"xml\" || this.state.mountStatus.xml) \n            &&  \n            <XmlView \n            tresourceid={this.props.info ? this.props.info.resourceid + this.props.mtFocus : this.props.itemFocus.expression + this.props.mtFocus} \n            hidden={this.state.windowLoad !== \"xml\"}/>\n            }\n          {\n            //NOTE: always load outline (i.e. don't check mountStatus) since it reduces number of calls, as most info is the same for all paragraphs\n          }\n          {\n          displayComponents.includes(\"textOutlineWrapper\") \n          &&\n          <TextOutlineWrapper \n            focusResourceid={this.props.info ? this.props.info.resourceid : this.props.itemFocus.expression} \n            resourceid={this.props.info.topLevel} \n            title={this.props.info.topLevel} \n            hidden={this.state.windowLoad !== \"textOutlineWrapper\"} \n            mtFocus={this.props.mtFocus}\n            collectionLink={true}/> \n          }\n          {\n          displayComponents.includes(\"codexToc\") \n          &&\n          <CodexToc \n            resourceid={this.props.resourceid}\n            codexResourceType={this.props.codexResourceType}\n            hidden={this.state.windowLoad !== \"citation\"} \n          />\n          }\n          {\n            //NOTE: always load search (i.e. don't check mountStatus) to keep search results present even when navigating two different tabs\n          }\n          { displayComponents.includes(\"search\") \n          &&\n          <Search3\n            hidden={this.state.windowLoad !== \"search\"}\n            searchEid={this.props.info ? this.props.info.topLevel : this.props.resourceType === \"collection\" && this.props.resourceid}\n            searchAuthor={this.props.info ? this.props.info.author : this.props.resourceType === \"person\" && this.props.resourceid} \n            searchEType={this.props.resourceType === \"expressionType\" && this.props.resourceid}\n            searchWorkGroup={this.props.resourceType === \"workGroup\" && this.props.resourceid}\n            searchType=\"text\"\n            showSubmit={true}\n            showAdvancedParameters={true}\n            showLabels={false}\n            searchTerm={(this.props.selectionRange && this.props.selectionRange.text) ? '\"' + this.props.selectionRange.text + '\"' : \"\"}\n            />\n          }\n          \n          {\n            // text preview wrapper -- loads a text preview from expression resource id\n            this.state.windowLoad === \"textPreview\" &&  displayTextPreviewWrappers()\n          }\n          {\n            (this.state.windowLoad === \"dictionary\" && this.props.selectionRange.text) &&\n            <Dictionary text={this.props.selectionRange.text} hidden={this.state.windowLoad !== \"dictionary\"}/>\n          }\n          {\n            this.state.windowLoad === \"surface2\" \n            &&  \n            <Surface2 \n              surfaceid={this.props.surfaceid} \n              lineFocusId={this.props.lineFocusId} \n              topLevel={this.props.info.topLevel} \n              handleSurfaceFocusChange={this.props.handleSurfaceFocusChange} \n              handleLineFocusChange={this.props.handleLineFocusChange} \n              hidden={this.state.windowLoad !== \"surface2\"}\n            />\n            }\n        </div>\n      )\n\n    }\n  \n    // TODO/NOTE: perhaps tabs should be pushed to array with component above; the same logic should apply to component as \n    // to its corresponding tab. So this should really be done once instead of twice.\n    const getAvailableTabs = () => {\n      const displayComponents = getAvailableComponents(this.props.resourceType)\n      return [\n      {\n        name: \"citation\",\n        desc: \"Text Citation\",\n        show: displayComponents.includes(\"textCitation\") \n        || displayComponents.includes(\"textCitation\")\n        || displayComponents.includes(\"personInfo\")\n        || displayComponents.includes(\"codexToc\")\n        || displayComponents.includes(\"workGroupInfo\"),\n        icon: <FaInfo/>\n      },\n      {\n        name: \"surface3\",\n        desc: \"Images\",\n        show: displayComponents.includes(\"surface3\"),\n        icon: <FaRegImage/>\n      },\n      {\n        name: \"xml\",\n        desc: \"Text XML Source\",\n        show: displayComponents.includes(\"xml\"),\n        icon: <FaCode/>\n      },\n      {\n        name: \"textCompare\",\n        desc: \"Text Comparisons\",\n        show: displayComponents.includes(\"textCompare\")\n        || displayComponents.includes(\"codex\"),\n        icon: <FaGripVertical/>\n      },\n      {\n        name: \"comments\",\n        desc: \"Comments\",\n        show: displayComponents.includes(\"comments\"),\n        icon: <FaComments/>\n      },\n      {\n        name: \"textOutlineWrapper\",\n        desc: \"Text Outline\",\n        show: displayComponents.includes(\"textOutlineWrapper\"),\n        icon: <FaAlignLeft/>\n      },\n      {\n        name: \"search\",\n        desc: \"Text Search\",\n        show: displayComponents.includes(\"search\"),\n        icon: <FaSearch/>\n      }\n    ]\n  }\n  return (\n    <div className={this.props.windowType + \" \" + this.props.windowType + this.props.openWidthHeight}>\n      <WindowNavBar handleTabChange={this.props.handleTabChange}\n      handleClose={this.props.handleClose}\n      handleMinimize={this.props.handleMinimize}\n      handleMaximize={this.props.handleMaximize}\n      handleMiddlize={this.props.handleMiddlize}\n      windowType={this.props.windowType}\n      openWidthHeight={this.props.openWidthHeight}\n      windowId={this.props.windowId}\n      windowLoad={this.props.windowLoad}\n      focus={this.props.resourceid}\n      handleSwitchWindow={this.props.handleSwitchWindow}\n      handleDuplicateWindow={this.props.handleDuplicateWindow}\n      altWindowState={this.props.altWindowState}\n      focusSet={!!this.props.info}\n      availableTabs={getAvailableTabs()}\n      />\n      {(this.state.windowLoad !== \"surface2\" && this.state.windowLoad !== \"dictionary\" ) \n      && <NextPrevBar \n      info={this.props.info} \n      handleBlockFocusChange={this.props.handleBlockFocusChange}\n      selectionRange={this.props.selectionRange}\n      />}\n\n      {displayChild()}\n\n    </div>\n    );\n  }\n}\n\nWindow2.propTypes = {\n  /**\n  * Window Component\n  * \n  * \n  **/\n  handleClose: PropTypes.func, //={this.handleClose}\n  handleMinimize: PropTypes.func, //{this.handleMinimize}\n  handleMaximize: PropTypes.func, //{this.handleMaximize}\n  handleMiddlize: PropTypes.func, //{this.handleMiddlize} //TODO these functions could be reduced to window resize object\n  handleTabChange: PropTypes.func, //{this.handleTabChange}\n  handleBlockFocusChange: PropTypes.func, //={this.setFocus} //TODO this should be replaced by handleFocusChange\n  handleFocusChange: PropTypes.func, //={this.setFocus2} //TODO this should replace handleBlockFocusChange\n  handleSurfaceFocusChange: PropTypes.func, //={this.handleSurfaceFocusChange}\n  handleSwitchWindow: PropTypes.func, //={this.handleSwitchWindow}\n  handleDuplicateWindow: PropTypes.func, //{this.handleDuplicateWindow}\n  resourceid: PropTypes.string, //={this.state.focus ? this.state.focus.resourceid : this.props.resourceid}\n  windowType: PropTypes.string, //={this.state.windows[key].position}\n  windowId: PropTypes.string, //={this.state.windows[key].windowId}\n  windowLoad: PropTypes.string, //{this.state.windows[key].windowLoad}\n  openWidthHeight: PropTypes.string, //{this.state.windows[key].openWidthHeight}\n  surfaceid: PropTypes.string, // {this.state.surfaceid}\n  lineFocusId: PropTypes.string, //{this.state.lineFocusId}\n  //info: PropTypes.object, // {this.state.focus} \n  //itemFocus: PropTypes.string, // ={this.state.itemFocus} //Todo standardize this as scta url id, instead of short id\n  altWindowState: PropTypes.bool, // {this.state.windows[key].windowId === \"window1\" ? this.state.windows[\"window2\"].open : this.state.windows[\"window1\"].open} TODO could this be combined as part of a windowsParameter Object\n  mtFocus: PropTypes.string, //{this.state.mtFocus}\n  handleToggleTextLinesView: PropTypes.func, //={this.handleToggleTextLinesView}\n  annotationsDisplay: PropTypes.string, //{this.state.windows[key].annotationsDisplay} //TODO; reduce and combine by just passing windows[key]\n  handleChangeManifestation: PropTypes.func, //{this.handleChangeManifestation}\n  defaultManifestationSlug: PropTypes.string, //={this.state.windows[key].defaultManifestationSlug}: TODO as part of windows object pass\n  textPreviewObjects: PropTypes.array, //{this.state.textPreviewObjects}\n  handleTextPreviewFocusChange: PropTypes.func, //{this.handleTextPreviewFocusChange}\n  handleLineFocusChange: PropTypes.func, //{this.handleLineFocusChange}\n  selectionRange: PropTypes.object //{this.state.selectionRange}\n}\n\nexport default Window2;\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport { withTranslation } from 'react-i18next';\n\n\nconst TextNavBar = (props) => {\n  \n    const { t } = props;\n    return (\n      <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" fixed=\"bottom\">\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav>\n          {props.previous && <NavLink className=\"nav-link\" to={\"/text?resourceid=\" + props.previous + props.mtFocus}>{t(\"Previous\")}</NavLink>}\n          {props.next && <NavLink className=\"nav-link\" to={\"/text?resourceid=\" + props.next + props.mtFocus}>{t(\"Next\")}</NavLink>}\n          {props.topLevel && <NavLink className=\"nav-link\" to={\"/text?resourceid=\" + props.topLevel}>{t(\"Text Home\")}</NavLink>}\n          {props.pdfView ? <span className=\"nav-link\" onClick={()=>props.handleTogglePdfView()}>{t(\"Web View\")}</span> : <span className=\"nav-link\" onClick={()=>props.handleTogglePdfView()}>{t(\"Print View\")}</span>}\n        </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n    );\n}\n\nexport default withTranslation()(TextNavBar);\n","\nimport React from 'react';\nimport Spinner from './Spinner';\nimport $ from 'jquery';\nimport {convertXMLDoc, scrollToParagraph, loadHtmlResultDocFromExist, toRange, cleanText, getContainingP, getRangeWordCount, createRange, goToGitHubEdit} from './utils'\nimport ReactTooltip from 'react-tooltip';\nimport Nav from 'react-bootstrap/Nav';\nimport {FaComments, FaEdit, FaInfo, FaBook, FaSearch} from 'react-icons/fa';\n\nclass Text extends React.Component {\n  constructor(props){\n    super(props)\n    this.retrieveText = this.retrieveText.bind(this)\n    this.handleShowToolTip = this.handleShowToolTip.bind(this)\n    this.handleHideToolTip = this.handleHideToolTip.bind(this)\n    this.handleHideFootnoteToolTip = this.handleHideFootnoteToolTip.bind(this)\n    this.handleShowFootnoteToolTip = this.handleShowFootnoteToolTip.bind(this)\n    this.handleOnToolTipClick = this.handleOnToolTipClick.bind(this)\n    this.mounted = \"\";\n    this.state = {\n      fetching: false,\n      // state.selectionRange is puposevively different than props.selection Range\n      // it governs selection state of component without yet changing focus selection State of the entire app\n      selectionRange: \"\", \n      selectionCoords: \"\",\n      dictionary: \"\"\n    }\n  }\n  retrieveText(doc, topLevel, scrollTo, selectionRange){\n    const _this = this;\n    \n    if (doc){\n      //construct file url request ot exist db to get a cors enabled copy of the text (github does not serve files with cors enabled)\n      const doc = this.props.doc;\n      const topLevel = this.props.topLevel;\n      const docFragment = doc.split(\"/master/\")[1]\n      const topLevelFragment = topLevel.split(\"/resource/\")[1]\n      \n      let xmlurl = \"\"\n      if (doc.includes(\"ipfs\")){\n        xmlurl = doc\n      }\n      else{\n        xmlurl = \"https://exist.scta.info/exist/apps/scta-app/text/\" + topLevelFragment + \"/\" + docFragment;\n      }\n      const xslurl = \"/xslt/main_view.xsl\"\n\n      //Begin fetch and conversion\n      this.setState({fetching: true})\n      //frist try to request html converted by eXist\n      const resultDocument = loadHtmlResultDocFromExist(xmlurl)\n      resultDocument.then((data) => {\n        //uncomment \"throw\" to force use of local xslt\n        //throw \"test exception\" \n        this.setState({fetching: false})\n        //appendage to file\n        //and event binding\n        //happens inside promise call back\n        document.getElementById(\"text\").innerHTML = \"\";\n        document.getElementById(\"text\").innerHTML = data.data;\n        // add event binding\n        this.setEvents(_this, scrollTo, selectionRange)\n      })\n      .catch((e) => {\n        // if eXist conversion fails, do conversion in browser\n        const resultDocument = convertXMLDoc(xmlurl, xslurl)\n        resultDocument.then((data) => {\n          this.setState({fetching: false})\n          document.getElementById(\"text\").innerHTML = \"\";\n          document.getElementById(\"text\").appendChild(data)\n          // add event binding\n          this.setEvents(_this, scrollTo, selectionRange)\n          }).catch((e) => {\n            //if browswer conversion fails, log error message\n            console.log(\"something went wrong\", e)\n            document.getElementById(\"text\").innerHTML = \"\";\n            document.getElementById(\"text\").innerHTML = \"<p>Apologies, the document is not able to be loaded at this time</p>\";\n          })\n        })\n      }\n  }\n\n  setEvents(_this, scrollTo, selectionRange){\n\n    $('.paragraphnumber').click(function(e) {\n      e.preventDefault();\n      const id = $(this).parent(\"p\").attr('id')\n      _this.props.setFocus(id)\n      _this.props.openWindow(\"window1\")\n    });\n    if (scrollTo){\n     scrollToParagraph(scrollTo, true)\n   }\n   if(selectionRange){\n    _this.markWithElement(selectionRange)\n  }\n\n   $('.js-show-folio-image').click(function(e) {\n     e.preventDefault();\n     const surfaceid = $(this).attr('data-surfaceid');\n     const paragraphid = $(this).closest('.plaoulparagraph').attr(\"id\");\n\n     _this.props.setFocus(paragraphid)\n     _this.props.handleSurfaceFocusChange(\"http://scta.info/resource/\" + surfaceid)\n     _this.props.openWindow(\"window2\", \"surface2\")\n   });\n\n   $('.lbp-line-number').click(function(e) {\n     e.preventDefault();\n     const surfaceid = $(this).attr('data-surfaceid');\n     const ln = $(this).attr('data-ln');\n     const paragraphid = $(this).closest('.plaoulparagraph').attr(\"id\");\n\n     _this.props.setFocus(paragraphid)\n     _this.props.handleSurfaceFocusChange(\"http://scta.info/resource/\" + surfaceid)\n     _this.props.handleLineFocusChange(\"http://scta.info/resource/\" + surfaceid + \"/\" + ln)\n     _this.props.openWindow(\"window2\", \"surface2\")\n   });\n\n   $('.appnote, .footnote').click(function(e) {\n        e.preventDefault();\n        $(this).attr(\"data-tip\", \"hello world\")\n        const link = $(this).parent().children('.appnote, .footnote')\n        const target = $(link).attr('href')\n        const text = $(target).html()\n        const footnoteOffset = this.getBoundingClientRect()\n        _this.setState({footnoteText: text, footnoteOffset: footnoteOffset})\n        _this.handleShowFootnoteToolTip()\n        const targetText = $(this).parent().children(\".note-display\").attr('data-target-id')\n        $(\".highlight\").removeClass(\"highlight\")\n        $(\"#\" + targetText).addClass(\"highlight\")\n        $(\"span[data-corresp=\" + targetText + \"]\").addClass(\"highlight\")\n          \n      \n      });\n\n      $(document).on(\"click\", '.js-show-info', function(e) {\n         e.preventDefault();\n         const id = $(this).attr('data-pid')\n         _this.props.setFocus(id)\n         _this.props.openWindow(\"window1\")\n       });\n       // this seems like a repetition of line 88\n       if (scrollTo){\n        scrollToParagraph(scrollTo, true)\n      }\n\n      $(document).on(\"click\", '.show-line-witness', function(e) {\n\n        e.preventDefault();\n        const surfaceid = $(this).attr('data-surfaceid');\n        const ln = $(this).attr('data-ln');\n        \n\n        //const paragraphid = $(this).closest('.plaoulparagraph').attr(\"id\");\n        //_this.props.setFocus(paragraphid)\n\n        _this.props.handleSurfaceFocusChange(\"http://scta.info/resource/\" + surfaceid)\n        _this.props.handleLineFocusChange(\"http://scta.info/resource/\" + surfaceid + \"/\" + ln)\n        _this.props.openWindow(\"window2\", \"surface2\")\n      });\n\n      $(document).on(\"click\", '.js-show-reference-paragraph', function(e){\n       e.preventDefault();\n       /** @type {string} */\n       const targetParagraph = $(this).attr('data-target-resource')\n       /** @type {string} */\n       const targetIds = $(this).attr('data-url')\n       /** @type {Array} */\n       const splitTargetId = targetIds.split(\" \")\n       /** @type {string} */\n       const targetRange = $(this).attr('data-target-range')\n       /** @type {Array} */\n       const splitTargetRange = targetRange ? targetRange.split(\" \") : null\n       /** @type {Array} */\n       const targetObjects = splitTargetId.map((i, index) => {\n         return {\n           id: i,\n           range: splitTargetRange ? splitTargetRange[index] : null\n         }\n       })\n      \n       // set the desired text preview focus to the target of the reference\n       _this.props.handleTextPreviewFocusChange(targetObjects)\n       //opening bottomw window 2 to textPreview\n       _this.props.openWindow(\"window2\", \"textPreview\")\n\n   // NOTE: Order seems to make a difference here (at least in the production version)\n   // calling this.props.setFocus before handleTextPreviewFocusChange and openWindow\n   // was causing a reload that prevented desired functionality (but not on local version, only on production/deployed version)\n   // TODO: investigate further, because even thought the re-arranged order seems to be working\n   // the problem is likely to do with async timing (i.e. on job finish before another)\n   //which could vary in different enviornments\n\n       //setting paragraph focus for paragraph containing target footnote\n       _this.props.setFocus(targetParagraph)\n     })\n\n\n\n     \n      function mark(e) {\n        // hide tooltip\n        _this.handleHideToolTip();\n        //get selection object\n        var sel = document.getSelection();\n        // condition to test against invalid getRangeAt index\n        if (window.getSelection().rangeCount >= 1){\n          var rng = sel && sel.getRangeAt(0);\n          const pAncestor = getContainingP(rng.commonAncestorContainer)\n          //if selection is in a text paragraph\n          //TODO: improve this so that selections within .appnote or .footnote get excluded\n          if (pAncestor && pAncestor.className.includes(\"plaoulparagraph\")){\n            const selectedElementTargetId = pAncestor.id;\n            var cnt = rng.cloneContents();\n            $(cnt).find(\".lbp-line-number, .paragraphnumber, br, .lbp-folionumber, .appnote, .footnote, .lbp-reg\").remove();\n            // if selection is greater than 0 \n            if (cnt.textContent.length > 0){\n              //get ancestor p text\n              const pClone = $(pAncestor).clone()\n              pClone.find(\".lbp-line-number, .paragraphnumber, br, .lbp-folionumber, .appnote, .footnote, .lbp-reg\").remove();\n              \n              \n              const selectionText = cleanText(cnt.textContent)\n              \n              \n              // Get preceding word token length in order to identify start word position of selected range.\n                // NOTE: this replaces  \n                //let precedingTextArray = pText.split(cleanText(selectionText))[0].split(\" \").filter(n=>n); \n                // the above split approach was finding previous instances of the select word and giving false results.\n              let startOffset;\n              let startContainer;\n              if (rng.startOffset === 0){\n                startOffset = rng.startOffset;\n                startContainer = rng.startContainer;\n              }\n              else{\n                startOffset = rng.startOffset - 1;\n                startContainer = rng.startContainer;\n\n              }\n              const precedingRange = createRange(pAncestor, pAncestor, 0, startContainer, startOffset)\n              const precedingTextLength = getRangeWordCount(precedingRange);\n              const startToken = precedingTextLength + 1\n              const endToken = precedingTextLength + (selectionText.split(\" \").filter(n=>n).length) \n              const wordRange = {start: startToken, end: endToken}\n              \n              const oRect = rng.getBoundingClientRect();\n              const selectionRange = {\n                text: selectionText,\n                wordRange, \n                selectedElementTargetId, \n              }\n\n              _this.handleShowToolTip(selectionRange, oRect);\n            }\n          }\n        }\n      }\n      document.addEventListener('keyup', mark); // ctrl+keyup\n      document.addEventListener('mouseup', mark);// ctrl+mouseup\n    }\n  /**\n  * \n  * @param {object} selectionRange    \n  */\n  markWithElement(selectionRange){\n    // remove existing mark elements\n    this.markElementRemove()\n    //only attempt to set mark if container can be found\n    const container = document.getElementById(selectionRange.selectedElementTargetId);\n    // NOTE: this conditional is a backup test, \n    //required properties should already be check in didUpdate method\n    if (container && selectionRange.wordRange){\n      const range = toRange(container, selectionRange.wordRange.start, selectionRange.wordRange.end)\n      const cnt = range.extractContents();\n      const node = document.createElement('mark');\n      node.style.backgroundColor = \"#BBCEBE\";\n      node.appendChild(cnt);\n      range.insertNode(node);\n      //get selection text from clone\n      const clone = $(node).clone();\n      $(clone).find(\".lbp-line-number, .paragraphnumber, br, .lbp-folionumber, .appnote, .footnote, .lbp-reg\").remove();\n      selectionRange.text = cleanText($(clone).text());\n      this.props.handleUpdateSelectionRange(selectionRange)\n    }\n  }\n  /**\n   * @description finds any exiting mark element and removes it\n   */\n  markElementRemove(){\n    $('mark').contents().unwrap();\n  }\n  handleOnToolTipClick(windowLoad, window = \"window1\"){\n    const selectionRange = this.state.selectionRange\n    console.log(\"selection range test\", selectionRange)\n    // send selectionRange up to App State\n    this.markWithElement(selectionRange);\n    const s = selectionRange;\n    this.props.setFocus(s.selectedElementTargetId + \"@\" + s.wordRange.start + \"-\" + s.wordRange.end)\n    // open display window\n    this.props.openWindow(window, windowLoad)\n  }\n  handleHideToolTip(){\n    ReactTooltip.hide(this.fooRef)\n  }\n  handleHideFootnoteToolTip(){\n    ReactTooltip.hide(this.foonoteRef)\n  }\n  /**\n   * @description show tool tip relative to selected text\n   * @param {{\n      text: string,\n      wordRange: object, \n      selectedElementTargetId: string,\n    }} selectionRange - object contain needed if about selectedRange\n   * @param {object} - coords object resulting from from current selection\n   */\n  handleShowToolTip(selectionRange, selectionCoords){\n    if (this.mounted) // NOTE: conditional was added because react was complaining of memory leak\n    {\n      this.setState({selectionRange: selectionRange, selectionCoords: selectionCoords})\n      ReactTooltip.show(this.fooRef)\n    }\n  }\n  handleShowFootnoteToolTip(){\n    ReactTooltip.show(this.foonoteRef)\n  }\n  componentDidMount(){\n    this.mounted = true;\n    // NOTE: ScrollToNew helps ensure that scrollTo id is SCTA ShortID, \n    // since TextWrapper is (at present) sometimes sending the shortid and sometimes the full url id\n    // TODO: when TextWrapper is refactored and consistently sending the same ID type. this should be removed\n    const scrollToNew = this.props.scrollTo && this.props.scrollTo.includes(\"/resource/\") ? this.props.scrollTo.split(\"/resource/\")[1] : this.props.scrollTo\n    this.retrieveText(this.props.doc, this.props.topLevel, scrollToNew, this.props.selectionRange)\n  }\n\n  componentDidUpdate(prevProps, prevState){\n\n    //check to see if doc has changed\n    if (prevProps.doc !== this.props.doc){\n      // NOTE: ScrollToNew helps ensure that scrollTo id is SCTA ShortID, \n      // since TextWrapper is (at present) sometimes sending the shortid and sometimes the full url id\n      // TODO: when TextWrapper is refactored and consistently sending the same ID type. this should be removed\n      const scrollToNew = this.props.scrollTo && this.props.scrollTo.includes(\"/resource/\") ? this.props.scrollTo.split(\"/resource/\")[1] : this.props.scrollTo\n      this.retrieveText(this.props.doc, this.props.topLevel, scrollToNew, this.props.selectionRange)\n    }\n    // if doc has already been appended, still scroll to target block\n    else{\n      if (this.props.scrollTo !== prevProps.scrollTo){\n        // NOTE: ScrollToNew helps ensure that scrollTo id is SCTA ShortID, \n        // since TextWrapper is (at present) sometimes sending the shortid and sometimes the full url id\n        // TODO: when TextWrapper is refactored and consistently sending the same ID type. this should be removed\n        const scrollToNew = this.props.scrollTo && this.props.scrollTo.includes(\"/resource/\") ? this.props.scrollTo.split(\"/resource/\")[1] : this.props.scrollTo\n        scrollToParagraph(scrollToNew, true)\n        \n        // set mark if object is present with required properties\n        if (this.props.selectionRange.selectedElementTargetId && this.props.selectionRange.wordRange){\n          this.markWithElement(this.props.selectionRange)\n        }\n        else{\n          this.markElementRemove()\n        }\n      }\n      // TODO/Note: this seems to be firing even when it seems like the prevProps.doc !== this.props.doc\n      // perhaps props are not changing/updating at the same time. So the doc prop has already changed\n      // then the range changes and tries to mark element, but the retrieve text asynch request has not finished \n      // and so the marking container element cannot be found. \n      // NOTE: error solved by preventing attempt to mark if container cannot be found. \n      // but it doesn't seem great that this is firing at undesired times.\n      else if (this.props.selectionRange.wordRange !== prevProps.selectionRange.wordRange && this.props.selectionRange.selectedElementTargetId){\n        this.markWithElement(this.props.selectionRange)\n      }\n      //final check if selection range required properties are removed then remove existing mark\n      else if (!this.props.selectionRange.selectedElementTargetId && !this.props.selectionRange.wordRange) {\n        this.markElementRemove()\n      }\n    }\n    \n  }\n  componentWillUnmount(){\n    this.mounted = false;\n  }\n  \n  render(){\n    const displayText = this.state.fetching ? \"none\" : \"block\"\n\n    return (\n      <div>\n        {\n          this.state.fetching\n          &&\n          <div style={{position: \"fixed\", top: \"50%\", left: \"50%\"}}>\n          <Spinner/>\n          </div>\n        }\n        \n        {this.state.selectionRange && <p ref={ref => this.fooRef = ref} data-tip='tooltip' data-for=\"selection\" style={{position: \"fixed\", top: this.state.selectionCoords.top + 10, left: this.state.selectionCoords.left}}></p>}\n        {this.state.footnoteText && <p ref={ref => this.foonoteRef = ref} data-tip='tooltip' data-for=\"footnote\" style={{position: \"fixed\", top: this.state.footnoteOffset.top + 10, left: this.state.footnoteOffset.left}}></p>}\n        <ReactTooltip clickable={true} place=\"top\" id=\"selection\">\n            {this.state.selectionRange &&\n            <Nav>\n              <Nav.Link title={this.state.selectionRange.wordRange.start + \"-\" +this.state.selectionRange.wordRange.end} onClick={() => {this.handleOnToolTipClick(\"citation\")}}><FaInfo/></Nav.Link>\n              <Nav.Link onClick={() => {this.handleOnToolTipClick(\"comments\")}}><FaComments/></Nav.Link>\n              {(this.state.selectionRange.text && this.state.selectionRange.text.split(\" \").length === 1) && \n              <Nav.Link onClick={() => {goToGitHubEdit(this.props.doc, this.state.selectionRange.text, this.state.selectionRange.selectedElementTargetId)}}><FaEdit/></Nav.Link>\n              }\n              <Nav.Link onClick={() => {this.handleOnToolTipClick(\"search\")}}><FaSearch/></Nav.Link>\n              {(this.state.selectionRange.text && this.state.selectionRange.text.split(\" \").length === 1) && \n              <Nav.Link title=\"look up word\" onClick={()=>this.handleOnToolTipClick(\"dictionary\", \"window2\")}><FaBook/></Nav.Link>\n              }\n              \n            </Nav>\n            }\n        </ReactTooltip>\n        <ReactTooltip id=\"footnote\" clickable={true} place=\"top\">\n        \n          <p dangerouslySetInnerHTML={{ __html: this.state.footnoteText}}></p>\n        </ReactTooltip>\n        <div id=\"text\" style={{display: displayText}}></div>\n      </div>\n\n    );\n  }\n}\n\nexport default Text;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nfunction Item(props) {\n  const displayItem = () => {\n    // conditions prevents attempt to render when props.item is not present\n    if (props.item){\n      return (\n        <tr>\n          {props.item.author && <td><Link to={\"/text?resourceid=\" + props.item.author}>{props.item.authorTitle}</Link></td>}\n          <td><Link to={\"/text?resourceid=\" + props.item.id}>{props.item.title}</Link></td>\n          {props.item.questionTitle && <td><Link to={\"/text?resourceid=\" + props.item.id}>{props.item.questionTitle}</Link></td>}\n        </tr>\n      )\n    }\n    else{\n      return null\n    }\n  }\n  return (\n    displayItem()\n  );\n}\n\nexport default Item;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Table from 'react-bootstrap/Table';\nimport {runQuery} from './utils'\nimport {getAuthorInformation} from './Queries'\nimport Item from \"./Item\"\n\n//import Lbp from \"lbp.js/lib\"\n\n\nclass AuthorCollection extends React.Component {\n  constructor(props){\n    super(props)\n\n    this.retrieveAuthorCollectionInfo = this.retrieveAuthorCollectionInfo.bind(this)\n    this.handleItemFilter = this.handleItemFilter.bind(this)\n    this.itemFilter = React.createRef();\n\n    this.mount = false\n    this.state = {\n      authorTitle: \"\",\n      authorArticles: [],\n      textArticles: [],\n      expressions: [],\n      itemFilter: \"\",\n    }\n\n  }\n  handleItemFilter(e){\n    const item = e.target.value\n    this.setState({itemFilter: item})\n\n  }\n  arrangeItems(itemsPromise, resourceid){\n    itemsPromise.then((d) => {\n      const author = d.data[\"@graph\"].filter((i) => i[\"@id\"] === resourceid)[0]\n      //const authorExpressions = d.data[\"@graph\"].filter((i) => {i[\"@id\"] === author.hasTopLevelExpression})\n      const authorTitle = author[\"http://purl.org/dc/elements/1.1/title\"]\n      let authorArticles = null\n      if(Array.isArray(author.authorArticle)){\n        authorArticles =  author.authorArticle.map((a) => {\n          return {\n            id: a,\n            title: d.data[\"@graph\"].filter((i) => i[\"@id\"] === a)[0][\"http://purl.org/dc/elements/1.1/title\"]\n          }\n        })\n      }\n      else if (author.authorArticle){\n        authorArticles = [{id: author.authorArticle, title: d.data[\"@graph\"].filter((i) => i[\"@id\"] === author.authorArticle)[0][\"http://purl.org/dc/elements/1.1/title\"]}]\n      }\n      let textArticles = null\n      if(Array.isArray(author.textArticle)){\n          textArticles =  author.textArticle.map((a) => {\n          return {\n            id: a,\n            title: d.data[\"@graph\"].filter((i) => i[\"@id\"] === a)[0][\"http://purl.org/dc/elements/1.1/title\"]\n          }\n        })\n      }\n      else if (author.textArticle){\n        textArticles = [{id: author.textArticle, title: d.data[\"@graph\"].filter((i) => i[\"@id\"] === author.textArticle)[0][\"http://purl.org/dc/elements/1.1/title\"]}]\n      }\n\n      let expressions = null\n      if(Array.isArray(author.hasTopLevelExpression)){\n        expressions =  author.hasTopLevelExpression.map((a) => {\n          return {\n            id: a,\n            title: d.data[\"@graph\"].filter((i) => i[\"@id\"] === a)[0][\"http://purl.org/dc/elements/1.1/title\"]\n          }\n        })\n      }\n      else if (author.hasTopLevelExpression){\n        expressions = [{id: author.hasTopLevelExpression, title: d.data[\"@graph\"].filter((i) => i[\"@id\"] === author.hasTopLevelExpression)[0][\"http://purl.org/dc/elements/1.1/title\"]}]\n      }\n      if (this.mount){\n        this.setState({authorArticles: authorArticles, textArticles: textArticles, expressions: expressions, authorTitle: authorTitle })\n      }\n    })\n    .catch((err) => {\n      console.log(err)\n    })\n  }\n  retrieveAuthorCollectionInfo(resourceid){\n    const authorCollectionInfo = runQuery(getAuthorInformation(resourceid))\n    /// add items to state\n    this.arrangeItems(authorCollectionInfo, resourceid)\n  }\n  componentDidUpdate(prevProps){\n    if (this.props.resourceid !== prevProps.resourceid){\n      this.refs.itemFilter ? this.refs.itemFilter.value = \"\" :\n      this.retrieveAuthorCollectionInfo(this.props.resourceid)\n    }\n  }\n  componentDidMount(){\n    this.mount = true\n    this.retrieveAuthorCollectionInfo(this.props.resourceid)\n\n  }\n  componentWillUnmount(){\n    this.mount = false\n  }\n  render(){\n    //const resourceid = Qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).resourceid;\n\n    const displayItems = (list) => {\n      const items = list.map((i) => {\n        return (\n\n          <Item key={i.id} item={i}/>\n\n        )\n      });\n      return items\n    }\n\n\n\n\n\n\n    return (\n      <Container className=\"collectionBody\">\n      <h1>{this.state.authorTitle}</h1>\n      \n        {this.state.expressions &&\n        <Container>\n        <h1>Expressions</h1>\n        <br/>\n        <Table striped bordered hover size=\"sm\">\n        <tbody>\n        {displayItems(this.state.expressions)}\n        </tbody>\n        </Table>\n        </Container>\n      }\n      {this.state.authorArticles &&\n        <Container>\n        <h1>Author Related Articles</h1>\n        <br/>\n        <Table striped bordered hover size=\"sm\">\n        <tbody>\n        {displayItems(this.state.authorArticles)}\n        </tbody>\n        </Table>\n        </Container>\n      }\n      {this.state.textArticles &&\n        <Container>\n        <h1>Text Related Articles</h1>\n        <br/>\n        <Table striped bordered hover size=\"sm\">\n        <tbody>\n        {displayItems(this.state.textArticles)}\n        </tbody>\n        </Table>\n        </Container>\n      }\n      </Container>\n    );\n  }\n}\n\nexport default AuthorCollection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Axios from 'axios'\nimport Alert from 'react-bootstrap/Alert';\nimport { withTranslation } from 'react-i18next';\n\nimport {runQuery} from './utils'\nimport {versionHistoryInfo} from './Queries'\n\nclass VersionChain extends React.Component {\n  constructor(props){\n    super(props)\n    this.getVersionHistory = this.getVersionHistory.bind(this)\n    this.handleToggleShowVersions = this.handleToggleShowVersions.bind(this)\n    this.state = {\n      versions: [],\n      currentVersion: \"\",\n      showVersions: false\n    }\n  }\n  handleToggleShowVersions(){\n    this.setState((prevState) => {\n      return {showVersions: !prevState.showVersions}\n    })\n  }\n  getVersionHistory(transcriptionid){\n      const versionChainInfo = runQuery(versionHistoryInfo(transcriptionid))\n      versionChainInfo.then((d) => {\n        const b = d.data.results.bindings\n        b.forEach((b, i) => {\n          var reviewUrl = \"https://dll-review-registry.scta.info/api/v1/reviews/?url=\" + b.doc.value + \"?society=MAA\"\n          Axios(reviewUrl).then((d2) => {\n            const data = d2.data\n            var reviewObject = {}\n            if (data.length > 0){\n              reviewObject = {\n                img_url: data[0][\"badge-url\"],\n                reviewid: data[0][\"id\"],\n                ipfsHash: data[0][\"ipfs-hash\"],\n                html_link: \"https://dll-review-registry.scta.info/reviews/\" + data[0][\"id\"] + \".html\",\n                rubric_link: data[0][\"badge-rubric\"],\n                summary: data[0][\"review-summary\"]\n              }\n            }\n            this.setState((prevState) => {\n              const newVersion = {\n                versionTranscription: b.version ? b.version.value : \"\",\n                versionLabel: b.version_label ? b.version_label.value : \"\",\n                versionOrderNumber: b.order_number ? b.order_number.value : \"\",\n                versionReview: b.review ? b.review.value : \"\",\n                versionDoc: b.doc ? b.doc.value : \"\",\n                versionReviewInfo: reviewObject,\n              }\n              return {\n                versions: [...prevState.versions, newVersion],\n                currentVersion: transcriptionid\n              }\n            })\n          })\n        })\n      })\n    }\n  componentDidMount(){\n    //prevents call when itemInfo prop is not present\n    if (this.props.transcriptionid){\n      this.getVersionHistory(this.props.transcriptionid)\n    }\n  }\n  componentDidUpdate(prevProps, prevState){\n    if (this.props.transcriptionid !== prevProps.transcriptionid){\n      console.log('running fetch')\n      this.setState({versions: []}, () => {\n        this.getVersionHistory(this.props.transcriptionid)\n      })\n    }\n}\n  render(){\n    const { t } = this.props;\n    const displayVersions = () => {\n      const versions = this.state.versions.map((v) => {\n        const currentlyViewing = v.versionTranscription === this.state.currentVersion ? \"currentlyViewing\" : \"\"\n        const gitHubEdit = v.versionDoc.includes(\"github.com\") && v.versionDoc.replace(\"/raw/\", \"/edit/\")\n        //NOTE this topLevel get is a precarious shortcut, it could be inherited as a prop from a previous sparql query\n        const topLevelShortId = v.versionDoc.includes(\"github.com\") && v.versionDoc.split(\"/scta-texts/\")[1].split(\"/\")[0]\n        const gitHubIssues = \"https://github.com/scta-texts/\" + topLevelShortId + \"issues\";\n        return (<p key={v.versionTranscription} className={currentlyViewing + \" small\"}>\n          {currentlyViewing ? <span>{v.versionLabel} {t(\"(Currently Viewing)\")}</span> : <span className=\"lbp-span-link\" onClick={()=>{this.props.handleFocusChange(v.versionTranscription)}}>{v.versionLabel}</span>}\n          {v.versionReviewInfo.html_link && <span> {t(\"Peer Reviewed\")}: <a href={v.versionReviewInfo.html_link}><img alt=\"review\" src={v.versionReviewInfo.img_url}/></a> </span>}\n          <span className=\"small\"> {t(\"Data Source\")}: <a href={v.versionDoc}>{v.versionDoc}</a> </span>\n          {gitHubEdit && <span className=\"small\"> | <a href={gitHubEdit} target=\"_blank\" rel=\"noopener noreferrer\"> Edit on <img src=\"github-octocat-logo.png\" alt=\"github\" height=\"25px\"/> Github</a> or <a href={gitHubIssues} target=\"_blank\" rel=\"noopener noreferrer\">Create a GitHub Issue</a></span>}\n          </p>)\n      })\n      return versions\n    }\n    const displayAlert = () => {\n      if (this.state.versions){\n        if (this.state.versions.length > 1){\n          return (\n            <Alert variant=\"info\">\n              <p onClick={this.handleToggleShowVersions} className=\"small\">{t(\"This Text Has Multiple Indexed Versions\")}</p>\n              {this.state.showVersions && displayVersions()}\n            </Alert>\n          )\n        }\n        else if (this.state.versions.length === 1){\n          const version = this.state.versions[0]\n          const gitHubEdit = version.versionDoc.includes(\"github.com\") && version.versionDoc.replace(\"/raw/\", \"/edit/\")\n          //NOTE this topLevel get is a precarious shortcut, it could be inherited as a prop from a previous sparql query\n          const topLevelShortId = version.versionDoc.includes(\"github.com\") && version.versionDoc.split(\"/scta-texts/\")[1].split(\"/\")[0]\n          const gitHubIssues = \"https://github.com/scta-texts/\" + topLevelShortId + \"/issues\";\n          \n          return (<Alert variant=\"info\">\n            <span className=\"small\">{t(\"Version\")}: {version.versionLabel} \n            | \n            {t(\"Data Source\")}: <a href={version.versionDoc}>{version.versionDoc}</a> \n            </span>\n            {gitHubEdit && <span className=\"small\"> | <a href={gitHubEdit} target=\"_blank\" rel=\"noopener noreferrer\"> Edit on <img src=\"github-octocat-logo.png\" alt=\"github\" height=\"25px\"/> Github</a> or <a href={gitHubIssues} target=\"_blank\" rel=\"noopener noreferrer\">Create a GitHub Issue</a></span>}\n          </Alert>\n          )\n        }\n        else{\n          return null\n        }\n      }\n      else {\n        return null\n      }\n    }\n    return (\n      displayAlert()\n    );\n  }\n}\nVersionChain.propTypes = {\n  /**\n  * transcription resource id of focused passage,\n  * transcription id is required, because a specific text passage is being complicated\n  */\n  transcriptionid: PropTypes.string.isRequired,\n  /**\n  * handleFocusChange; a function carrying desired behavior\n  * when you user selects non-current version\n  */\n  handleFocusChange: PropTypes.func.isRequired\n}\n\nexport default withTranslation()(VersionChain);\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport {runQuery} from './utils'\nimport {basicStructureAllItemsInfoQuery, partsInfoQuery,workGroupExpressionQuery} from './Queries'\nimport TextOutlineWrapper from \"./TextOutlineWrapper\"\n//import Lbp from \"lbp.js/lib\"\n\n\nclass Collection extends React.Component {\n  constructor(props){\n    super(props)\n    this.retrieveCollectionInfo = this.retrieveCollectionInfo.bind(this)\n    this.makeRequests = this.makeRequests.bind(this)\n    this.handleFilter = this.handleFilter.bind(this)\n    this.filter = React.createRef();\n    this.mount = false\n    this.state = {\n      title: \"\",\n      description: \"\",\n      items: {},\n      parts: {},\n      filter: \"\"\n    }\n\n  }\n  handleFilter(e){\n    const item = e.target.value\n    this.setState({filter: item})\n\n  }\n  arrangeParts(partsPromise){\n    const _this = this\n    partsPromise.then((d) => {\n        const bindings = d.data.results.bindings\n        const title = bindings[0].title.value\n        const description = bindings[0].description.value\n        let partsObject = {}\n        bindings.forEach((b) => {\n          const pId = b.part.value\n          partsObject[pId] = {\n            id: b.part.value,\n            title: b.partTitle.value,\n            type: b.partType.value,\n            questionTitle: b.partQuestionTitle ? b.partQuestionTitle.value : null,\n            level: b.partLevel ? b.partLevel.value : \"unknown\",\n        }\n      });\n      if (this.mount){\n        _this.setState(\n          {\n            title,\n            description,\n            parts: partsObject\n          }\n        )\n      }\n    });\n  }\n  arrangeItems(itemsPromise){\n    const _this = this\n    itemsPromise.then((d) => {\n      const bindings = d.data.results.bindings\n      let itemsObject = {}\n      bindings.forEach((b) => {\n        const itemId = b.item.value\n        itemsObject[itemId] = {\n          title: b.itemTitle.value,\n          id: b.item.value,\n          type: b.itemType.value,\n          questionTitle: b.itemQuestionTitle ? b.itemQuestionTitle.value : null,\n          author: b.itemAuthor ? b.itemAuthor.value : null,\n          authorTitle: b.itemAuthorTitle ? b.itemAuthorTitle.value : null,\n          next: b.next ? b.next.value : null,\n          previous: b.previous ? b.previous.value : null,\n          cm: b.cm ? b.cm.value : null,\n          cmTitle: b.cmTitle ? b.cmTitle.value : null,\n          ct: b.ct ? b.ct.value : null,\n          topLevel: b.topLevel ? b.topLevel.value : null,\n          doc: b.doc ? b.doc.value : null\n        }\n      });\n      if (this.mount){\n        _this.setState(\n          {\n            items: itemsObject\n          }\n        )\n      }\n    })\n    .catch((err) => {\n      console.log(err)\n    })\n  }\n\n  retrieveWorkGroupInfo(resourceid){\n    const expressionsInfo = runQuery(workGroupExpressionQuery(resourceid))\n    const partsInfo = runQuery(partsInfoQuery(resourceid))\n    this.arrangeParts(partsInfo)\n    this.arrangeItems(expressionsInfo)\n  }\n  retrieveCollectionInfo(resourceid, structureType, topLevel){\n    const collectionInfo = runQuery(basicStructureAllItemsInfoQuery(topLevel))\n    const partsInfo = runQuery(partsInfoQuery(resourceid))\n\n    //add parts to state\n    this.arrangeParts(partsInfo)\n    /// add items to state\n    this.arrangeItems(collectionInfo)\n  }\n  makeRequests(newResourceId, structureType, topLevel, type){\n\n    //\n    //   // get all expressions for this workGroup\n      if (type === \"http://scta.info/resource/workGroup\"){\n          this.retrieveWorkGroupInfo(newResourceId, structureType, topLevel)\n          //this.setState({itemFocus: \"\"})\n      }\n      // get all items for this collection\n      else if (structureType === \"http://scta.info/resource/structureCollection\"){\n          this.retrieveCollectionInfo(newResourceId, structureType, topLevel)\n          //this.setState({itemFocus: \"\"})\n      }\n\n  }\n  \n  componentDidMount(){\n    this.mount = true\n    this.setState({resourceid: this.props.resourceid})\n    this.makeRequests(this.props.resourceid, this.props.structureType, this.props.topLevel, this.props.type)\n\n  }\n\n  // UNSAFE_componentWillReceiveProps(nextProps) {\n\n  //   // conditional prevents new information requestion if resource id has not changed\n  //   if (nextProps.resourceid !== this.props.resourceid){\n  //     this.setState({resourceid: nextProps.resourceid, filter: \"\"})\n  //     // this conditional resets form value if ref is present\n  //     // if (this.filter){\n  //     //   this.filter.current.value = \"\"\n  //     // }\n  //     this.makeRequests(nextProps.resourceid, nextProps.structureType, nextProps.topLevel, nextProps.type)\n  //   }\n  // }\n  componentDidUpdate(prevProps) {\n\n    // conditional prevents new information requestion if resource id has not changed\n    if (this.props.resourceid !== prevProps.resourceid){\n      this.setState({resourceid: this.props.resourceid, filter: \"\"})\n      // this conditional resets form value if ref is present\n      // if (this.filter){\n      //   this.filter.current.value = \"\"\n      // }\n      this.makeRequests(this.props.resourceid, this.props.structureType, this.props.topLevel, this.props.type)\n    }\n  }\n  componentWillUnmount(){\n    this.mount = false\n  }\n  render(){\n    return (\n      <Container className=\"collectionBody\">\n      {this.state.title && <h1>{this.state.title}</h1>}\n      {this.state.title && <p style={{\"textAlign\": \"center\"}}>{this.state.description}</p>}\n      {\n        //<p style={{\"textAlign\": \"center\"}}><Link to={\"/text?resourceid=http://scta.info/resource/scta\"}>Back to Top Level</Link></p>\n      }\n\n      <Row>\n        <Col xs={9}>\n          <Container>\n\n              <TextOutlineWrapper\n                focusResourceid={this.state.resourceid}\n                resourceid={this.state.resourceid}\n                title={this.state.title}\n                hidden={false}\n                mtFocus={\"\"}\n                collectionLink={true}\n                showAuthor={true}\n                showParentLink={true}\n                />\n                {\n              /* <Container className=\"collectionFilter\">\n              <FormControl ref={this.filter} id=\"filter\" placeholder=\"type to filter by title\" onChange={this.handleFilter}/>\n            </Container>\n            {displayParts()}\n            {displayQuestions()}\n            */\n          }\n          </Container>\n        </Col>\n        {/* <Col>\n          <Container>\n          <Search3 searchWorkGroup={this.props.resourceid}\n          showSubmit={true}\n          showAdvancedParameters={true}\n          showLabels={false}/>\n          </Container>\n        </Col> */}\n      </Row>\n      </Container>\n\n    );\n  }\n}\n\nexport default Collection;\n","import React from 'react';\nimport Surface2 from './Surface2'\nimport Surface3Wrapper from './Surface3Wrapper'\n//import {Link} from 'react-router-dom';\n\nimport {runQuery} from './utils'\nimport {getCodexInfo, getCodexInfoFromSurface, getCodexInfoFromCanvas, getCodexInfoFromManifest} from './Queries'\n\nclass Codex extends React.Component {\n  constructor(props){\n    super(props)\n    this.retrieveCodexInfo = this.retrieveCodexInfo.bind(this)\n    this.handleSurfaceFocusChange = this.handleSurfaceFocusChange.bind(this)\n    this.handleToggleShowContents = this.handleToggleShowContents.bind(this)\n    //this.handleSurface3Manifestations = this.handleSurface3Manifestations.bind(this)\n    this.state = {\n      items: {},\n      title: \"\",\n      focusedSurface: \"\",\n      relatedCodices: [],\n      showContents: true,\n      surface3Manifestations: [],\n      surface3FocusedManifestation: \"\"\n    }\n  }\n  handleToggleShowContents(){\n    this.setState((prevState) => {\n      return{\n        showContents: !prevState.showContents\n      }\n    })\n  }\n  \n  handleSurfaceFocusChange(surfaceid){\n    //this.setState({focusedSurface: surfaceid})\n    this.props.handleSetFocus(surfaceid)\n  }\n  retrieveCodexInfo(id, type){\n    let codexInfo = undefined\n    if (type === \"surface\"){\n      codexInfo = runQuery(getCodexInfoFromSurface(id))\n    }\n    else if (type === \"canvas\"){\n      codexInfo = runQuery(getCodexInfoFromCanvas(id))\n    }\n    else if (type === \"manifest\"){\n      codexInfo = runQuery(getCodexInfoFromManifest(id))\n    }\n    else{\n      codexInfo = runQuery(getCodexInfo(id))\n    }\n    codexInfo.then((d) => {\n      const data = d.data.results.bindings\n      if (data.length > 0 && data[0].surface){\n        const expressionIdMap = data.map((d) => {\n          return d.expression ? d.expression.value : \"\"\n        })\n        var unique = expressionIdMap.filter((v, i, a) => a.indexOf(v) === i);\n        let expressionList = {}\n        unique.forEach((e) => {\n           expressionList[e] = []\n        })\n        data.forEach((d) => {\n            const info = {\n              expression: d.expression.value,\n              expressionTitle: d.item_expression_title.value,\n              manifestation: d.manifestation.value,\n              surface: d.surface.value,\n              surfaceTitle: d.surface_title.value,\n              questionTitle: d.item_expression_question_title ? d.item_expression_question_title.value : ''\n            }\n          expressionList[d.expression.value].push(info)\n        })\n        let focusedSurface = \"\"\n        if (type === \"surface\"){\n           focusedSurface = id\n         }\n         else if (type === \"canvas\"){\n           focusedSurface = data[0].surfaceFocus.value\n         }\n         else{\n           focusedSurface = data[0].surface.value\n         }\n        this.setState({items: expressionList, focusedSurface: focusedSurface})\n        this.props.handleSurfaceFocusChange(focusedSurface)\n\n      }\n    })\n  }\n  componentDidMount(){\n    this.retrieveCodexInfo(this.props.resourceid, this.props.codexResourceType)\n  }\n  componentDidUpdate(prevProps){\n    if (this.props.resourceid && this.props.resourceid !== prevProps.resourceid){\n      this.retrieveCodexInfo(this.props.resourceid, this.props.codexResourceType)\n  }\n  }\n\n  render(){\n    const displayImages = () => {\n      if (this.state.surface3Manifestations.length > 0){\n        return <Surface3Wrapper manifestations={this.state.surface3Manifestations} focusedManifestation={this.state.surface3FocusedManifestation} annotationsDisplay=\"paragraph\" width=\"501\" hidden={false}/>\n      }\n      else if (this.state.focusedSurface){\n        return <Surface2 surfaceid={this.state.focusedSurface} lineFocusId=\"\" topLevel={this.props.topLevel} handleSurfaceFocusChange={this.handleSurfaceFocusChange} width={\"501\"} annotationsDisplay={false} hidden={false}/>\n      }\n      else{\n        return null\n      }\n\n    }\n    return (\n      <div className=\"codexImage\">\n          <h1>Codex Pages</h1>\n          {displayImages()}\n         </div>\n    );\n  }\n}\n\nexport default Codex;\n","import React, {useState, useEffect} from 'react';\nimport {runQuery} from './utils'\nimport {getExpressionTypeInfo} from '../queries/expressionTypeQuery'\nimport TextOutlineWrapper from \"./TextOutlineWrapper\"\nimport Container from 'react-bootstrap/Container';\n\nconst ExpressionType = (props) => {\n  const [expressions, setExpressions] = useState([])\n  useEffect(()=> {\n    const results = runQuery(getExpressionTypeInfo(props.expressionTypeId))\n    results.then((d) => {\n      const bindings = d.data.results.bindings\n      setExpressions(bindings)\n    })\n  }, [props.expressionTypeId])\n  return (\n    <Container className=\"collectionBody\">\n      <h1>{props.expressionTypeId}</h1>\n      {expressions.map((e)=> {\n        return (\n          <Container>\n          <TextOutlineWrapper\n          focusResourceid={e.expression.value}\n          resourceid={e.expression.value}\n          title={e.authorTitle ? e.authorTitle.value + \", \" + e.eLongTitle.value : e.eLongTitle.value }\n          hidden={false}\n          mtFocus={\"\"}\n          collectionLink={true}\n          showParentLink={true}/>\n          </Container>\n        )\n      })}\n      \n      \n  </Container>\n\n  );\n}\n\nexport default ExpressionType;\n","export function getExpressionTypeInfo(id){\n   const query = [\n     \"SELECT ?expression ?eLongTitle ?expressionAuthor ?expressionAuthorTitle ?author ?authorTitle \",\n     \"{\",\n       \"{\",\n         \"?expression <http://scta.info/property/expressionType> <\" + id + \"> .\",\n       \"}\",\n       \"UNION\",\n       \"{\",\n         \"?expression <http://scta.info/property/expressionType> ?expressionType .\",\n         \"?expressionType <http://scta.info/property/isMemberOf> <\" + id + \"> .\",\n       \"}\",\n       \"?expression <http://scta.info/property/longTitle> ?eLongTitle .\",\n       \"OPTIONAL {\",\n       \"?expression <http://www.loc.gov/loc.terms/relators/AUT> ?author . \",\n       \"?author <http://purl.org/dc/elements/1.1/title> ?authorTitle .\",\n       \"}\",\n      \"}\",\n      \n\n     \"ORDER BY ?authorTitle\"].join(' ')\n  return query\n}\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Print from \"./Print\"\nimport PropTypes from 'prop-types';\n\nimport TextOutlineWrapper from \"./TextOutlineWrapper\"\nimport {Link} from 'react-router-dom';\n\nimport Window from \"./Window/Window2\"\nimport TextNavBar from \"./TextNavBar\"\nimport Text from \"./Text\"\nimport AuthorCollection from \"./AuthorCollection\"\nimport VersionChain from \"./VersionChain\"\nimport Collection from \"./Collection\"\nimport Codex from \"./Codex\"\nimport ExpressionType from \"./ExpressionType\"\nimport {runQuery, scrollToParagraph} from './utils'\n\nimport {basicInfoQuery, itemTranscriptionInfoQuery} from './Queries'\n\n\nclass TextWrapper extends React.Component {\n  constructor(props){\n    super(props)\n    this.mount = false\n    this.openWindow = this.openWindow.bind(this)\n    this.setFocus = this.setFocus.bind(this)\n    this.setFocus2 = this.setFocus2.bind(this)\n    this.handleTabChange = this.handleTabChange.bind(this)\n    this.handleClose = this.handleClose.bind(this)\n    this.handleMinimize = this.handleMinimize.bind(this)\n    this.handleMaximize = this.handleMaximize.bind(this)\n    this.handleMiddlize = this.handleMiddlize.bind(this)\n    this.handleSwitchWindow = this.handleSwitchWindow.bind(this)\n    this.handleDuplicateWindow = this.handleDuplicateWindow.bind(this)\n    this.handleSurfaceFocusChange = this.handleSurfaceFocusChange.bind(this)\n    this.handleLineFocusChange = this.handleLineFocusChange.bind(this)\n    this.handleToggleTextLinesView = this.handleToggleTextLinesView.bind(this)\n    this.handleChangeManifestation = this.handleChangeManifestation.bind(this)\n    this.handleTextPreviewFocusChange = this.handleTextPreviewFocusChange.bind(this)\n    this.handleTogglePdfView = this.handleTogglePdfView.bind(this)\n    this.handleUpdateSelectionRange = this.handleUpdateSelectionRange.bind(this)\n    this.state = {\n      doc: \"\",\n      focus: \"\",\n      //focusRelatedExpressions: \"\",\n      mtFocus: \"\",\n      itemFocus: \"\",\n      //collectionFocus: \"\",\n      surfaceid: \"\",\n      lineFocusId: \"\",\n      textPreviewObjects: [],\n      pdfView: false,\n      selectionRange: undefined, // should be undefined or object\n      windows: {\n        window1: {\n          windowId: \"window1\",\n          open: true,\n          windowLoad: \"citation\",\n          position: \"sideWindow\",\n          openWidthHeight: \"middle\",\n          annotationsDisplay: \"paragraph\",\n          defaultManifestationSlug: \"\"\n        },\n        window2: {\n          windowId: \"window2\",\n          open: false,\n          windowLoad: \"citation\",\n          position: \"bottomWindow\",\n          openWidthHeight: \"middle\",\n          annotationsDisplay: \"paragraph\",\n          defaultManifestationSlug: \"\"\n        }\n      }\n    }\n  }\n  handleTogglePdfView(){\n    this.setState((prevState) => {\n        return {\n          pdfView: !prevState.pdfView\n        }\n    })\n  }\n  handleToggleTextLinesView(windowId, value){\n    this.setState((prevState) => {\n      const windows = prevState.windows\n      windows[windowId].annotationsDisplay = value\n      return {windows: windows}\n    })\n  }\n  handleChangeManifestation(windowId, manifestationSlug){\n    this.setState((prevState) => {\n      const windows = prevState.windows\n      windows[windowId].defaultManifestationSlug = manifestationSlug\n      return {windows: windows}\n    })\n  }\n\n  openWindow(id, windowLoad){\n    if (!this.state.windows[id].open || this.state.windows[id].windowLoad !== windowLoad){\n      this.setState((prevState) => {\n        const windows = prevState.windows\n        windows[id].open = true\n        if (windowLoad){\n          windows[id].windowLoad = windowLoad\n        }\n        return {\n          windows: windows,\n        }\n      })\n    }\n  }\n  handleClose(windowId){\n    this.setState((prevState) => {\n      const windows = prevState.windows\n      windows[windowId].open = false\n      return {windows: windows}\n\n    })\n    //scroll is supposed to re-align text scroll to focused paragraph after side bar close.\n    //but it is not quite working\n    scrollToParagraph(this.state.blockFocus, true)\n\n  }\n  \n  handleMinimize(windowId){\n    this.setState((prevState) => {\n      const windows = prevState.windows\n      windows[windowId].openWidthHeight = \"minimum\"\n      return {windows: windows}\n\n    })\n  }\n  handleMaximize(windowId){\n    this.setState((prevState) => {\n      const windows = prevState.windows\n      windows[windowId].openWidthHeight = \"maximum\"\n      return {windows: windows}\n\n    })\n  }\n  handleMiddlize(windowId){\n    this.setState((prevState) => {\n      const windows = prevState.windows\n      windows[windowId].openWidthHeight = \"middle\"\n      return {windows: windows}\n\n    })\n  }\n  \n  /**\n   * @description update state with selectionRangeObject\n   * @param {object} selectionRange\n   */\n  handleUpdateSelectionRange(selectionRange){\n    const s = selectionRange\n    this.setState({selectionRange: s})\n  }\n  handleSwitchWindow(windowId, windowType){\n    this.setState((prevState) => {\n      const windows = prevState.windows\n      if (windows[windowId].position === \"sideWindow\"){\n        windows[windowId].position = \"bottomWindow\"\n        // these conditionals control whether an already existing window will be closed when the other is moved\n        // while commented they allow window1 and window2 to stack on top of each other\n\n        // if (windowId === \"window1\"){\n        //   windows[\"window2\"].open = false\n        // }\n        // else if ((windowId === \"window2\")){\n        //   windows[\"window1\"].open = false\n        // }\n      }\n      else if (windows[windowId].position === \"bottomWindow\"){\n        windows[windowId].position = \"sideWindow\"\n        // these conditionals control whether an already existing window will be closed when the other is moved\n        // while commented they allow window1 and window2 to stack on top of each other\n\n        // if (windowId === \"window1\"){\n        //   windows[\"window2\"].open = false\n        // }\n        // else if ((windowId === \"window2\")){\n        //   windows[\"window1\"].open = false\n        // }\n      }\n      return {windows: windows}\n\n    })\n  }\n  handleDuplicateWindow(windowId, windowType){\n    this.setState((prevState) => {\n      const windows = prevState.windows\n      const altWindowId = windowId === \"window1\" ? \"window2\" : \"window1\"\n      if (windows[windowId].position === \"sideWindow\"){\n        windows[altWindowId].position = \"bottomWindow\"\n        windows[altWindowId].open = true\n      }\n      else if (windows[windowId].position === \"bottomWindow\"){\n        windows[altWindowId].position = \"sideWindow\"\n        windows[altWindowId].open = true\n      }\n      return {windows: windows}\n    })\n  }\n  handleTabChange(windowLoad, windowId){\n\n    this.setState((prevState) => {\n      const windows = prevState.windows\n      windows[windowId].windowLoad = windowLoad\n      return {windows: windows}\n\n    })\n\n  }\n\n  handleSurfaceFocusChange(surfaceid){\n    this.setState({surfaceid: surfaceid})\n  }\n  handleLineFocusChange(lineFocusId){\n    this.setState({lineFocusId: lineFocusId})\n  }\n  /**\n   * @description a function that handle events on main text and passes relevant information to TextPreviewWrapper Component\n   * \n   * @param {Object[]} targetObjects - an array of objects \n   * @param {string} id - the target id\n   * @param {string} range - the word range (e.g. 1-4), delimited by a dash, corresponding to the target\n   */\n  handleTextPreviewFocusChange(targetObjects){\n    //check to see if textPreviewResourceId carries more than one id\n    //if so split by white space \n    this.setState({textPreviewObjects: targetObjects})\n  }\n  //TODO\n  //These two function should be refactored into one\n  setFocus(id){\n    const range = id.split(\"@\")[1] ? \"@\" + id.split(\"@\")[1] : \"\"\n    id = id.split(\"@\")[0];\n    const fullid = id.includes(\"http\") ? id + this.state.mtFocus + range : \"http://scta.info/resource/\" + id + this.state.mtFocus + range;\n    this.props.handleUpdateUrlResource(fullid)\n  }\n  setFocus2(newid){\n    this.props.handleUpdateUrlResource(newid)\n  }\n  //END TODO\n\n\n  retrieveFocusInfo(id){\n    const fullid = id.includes(\"http\") ? id : \"http://scta.info/resource/\" + id\n    // get info\n    const info = runQuery(basicInfoQuery(fullid))\n    //arrange info and set it to state\n\n    this.arrangeFocusInfo(info, fullid)\n    // get related expressions info\n    // removed these second calls and embed the query in arrange focus info to keep information in sync.\n    // TODO remove below three lines\n    //const relatedExpressions = runQuery(getRelatedExpressions(fullid))\n    //arrange info and set it to state\n    //this.arrangeFocusRelatedInfo(relatedExpressions)\n\n    //scrollToParagraph(shortid, true)\n\n  }\n\n  arrangeFocusInfo(info, resourceid){\n      info.then((d) => {\n        const bindings = d.data.results.bindings[0]\n        const manifestations = d.data.results.bindings.map((b) => {\n          return {\n            manifestation: b.manifestation.value,\n            manifestationTitle: b.manifestationTitle.value,\n            transcription: b.manifestationCTranscription ? b.manifestationCTranscription.value : \"\"\n          }\n        })\n\n          if (this.mount && bindings){\n            this.setState({\n              focus: {\n                resourceid: resourceid,\n                title: bindings.title.value,\n                longTitle: bindings.longTitle ? bindings.longTitle.value : \"\",\n                author: bindings.author ? bindings.author.value : \"\",\n                authorTitle: bindings.authorTitle ? bindings.authorTitle.value : \"\",\n                structureType: bindings.structureType.value,\n                inbox: bindings.inbox.value,\n                next: bindings.next ? bindings.next.value : \"\",\n                previous: bindings.previous ? bindings.previous.value : \"\",\n                parent: bindings.parent ? bindings.parent.value : \"\",\n                cdoc: bindings.cdoc ? bindings.cdoc.value : \"\",\n                cxml: bindings.cxml ? bindings.cxml.value : \"\",\n                topLevel: bindings.topLevelExpression ? bindings.topLevelExpression.value : \"\",\n                cmanifestation: bindings.cmanifestation.value,\n                ctranscription: bindings.ctranscription ? bindings.ctranscription.value : \"\",\n                manifestations: manifestations\n              }\n            });\n          }\n      });\n    }\n    /**\n     * sets focus\n     * @param {string} id \n     * @public\n     */\n    setItemFocus(id){\n      const fullid = id.includes(\"http\") ? id : \"http://scta.info/resource/\" + id\n      // get info\n      const info = runQuery(itemTranscriptionInfoQuery(fullid))\n      this.arrangeItemFocusInfo(info)\n    }\n    arrangeItemFocusInfo(itemFocusInfo){\n        itemFocusInfo.then((d) => {\n          const bindings = d.data.results.bindings[0]\n          if (this.mount){\n            this.setState({\n              itemFocus: {\n                title: bindings.title.value,\n                manifestation: bindings.manifestation.value,\n                expression: bindings.expression.value,\n                doc: bindings.doc.value,\n                xml: bindings.xml.value,\n                next: bindings.next ? bindings.next.value : \"\",\n                previous: bindings.previous ? bindings.previous.value : \"\",\n                inbox: bindings.inbox.value,\n                topLevel: bindings.topLevelExpression.value,\n                transcriptionid: bindings.t.value\n              }\n            });\n          }\n        });\n      }\n\n  componentDidMount(){\n    this.mount = true\n    if (this.props.resourceType === \"person\" \n    || this.props.resourceType === \"workGroup\" \n    || this.props.resourceType === \"codex\"\n    || this.props.resourceType === \"expressionType\"){\n    }\n    //transcriptionid should be required Prop\n    //conditional here to reinfurce that rule\n    else if (this.props.resourceType === \"collection\"){\n      //TODO props.expressionid is doing something very similar to blockDivFocus\n      this.retrieveFocusInfo(this.props.expressionid)\n      //TODO: splitting strings for this information is not ideal.\n        //info should be part of original query\n        const mFocus = this.props.transcriptionid ? this.props.transcriptionid.split(\"/resource/\")[1].split(\"/\")[1] : \"\"\n        const tFocus = this.props.transcriptionid ? this.props.transcriptionid.split(\"/resource/\")[1].split(\"/\")[2] : \"\"\n        this.setState(\n          {\n            mtFocus: \"/\" + mFocus + \"/\" + tFocus,\n            itemFocus: \"\"\n          }\n        )\n      }\n    else{\n      if (this.props.itemTranscriptionId){\n        this.setItemFocus(this.props.itemTranscriptionId)\n        //TODO: splitting strings for this information is not ideal.\n        //info should be part of original query\n        const mFocus = this.props.itemTranscriptionId.split(\"/resource/\")[1].split(\"/\")[1]\n        const tFocus = this.props.itemTranscriptionId.split(\"/resource/\")[1].split(\"/\")[2]\n        const selectionRange = this.props.tokenRange ? {\n          wordRange: this.props.tokenRange,\n          selectedElementTargetId: this.props.expressionid && this.props.expressionid.split(\"/resource/\")[1],\n        } : {}\n        this.setState(\n          {mtFocus: \"/\" + mFocus + \"/\" + tFocus, \n          selectionRange: selectionRange\n        })\n\n        if (this.props.expressionid){\n          this.retrieveFocusInfo(this.props.expressionid)\n        }\n      }\n    }\n  }\n\n    componentDidUpdate(prevProps){\n      //Keep testing, but it seems like this look up only needs to fire, when the transcription id prop changes\n      // not when other props changes.\n      \n      if (this.props.resourceType === \"person\" \n      || this.props.resourceType === \"workGroup\" \n      || this.props.resourceType === \"codex\"\n      || this.props.resourceType === \"expressionType\"\n      ){\n        if (this.props.resourceid !== prevProps.resourceid){\n          this.setState({\n            focus: \"\",\n            mtFocus: \"\"\n          });\n        }\n      }\n      else if (this.props.resourceType === \"collection\"){\n        \n        if (this.props.resourceid !== prevProps.resourceid){\n          this.retrieveFocusInfo(this.props.expressionid)\n          //TODO: splitting strings for this information is not ideal.\n          //info should be part of original query\n          const mFocus = this.props.transcriptionid ? this.props.transcriptionid.split(\"/resource/\")[1].split(\"/\")[1] : \"\"\n          const tFocus = this.props.transcriptionid ? this.props.transcriptionid.split(\"/resource/\")[1].split(\"/\")[2] : \"\"\n          this.setState(\n          {\n            mtFocus: \"/\" + mFocus + \"/\" + tFocus,\n            itemFocus: \"\"\n          }\n        )\n        }\n      }\n      else{\n  \n        if (this.props.itemTranscriptionId !== prevProps.itemTranscriptionId){\n          this.setItemFocus(this.props.itemTranscriptionId)\n          const mFocus = this.props.itemTranscriptionId.split(\"/resource/\")[1].split(\"/\")[1]\n          const tFocus = this.props.itemTranscriptionId.split(\"/resource/\")[1].split(\"/\")[2]\n          //clear or set parts of state when new transcription file is loaded\n          this.setState((prevState) => {\n            const windows = prevState.windows\n            windows[\"window1\"].defaultManifestationSlug = \"\"\n            windows[\"window2\"].defaultManifestationSlug = \"\"\n            const selectionRange = this.props.tokenRange ? {\n              ...prevState.selectionRange, \n              wordRange: this.props.tokenRange,\n              selectedElementTargetId: this.props.expressionid && this.props.expressionid.split(\"/resource/\")[1],\n            } : {}\n            return {\n              mtFocus: \"/\" + mFocus + \"/\" + tFocus,\n              selectionRange: selectionRange,\n              windows: windows\n            }\n          })\n        }\n        //TODO: seems a little dangerous to have these two different setState/async calls \n        //if one depends on the other, this is a good place for things to get out of sync\n        if (this.props.expressionid !== prevProps.expressionid){\n          if (!this.props.expressionid){\n            this.setState(\n              {\n                focus: \"\",\n                selectionRange: \"\"\n            });\n          }\n          else {\n            this.setState((prevState) => {\n              const selectionRange = this.props.tokenRange ? {\n                ...prevState.selectionRange, \n                wordRange: this.props.tokenRange,\n                selectedElementTargetId: this.props.expressionid && this.props.expressionid.split(\"/resource/\")[1],\n              } : {}\n              return({\n              selectionRange: selectionRange\n              })  \n            })\n            this.retrieveFocusInfo(this.props.expressionid)\n          }\n        }\n        if (this.props.tokenRange !== prevProps.tokenRange){\n          this.setState((prevState)=>{\n            const selectionRange = this.props.tokenRange ? {\n              ...prevState.selectionRange, \n              wordRange: this.props.tokenRange,\n              selectedElementTargetId: this.props.expressionid && this.props.expressionid.split(\"/resource/\")[1],\n            } : {}\n            return({\n            selectionRange: selectionRange\n          })\n          })\n        }\n      }\n}\n  componentWillUnmount(){\n    this.mount = false\n  }\n  render(){\n    const displayWindows = () => {\n      const windows = Object.keys(this.state.windows).map((key) => {\n        if (this.state.windows[key].open){\n          return (<Window\n              key={key}\n              handleClose={this.handleClose}\n              handleMinimize={this.handleMinimize}\n              handleMaximize={this.handleMaximize}\n              handleMiddlize={this.handleMiddlize}\n              handleTabChange={this.handleTabChange}\n              handleBlockFocusChange={this.setFocus}\n              handleFocusChange={this.setFocus2}\n              handleSurfaceFocusChange={this.handleSurfaceFocusChange}\n              handleSwitchWindow={this.handleSwitchWindow}\n              handleDuplicateWindow={this.handleDuplicateWindow}\n              resourceid={this.state.focus ? this.state.focus.resourceid : this.props.resourceid}\n              resourceType={this.props.resourceType ? this.props.resourceType : \"text\" }\n              windowType={this.state.windows[key].position}\n              windowId={this.state.windows[key].windowId}\n              windowLoad={this.state.windows[key].windowLoad}\n              openWidthHeight={this.state.windows[key].openWidthHeight}\n              surfaceid={this.state.surfaceid}\n              lineFocusId={this.state.lineFocusId}\n              info={this.state.focus}\n              itemFocus={this.state.itemFocus}\n              altWindowState={this.state.windows[key].windowId === \"window1\" ? this.state.windows[\"window2\"].open : this.state.windows[\"window1\"].open}\n              mtFocus={this.state.mtFocus}\n              handleToggleTextLinesView={this.handleToggleTextLinesView}\n              annotationsDisplay={this.state.windows[key].annotationsDisplay}\n              handleChangeManifestation={this.handleChangeManifestation}\n              defaultManifestationSlug={this.state.windows[key].defaultManifestationSlug}\n              textPreviewObjects={this.state.textPreviewObjects}\n              handleTextPreviewFocusChange={this.handleTextPreviewFocusChange}\n              handleLineFocusChange={this.handleLineFocusChange}\n              selectionRange={this.state.selectionRange}\n              codexResourceType={this.props.codexResourceType}\n              />\n            )\n          }\n          else{\n            return null\n          }\n        })\n        return windows\n      }\n    \n    const textClassNames = [\"lbp-text\"]\n    this.state.windows.window1.open && this.state.windows.window1.openWidthHeight === \"middle\" ? textClassNames.push(\"skinnyText\") : textClassNames.push(\"fullText\");\n    this.state.windows.window2.open && textClassNames.push(\"longText\");\n    this.state.pdfView ? textClassNames.push(\"hidden\"): textClassNames.push(\"showing\");\n    \n    const displayMain = () => {\n      if (this.props.resourceType === \"codex\"){\n        return (\n          <Codex \n          resourceid={this.props.resourceid} \n          codexResourceType={this.props.codexResourceType}\n          handleSetFocus={this.setFocus}\n          handleSurfaceFocusChange={this.handleSurfaceFocusChange}\n          />\n        )\n      }\n      else if (this.props.resourceType === \"person\"){\n        return (<AuthorCollection resourceid={this.props.resourceid}/>)\n      }\n      else if (this.props.resourceType === \"workGroup\"){\n        return ( <Collection resourceid={this.props.resourceid} \n           type=\"http://scta.info/resource/workGroup\"\n          />)\n      }\n      else if (this.props.resourceType === \"expressionType\"){\n        return (\n        <ExpressionType expressionTypeId={this.props.resourceid}/>\n        )\n      }\n      else if (this.props.resourceType === \"collection\"){\n        return (<div>\n          <h1>{this.state.resourceTitle}</h1>\n            <p style={{\"textAlign\": \"center\"}}>By <Link to={\"/text?resourceid=\" + this.state.focus.author}>{this.state.focus.authorTitle}</Link></p>\n            <TextOutlineWrapper\n              //focusResourceid={this.props.expressionid}\n              //resourceid={this.props.expressionid}\n              focusResourceid={this.props.resourceid}\n              resourceid={this.props.resourceid}\n              title={this.state.focus.title}\n              hidden={false}\n              //mtFocus={this.state.mtFocus}\n              mtFocus={\"\"}\n              collectionLink={true}\n              showParentLink={true}\n              />\n          </div>)  \n      }\n      else{\n        return (\n          this.state.itemFocus &&  \n          <>\n          <VersionChain transcriptionid={this.state.itemFocus.transcriptionid} handleFocusChange={this.setFocus2}/>\n          <Text\n            doc={this.state.itemFocus.doc}\n            topLevel={this.state.itemFocus.topLevel}\n            setFocus={this.setFocus}\n            handleSurfaceFocusChange={this.handleSurfaceFocusChange}\n            handleLineFocusChange={this.handleLineFocusChange}\n            openWindow={this.openWindow}\n            // NOTE: using props instead of state; seems better, but needs full documentation\n            // NOTE: itemid is shortid of item: TODO: needs documentation; or better, refactoring!\n            // TODO: when scrollTo id type is consistent, remove id checker in didMount and didUpdate of Text component\n            scrollTo={this.props.expressionid && this.props.expressionid.split(\"/resource/\")[1]}\n            handleTextPreviewFocusChange={this.handleTextPreviewFocusChange}\n            handleUpdateSelectionRange={this.handleUpdateSelectionRange}\n            selectionRange={this.state.selectionRange}\n            />\n          </>\n        )\n\n      }\n    }\n\n    return (\n      <div>\n        \n        { this.state.pdfView && <Print url={this.state.itemFocus.doc}/>}\n        \n        <Container className={textClassNames.join(\" \")}>\n          {displayMain()}\n        </Container>\n\n        {this.state.itemFocus && <TextNavBar\n          next={this.state.itemFocus && this.state.itemFocus.next}\n          previous={this.state.itemFocus && this.state.itemFocus.previous}\n          topLevel={this.state.itemFocus && this.state.itemFocus.topLevel}\n          handleClose={this.handleClose}\n          pdfView={this.state.pdfView}\n          handleTogglePdfView={this.handleTogglePdfView}\n          mtFocus={this.state.mtFocus}\n        />}\n        <div>\n        \n        {!this.state.pdfView && displayWindows()}\n        </div>\n      </div>\n    );\n  }\n}\n\nTextWrapper.propTypes = {\n  /**\n  * Text Wrapper Component\n  * \n  * \n  **/\n  resourceid: PropTypes.string, // id of focused resource (this can be a resource at any structure level and FRBR level)\n  expressionid: PropTypes.string, // corresponding expression id of the focused resource'\n  transcriptionid: PropTypes.string, // corresponding transcription id of the focused resource (Note: only really seems necessary at collection level)\n  \n  //itemid: PropTypes.string, // corresponding item expression parent (or self) corresponding to focused resource; (currently requires shortId, but (TODO) this would be good to change; seems like it would be better to call this ItemExpressionId to match ItemTranscriptionId)\n  itemTranscriptionId: PropTypes.string, //corresponding item transcription parent (or self corresponding to focused resource) \n  tokenRange: PropTypes.object, // an object containing word token range (tokenRange.start.int tokenRange.end.int)\n  handleUpdateUrlResource: PropTypes.func, // inherited function to send up resource focus change\n  \n  resourceType: PropTypes.string // currently only being used to switch between collection and non-collection levels.\n\n}\nexport default TextWrapper;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\n\nimport '../styles/timelinelist.scss';\nimport $ from 'jquery';\n\nimport {convertXMLDoc, scrollToParagraph} from './utils'\n\n///TODO: Not this is very similar to the Text component\n//it would be nice if this could be refactored to be a more generic component that could handle both\n//however, the edition text will\n\n//TODO: article componet needs to retrieve and article type and then pick a different style sheet for different types.\n\nclass TextArticle extends React.Component {\n  constructor(props){\n    super(props)\n    this.retrieveText = this.retrieveText.bind(this)\n\n\n  }\n  retrieveText(doc, scrollTo, articleType){\n    const _this = this;\n    if (doc){\n      //construct file url request ot exist db to get a cors enabled copy of the text (github does not serve files with cors enabled)\n      const doc = this.props.doc;\n      \n\n\n      let xmlurl = \"\"\n      if (doc.includes(\"ipfs\") || (doc.includes(\"zotero\"))){\n         xmlurl = doc\n       }\n       else{\n        const docFragment = doc.split(\"/master/\")[1].split(\"/\")[1]\n         xmlurl = \"https://exist.scta.info/exist/apps/scta-app/text/scta-articles/\" + docFragment\n       }\n      let xslurl = \"\"\n      if (articleType === \"http://scta.info/resource/timeline\"){\n         xslurl = \"/xslt/articles/timeline.xsl\"\n      }\n      else if (articleType === \"http://scta.info/resource/bibliography\"){\n        xslurl = \"/xslt/articles/bibliography.xsl\"\n      }\n      else if (articleType === \"http://scta.info/resource/biography\"){\n        xslurl = \"/xslt/articles/biography.xsl\"\n      }\n      else{\n        xslurl = \"/xslt/articles/standard.xsl\"\n      }\n\n      //conversion done in promise in utils.js file\n      const resultDocument = convertXMLDoc(xmlurl, xslurl)\n      resultDocument.then((data) => {\n        //appendage to file\n        //and event binding\n        //happens inside promise call back\n        document.getElementById(\"text\").innerHTML = \"\";\n        document.getElementById(\"text\").appendChild(data);\n\n        // $('.paragraphnumber').click(function(e) {\n        //    e.preventDefault();\n        //    const id = $(this).parent(\"p\").attr('id')\n        //    _this.props.setFocus(id)\n        //    _this.props.openWindow(\"window1\")\n        //  });\n        //  if (scrollTo){\n        //   scrollToParagraph(scrollTo, true)\n        // }\n        //\n        // $('.js-show-folio-image').click(function(e) {\n        //   e.preventDefault();\n        //   const surfaceid = $(this).attr('data-surfaceid');\n        //   const paragraphid = $(this).closest('.plaoulparagraph').attr(\"id\");\n        //\n        //   _this.props.setFocus(paragraphid)\n        //   _this.props.handleSurfaceFocusChange(\"http://scta.info/resource/\" + surfaceid)\n        //   _this.props.openWindow(\"window2\", \"surface2\")\n        // });\n        //\n        // $('.lbp-line-number').click(function(e) {\n        //   e.preventDefault();\n        //   const surfaceid = $(this).attr('data-surfaceid');\n        //   const ln = $(this).attr('data-ln');\n        //   const paragraphid = $(this).closest('.plaoulparagraph').attr(\"id\");\n        //\n        //   _this.props.setFocus(paragraphid)\n        //   _this.props.handleSurfaceFocusChange(\"http://scta.info/resource/\" + surfaceid)\n        //   _this.props.handleLineFocusChange(\"http://scta.info/resource/\" + surfaceid + \"/\" + ln)\n        //   _this.props.openWindow(\"window2\", \"surface2\")\n        // });\n\n        $('.appnote, .footnote').click(function(e) {\n          e.preventDefault();\n\n        });\n        $('.appnote, .footnote').parent().click(function(e) {\n             e.preventDefault();\n             const link = $(this).children('.appnote, .footnote')\n             const target = $(link).attr('href')\n             const text = $(target).html()\n             const targetText = $(this).children(\".note-display\").attr('data-target-id')\n             /// toggles highlight for select text segemnts\n             if (targetText){\n               $(\"#\" + targetText).toggleClass(\"highlight\")\n               $(\"span[data-corresp=\" + targetText + \"]\").toggleClass(\"highlight\")\n             }\n\n             //adds footnote text to noteDisplay Div and toggles hidden class\n             const noteDisplay = $(this).children(\".note-display\")\n             noteDisplay.toggleClass(\"hidden\")\n             noteDisplay.html(text)\n           });\n           $(document).on(\"click\", '.js-show-reference-paragraph', function(e){\n            e.preventDefault();\n            const target = $(this).attr('data-url')\n            const targetParagraph = $(this).attr('data-target-paragraph')\n            //setting paragraph focus for paragraph containing target footnote\n            _this.props.setFocus(targetParagraph)\n            // set the desired text preview focus to the target of the reference\n            _this.props.handleTextPreviewFocusChange(target)\n            //opening bottomw window 2 to textPreview\n            _this.props.openWindow(\"window2\", \"textPreview\")\n          })\n        })\n        .catch((e) => {\n          console.log(\"something went wrong\", e)\n          document.getElementById(\"text\").innerHTML = \"\";\n          document.getElementById(\"text\").innerHTML = \"<p>Apologies, the document is not able to be loaded at this time</p>\";\n        })\n      }\n  }\n\n  componentDidUpdate(prevProps, prevState){\n\n    //check to see if doc has changed\n    if (prevProps.doc !== this.props.doc){\n      this.retrieveText(this.props.doc, this.props.scrollTo, this.props.articleType)\n    }\n    // if doc has already been appended, still scroll to target block\n    else{\n      if (this.props.scrollTo !== prevProps.scrollTo){\n        scrollToParagraph(this.props.scrollTo, true)\n      }\n    }\n\n\n    //this.retrieveText(this.props.doc, this.props.topLevel, this.props.scrollTo)\n  }\n\n  componentDidMount(){\n    this.retrieveText(this.props.doc, this.props.scrollTo, this.props.articleType)\n  }\n\n  render(){\n\n    return (\n      <Container>\n        <div id=\"text\"></div>\n      </Container>\n    );\n  }\n}\n\nexport default TextArticle;\n","import React, {useState, useEffect} from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport {Link} from 'react-router-dom';\nimport Spinner from './Spinner';\nimport {runQuery} from './utils'\nimport {getResources} from '../queries/resourceTypeQuery'\n\n\nconst ResourceTypeList = (props) => {\n  const [resources, setResources] = useState([])\n  const [filter, setFilter] = useState(\"\")\n\n  useEffect(() => {\n    const results = runQuery(getResources(props.resourceTypeId))\n    setResources(\"fetching\")\n    results.then((d) => {\n      setResources(d.data.results.bindings)\n    })\n  }, [props.resourceTypeId])\n  return (\n    <Container className=\"collectionBody\">\n      <h1>{props.resourceTypeId}</h1>\n      <Form.Control as=\"input\" type=\"text\" placeholder=\"filter\" onChange={(e) => setFilter(e.target.value)} value={filter}/>\n      {resources === \"fetching\" ? <Spinner/> :\n      resources.map((r) => {\n        //check against error resources with ids\n        if (r.resource.value !== \"http://scta.info/resource/\"){\n          if (r.resourceTitle.value.includes(filter)){\n            return <p key={r.resource.value}><Link to={\"/text?resourceid=\" + r.resource.value}>{r.resourceTitle.value}</Link></p>\n          }\n          else{\n            return null\n          }\n        }\n        else{ \n          return null\n        }\n      })\n    }\n    </Container>\n\n  )\n}\n\nexport default ResourceTypeList;\n","export function getResources(resourceType){\n   const query = [\n     \"SELECT ?resource ?resourceTitle\",\n     \"{\",\n       \"?resource a <\" + resourceType + \"> .\",\n       \"?resource <http://purl.org/dc/elements/1.1/title> ?resourceTitle\",\n      \"}\",\n     \"ORDER BY ?resourceTitle\"].join('')\n  return query\n}\n","import React from 'react';\nimport Qs from \"query-string\";\nimport {Helmet} from \"react-helmet\";\nimport TextWrapper from \"./TextWrapper\"\nimport TextArticle from \"./TextArticle\"\nimport ResourceTypeList from './ResourceTypeList';\n\nimport {runQuery} from './utils'\nimport {getArticleTranscriptionDoc, getItemTranscriptionFromBlockDiv, getStructureType} from './Queries'\n\nclass TextSwitch extends React.Component {\n  constructor(props){\n    super(props)\n    this.handleUpdateUrlResource = this.handleUpdateUrlResource.bind(this)\n    this.state = {\n      displayType: \"\",\n      resourceid: \"\",\n      itemTranscriptionId: \"\",\n      blockDivFocus: \"\",\n      resourceTitle: \"\",\n      author: \"\",\n      authorTitle: \"\",\n      tokenRange: \"\"\n\n    }\n  }\n  handleUpdateUrlResource(fullid){\n    this.props.history.push({search: '?resourceid=' + fullid})\n  }\n  getInfo(resourceid){\n    let tokenRange;\n    if (resourceid.split(\"@\")[1]){\n      tokenRange = {start: parseInt(resourceid.split(\"@\")[1].split(\"-\")[0]), end: parseInt(resourceid.split(\"@\")[1].split(\"-\")[1])}\n    }\n    resourceid = resourceid.split(\"@\")[0]\n\n    const structureTypePromise = runQuery(getStructureType(resourceid))\n\n    structureTypePromise.then((t) => {\n      // reduce results to bindings variable\n      const bindings = t.data.results.bindings.length > 0 ? t.data.results.bindings[0] : \"\"\n      // get specific results from bindings data\n      const type = bindings.type ? bindings.type.value : null\n      const structureType = bindings.structureType ? bindings.structureType.value : null\n      //const level = bindings.level ? bindings.level.value : null\n      const topLevel = bindings.topLevel ? bindings.topLevel.value : resourceid\n      const itemParent = bindings.itemParent ? bindings.itemParent.value : null\n      const resourceTitle = bindings.resourceTitle ? bindings.resourceTitle.value : \"\"\n      const author = bindings.author ? bindings.author.value : \"\"\n      const authorTitle = bindings.authorTitle ? bindings.authorTitle.value : \"\"\n      const ctranscription = bindings.ctranscription ? bindings.ctranscription.value : \"\"\n\n      //const itemTranscriptionId = t.data.results.bindings[0].ctranscription ? t.data.results.bindings[0].ctranscription.value : null\n      if (resourceid === \"http://scta.info/resource/person\"){\n        this.setState({displayType: \"personList\", resourceid: resourceid, structureType: \"\", topLevel: \"\", type: \"\", resourceTitle: \"\"})\n      }\n      else if (resourceid === \"http://scta.info/resource/codex\"){\n        this.setState({displayType: \"codexList\", resourceid: resourceid, structureType: \"\", topLevel: \"\", type: \"\", resourceTitle: \"\"})\n      }\n      else if (resourceid === \"http://scta.info/resource/expressionType\"){\n        this.setState({displayType: \"expressionTypeList\", resourceid: resourceid, structureType: \"\", topLevel: \"\", type: \"\", resourceTitle: \"\"})\n      }\n      else if (type === \"http://scta.info/resource/expressionType\"){\n        this.setState({displayType: \"expressionType\", resourceid: resourceid, structureType: \"\", topLevel: \"\", type: \"\", resourceTitle: \"\"})\n      }\n      else if (type === \"http://scta.info/resource/person\"){\n        this.setState({displayType: \"person\", resourceid: resourceid, structureType: \"\", topLevel: \"\", type: type, resourceTitle: resourceTitle})\n      }\n      else if (type === \"http://scta.info/resource/article\"){\n        const structureTypePromise = runQuery(getArticleTranscriptionDoc(resourceid))\n        structureTypePromise.then((t) => {\n          this.setState(\n            {displayType: \"article\",\n            articleDoc: t.data.results.bindings[0] ? t.data.results.bindings[0].doc.value : \"\", // conditional checks in case the query comes up empty; if empty it sets transcription id to \"\"\n            articleType: t.data.results.bindings[0] ? t.data.results.bindings[0].articleType.value : \"\", // conditional checks in case the query comes up empty; if empty it sets transcription id to \"\"\n            resourceid: resourceid,\n            structureType: \"\", topLevel: \"\",\n            type: type,\n            resourceTitle: resourceTitle}\n          )\n        })\n\n      }\n      else if (type === \"http://scta.info/resource/codex\"){\n          this.setState({displayType: \"codex\", resourceid: resourceid, structureType: \"\", topLevel: \"\", type: type, resourceTitle: resourceTitle})\n      }\n      else if (type === \"http://scta.info/resource/surface\"){\n          this.setState({displayType: \"surface\", resourceid: resourceid, structureType: \"\", topLevel: \"\", type: type, resourceTitle: resourceTitle})\n      }\n      else if (type === \"http://iiif.io/api/presentation/2#Manifest\"){\n          this.setState({displayType: \"manifest\", resourceid: resourceid, structureType: \"\", topLevel: \"\", type: type, resourceTitle: resourceTitle})\n      }\n      else if (type === \"http://iiif.io/api/presentation/2#Canvas\"){\n          this.setState({displayType: \"canvas\", resourceid: resourceid, structureType: \"\", topLevel: \"\", type: type, resourceTitle: resourceTitle})\n      }\n      else if (type === \"http://scta.info/resource/workGroup\"){\n          this.setState({displayType: \"workGroup\", resourceid: resourceid, structureType: structureType, topLevel: topLevel, type: type, resourceTitle: resourceTitle})\n      }\n      else if (structureType === \"http://scta.info/resource/structureCollection\"){\n          this.setState({\n            displayType: \"collection\", \n            transcriptionid: ctranscription,\n            resourceid: resourceid, \n            //TODO: this is a hacky way to get expression id; it should be retrievable from the query itself\n            expressionid: \"http://scta.info/resource/\" + resourceid.split(\"/resource/\")[1].split(\"/\")[0],\n            structureType: structureType, \n            topLevel: topLevel, \n            type: type, \n            resourceTitle: resourceTitle, \n            author: author, \n            authorTitle: authorTitle\n          }\n          )\n      }\n      else if (structureType === \"http://scta.info/resource/structureItem\" ){\n       // if (type === \"http://scta.info/resource/transcription\"){\n          this.setState({\n            itemTranscriptionId: ctranscription,\n            displayType: \"item\", \n            resourceid: resourceid, // focused resource introduced via url parameter\n            //TODO: this is a hacky way to get expression id; it should be retrievable from the query itself\n            expressionid: \"http://scta.info/resource/\" + resourceid.split(\"/resource/\")[1].split(\"/\")[0],\n            transcriptionid: ctranscription,\n            resourceTitle: resourceTitle, \n            tokenRange: tokenRange,\n          })\n        }\n      else if (structureType === \"http://scta.info/resource/structureElement\" || structureType === \"http://scta.info/resource/structureBlock\" || structureType === \"http://scta.info/resource/structureDivision\" ){\n        const structureTypePromise = runQuery(getItemTranscriptionFromBlockDiv(resourceid))\n        structureTypePromise.then((t) => {\n          // if transcription\n          if (type === \"http://scta.info/resource/transcription\"){\n            this.setState({\n              itemTranscriptionId: itemParent, \n              resourceid: resourceid, // focused resource introduced via url parameter\n              expressionid: t.data.results.bindings[0].blockDivExpression.value,\n              transcriptionid: resourceid,\n              displayType: \"item\", \n              resourceTitle: resourceTitle, \n              tokenRange: tokenRange\n            })\n          }\n          // if expression\n          else if (type === \"http://scta.info/resource/expression\"){\n            if (t.data.results.bindings[0].ctranscription){\n              this.setState({\n                itemTranscriptionId: t.data.results.bindings[0].ctranscription.value, \n                resourceid: resourceid, // focused resource introduced via url parameter\n                expressionid: resourceid,\n                transcriptionid: \"this would be the focus transcription id\",\n                displayType: \"item\", \n                resourceTitle: resourceTitle, \n                tokenRange: tokenRange})\n            }\n            else{\n              this.setState({displayType: \"notFound\"})\n            }\n          }\n          // if manifestation\n          else {\n            this.setState(\n              {itemTranscriptionId: t.data.results.bindings[0].ctranscription.value, \n              resourceid: resourceid, // focused resource introduced via url parameter\n              expressionid: t.data.results.bindings[0].blockDivExpression.value,\n              transcriptionid: \"this would be the focus transcription id\",\n              displayType: \"item\", \n              resourceTitle: resourceTitle, \n              tokenRange: tokenRange})\n          }\n        });\n      }\n      else{\n        this.setState({displayType: \"notFound\"})\n      }\n    });\n  }\n\n  componentDidMount(){\n    // conditional to only get info when props.location exists\n    if (this.props.location){\n      const newResourceId = Qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).resourceid\n      if (newResourceId.includes(\"https://scta.info/\")){\n        this.handleUpdateUrlResource(newResourceId.replace(\"https://scta.info/\", \"http://scta.info/\"))\n      }\n      else{\n        this.getInfo(newResourceId)\n      }\n    }\n  }\n  \n  componentDidUpdate(prevProps) {\n    const newResourceId = Qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).resourceid\n    const oldResourceId = Qs.parse(prevProps.location.search, { ignoreQueryPrefix: true }).resourceid\n    if (newResourceId !== oldResourceId){\n      if (newResourceId.includes(\"https://scta.info/\")){\n        this.handleUpdateUrlResource(newResourceId.replace(\"https://scta.info/\", \"http://scta.info/\"))\n      }\n      else{\n        this.getInfo(newResourceId)\n      }\n    }\n  }\n\n\n\n  render(){\n    const display = () => {\n      if (this.state.displayType === \"personList\"){\n        return (<ResourceTypeList resourceTypeId=\"http://scta.info/resource/person\"/>)\n      }\n      else if (this.state.displayType === \"codexList\"){\n        return (<ResourceTypeList resourceTypeId=\"http://scta.info/resource/codex\"/>)\n      }\n      else if (this.state.displayType === \"expressionTypeList\"){\n        return (<ResourceTypeList resourceTypeId=\"http://scta.info/resource/expressionType\"/>)\n      }\n      else if (this.state.displayType === \"person\"){\n        return (\n        // <AuthorCollection resourceid={this.state.resourceid}/>\n        <TextWrapper \n          resourceid={this.state.resourceid}\n          resourceType=\"person\"\n          handleUpdateUrlResource={this.handleUpdateUrlResource}\n          />\n        )\n\n      }\n      else if (this.state.displayType === \"article\"){\n        return (<TextArticle doc={this.state.articleDoc} articleType={this.state.articleType}/>)\n\n      }\n      else if (this.state.displayType === \"workGroup\"){\n        //TODO: this conditional should be comined with the conditional below\n        return (\n          // <Collection resourceid={this.state.resourceid} structureType={this.state.structureType} topLevel={this.state.topLevel} type={this.state.type}/>\n        <TextWrapper \n        resourceid={this.state.resourceid}\n        resourceType=\"workGroup\"\n        handleUpdateUrlResource={this.handleUpdateUrlResource}\n        />\n      )\n      }\n      else if (this.state.displayType === \"collection\"){\n        return (\n          <TextWrapper \n          resourceid={this.state.resourceid}\n          expressionid={this.state.expressionid}\n          transcriptionid={this.state.transcriptionid}\n          resourceType=\"collection\"\n          handleUpdateUrlResource={this.handleUpdateUrlResource}\n          />\n          )\n      }\n      else if (this.state.displayType === \"item\"){\n        // check to see if a transcription for this text has been found\n        if (this.state.itemTranscriptionId){\n          return (\n            <TextWrapper \n            resourceid={this.state.resourceid}\n            expressionid={this.state.expressionid}\n            transcriptionid={this.state.transcriptionid}\n            tokenRange={this.state.tokenRange}\n            itemTranscriptionId={this.state.itemTranscriptionId}\n            handleUpdateUrlResource={this.handleUpdateUrlResource}\n            />\n          )\n        }\n        // if no transcription resource id, exists return message\n        else{\n          return (<p>Apologies, no transcriptions of this text are currently available.</p>)\n\n\n        }\n      }\n      else if (this.state.displayType === \"codex\" \n      || this.state.displayType === \"surface\" \n      || this.state.displayType === \"canvas\" \n      || this.state.displayType === \"manifest\"){\n        return (\n        // <Codex codexid={this.state.resourceid}/>\n        <TextWrapper \n        resourceid={this.state.resourceid}\n        resourceType=\"codex\"\n        codexResourceType={this.state.displayType}\n        handleUpdateUrlResource={this.handleUpdateUrlResource}\n        />\n        \n        )\n      }\n      // else if (this.state.displayType === \"surface\"){\n      //   return (<Codex surfaceid={this.state.resourceid}/>)\n      // }\n      // else if (this.state.displayType === \"canvas\"){\n      //   return (<Codex canvasid={this.state.resourceid}/>)\n      // }\n      // else if (this.state.displayType === \"manifest\"){\n      //   return (<Codex manifestid={this.state.resourceid}/>)\n      // }\n      else if (this.state.displayType === \"expressionType\"){\n        return (\n            <TextWrapper \n            resourceid={this.state.resourceid}\n            resourceType=\"expressionType\"\n            handleUpdateUrlResource={this.handleUpdateUrlResource}\n            />\n          )\n      }\n      else if (this.state.displayType === \"notFound\"){\n        return (<p>Apologies, this resource could not be found</p>)\n      }\n      else{\n        return null\n      }\n    }\n  const dctype = () => {\n    if (this.state.displayType === \"codex\"){\n      return <meta name=\"BIB.type\" content=\"Manuscript\"/>\n    }\n    else{\n      return <meta name=\"DC.type\" content=\"document\"/>\n    }\n  }\n  return (\n    <div>\n      <Helmet>\n        <title>{this.state.resourceTitle}</title>\n        <link rel=\"schema.DC\" href=\"http://purl.org/dc/elements/1.1/\" ></link>\n        <link rel=\"schema.DCTERMS\" href=\"http://purl.org/dc/terms/\"/>\n        <link rel=\"schema.BIB\" href=\"http://purl.org/net/biblio#\"/>\n        {dctype()}\n        <meta name=\"DC.identifier\" content={this.state.resourceid}/>\n        {//<meta name=\"DC.description\" content=\"test description\"/>\n        }\n        <meta name=\"DC.title\" content={this.state.resourceTitle}/>\n        <meta name=\"DC.creator\" content={this.state.authorTitle}/>\n        <meta name=\"DC.Language\" content=\"la\"/>\n        <meta name=\"DC.Publisher\" content=\"SCTA\"/>\n        \n      </Helmet>\n      {display()}\n    </div>\n    \n    );\n  }\n\n}\n\nexport default TextSwitch;\n","import React from 'react';\n\nfunction About() {\n  return (\n    <div className=\"About\">\n    <h1>About</h1>\n\n    </div>\n  );\n}\n\nexport default About;\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport {resourceEndpoint} from './config';\nimport {useTranslation} from 'react-i18next'\n\nfunction NavBar() {\n  const {t} = useTranslation();\n  return (\n    <Navbar bg=\"dark\" variant=\"light\" expand=\"lg\" fixed=\"top\">\n      <Nav>\n        <NavLink className=\"nav-link\" to=\"/\">{t(\"Title\")}</NavLink>\n      </Nav>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n      <Nav>\n\n\n\n        <NavLink className=\"nav-link\" to={\"/res?resourceid=\" + resourceEndpoint}>{t(\"Texts\")}</NavLink>\n        <NavLink className=\"nav-link\" to={\"/res?resourceid=http://scta.info/resource/person\"}>{t(\"People\")}</NavLink>\n        <NavLink className=\"nav-link\" to={\"/res?resourceid=http://scta.info/resource/codex\"}>{t(\"Codices\")}</NavLink>\n        {// example drop down\n          // <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n        //   <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n        //   <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n        //   <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n        //   <NavDropdown.Divider />\n        //   <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n        // </NavDropdown>\n      }\n      {/* <NavLink className=\"nav-link\" to=\"/search\">{t(\"Search\")}</NavLink> */}\n      </Nav>\n\n      <Nav>\n        {\n          //<NavLink className=\"nav-link\" to=\"/about\">{t(\"About\")}</NavLink>\n        }\n        <a className=\"nav-link\" href=\"https://scta.info/donate\">{t(\"Donate\")}</a>\n      </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n\n  );\n}\n\nexport default NavBar;\n","import React from 'react';\n\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport {useTranslation} from 'react-i18next'\n\n\n\n\n\nfunction Footer() {\n  const {t} = useTranslation();\n  return (\n\n    <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" fixed=\"bottom\" style={{\"zIndex\": \"1\"}}>\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n    <Navbar.Collapse id=\"basic-navbar-nav\">\n\n    <Nav style={{\"display\": \"flex\", \"justifyContent\": \"space-around\", \"width\": \"100%\"}}>\n      <Nav.Link href=\"http://github.com/lombardpress/lombardpress-webjs\">Lbp-Web.js</Nav.Link>\n      <Nav.Link href=\"http://lombardpress.org\">{t(\"A LombardPress Publication\")}</Nav.Link>\n      <Nav.Link href=\"http://scta.info\">{t(\"Powered by SCTA Data\")} </Nav.Link>\n      <Nav.Link href=\"http://jeffreycwitt.com\">{t(\"Designed by Jeffrey C Witt\")}</Nav.Link>\n    </Nav>\n    </Navbar.Collapse>\n\n    </Navbar>\n\n  );\n}\n\nexport default Footer;\n","import React, {Suspense} from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport Home from \"./Home\"\nimport Search3 from \"./Search3\"\nimport TextSwitch from \"./TextSwitch\"\nimport About from \"./About\"\nimport NavBar from './NavBar';\nimport Spinner from './Spinner';\nimport Footer from './Footer';\nimport OSDInstance from './OSDInstance';\n\nimport 'bootstrap/dist/css/bootstrap.css'\nimport '../styles/App.scss';\n//import '../styles/index.scss';\n\nconst AppRouter = () => {\n  return (\n  <Suspense fallback={<Spinner/>}>\n    <BrowserRouter forceRefresh={false}>\n      <div>\n        <NavBar/>\n        <Switch>\n          <Route path=\"/\" exact={true} component={Home}/>\n          <Route path=\"/res\" exact={true} component={TextSwitch}/>\n          <Route path=\"/text\"  exact={true} component={TextSwitch}/>\n          <Route path=\"/about\" exact={true} component={About}/>\n          <Route path=\"/search\" exact={true} component={Search3}/>\n          <Route path=\"/osd\" exact={true} component={OSDInstance}/>\n          {\n            //<Route path=\"/edit/:id\" exact={true} component={EditExpensePage}/>\n          //<Route path=\"/help\" exact={true} component={HelpPage}/>\n          // <Route component={NotFoundPage}/>\n          }\n        </Switch>\n        <Footer/>\n      </div>\n    </BrowserRouter>\n  </Suspense>\n)\n}\n\nexport default AppRouter\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport Backend from 'i18next-xhr-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n// not like to use this?\n// have a look at the Quick start guide\n// for passing in lng and translations on init\n\ni18n\n  // load translation using xhr -> see /public/locales\n  // learn more: https://github.com/i18next/i18next-xhr-backend\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    fallbackLng: \"en\",\n    debug: true,\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    }\n  });\n\n\nexport default i18n;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './styles/index.scss';\nimport AppRouter from './components/AppRouter';\nimport * as serviceWorker from './serviceWorker';\nimport './i18n';\n\nReactDOM.render(<AppRouter/>, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}